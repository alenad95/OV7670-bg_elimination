-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter_Convolution is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    id_filter_V : IN STD_LOGIC_VECTOR (2 downto 0);
    in_img_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    in_img_V_TVALID : IN STD_LOGIC;
    in_img_V_TREADY : OUT STD_LOGIC;
    out_img_V_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_img_V_TVALID : OUT STD_LOGIC;
    out_img_V_TREADY : IN STD_LOGIC );
end;


architecture behav of Filter_Convolution is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "Filter_Convolution,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.180000,HLS_SYN_LAT=308344,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=9,HLS_SYN_FF=785,HLS_SYN_LUT=598}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st25_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv19_4B461 : STD_LOGIC_VECTOR (18 downto 0) := "1001011010001100001";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv10_281 : STD_LOGIC_VECTOR (9 downto 0) := "1010000001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_1E0 : STD_LOGIC_VECTOR (8 downto 0) := "111100000";
    constant ap_const_lv10_280 : STD_LOGIC_VECTOR (9 downto 0) := "1010000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_21 : BOOLEAN;
    signal window_V_0_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_1_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_2_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal M_0_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal M_0_0_ce0 : STD_LOGIC;
    signal M_0_0_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal M_0_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal M_0_1_ce0 : STD_LOGIC;
    signal M_0_1_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal M_0_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal M_0_2_ce0 : STD_LOGIC;
    signal M_0_2_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal M_1_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal M_1_0_ce0 : STD_LOGIC;
    signal M_1_0_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal M_1_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal M_1_1_ce0 : STD_LOGIC;
    signal M_1_1_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal M_1_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal M_1_2_ce0 : STD_LOGIC;
    signal M_1_2_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal M_2_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal M_2_0_ce0 : STD_LOGIC;
    signal M_2_0_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal M_2_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal M_2_1_ce0 : STD_LOGIC;
    signal M_2_1_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal M_2_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal M_2_2_ce0 : STD_LOGIC;
    signal M_2_2_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal SumF_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal SumF_ce0 : STD_LOGIC;
    signal SumF_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal Offset_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal Offset_ce0 : STD_LOGIC;
    signal Offset_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_0_ce0 : STD_LOGIC;
    signal line_buffer_V_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_0_ce1 : STD_LOGIC;
    signal line_buffer_V_0_we1 : STD_LOGIC;
    signal line_buffer_V_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_1_ce0 : STD_LOGIC;
    signal line_buffer_V_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_1_ce1 : STD_LOGIC;
    signal line_buffer_V_1_we1 : STD_LOGIC;
    signal window_V_0_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_1_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_2_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal in_img_V_TDATA_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_148 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it11 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it12 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it13 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it14 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it15 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it16 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it17 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it18 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it19 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it20 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it21 : STD_LOGIC := '0';
    signal exitcond_flatten_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_img_V_TDATA_blk_n : STD_LOGIC;
    signal or_cond_reg_947 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_947_pp0_iter20 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_308 : STD_LOGIC_VECTOR (18 downto 0);
    signal row_reg_319 : STD_LOGIC_VECTOR (8 downto 0);
    signal col_reg_330 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_7_cast_fu_368_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_7_cast_reg_848 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_247 : BOOLEAN;
    signal tmp_28_0_1_fu_372_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_28_0_1_reg_853 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_28_0_2_cast_fu_376_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_28_0_2_cast_reg_858 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_28_1_fu_380_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_28_1_reg_863 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_28_1_1_cast_fu_384_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_28_1_1_cast_reg_868 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_28_1_2_cast_fu_388_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_28_1_2_cast_reg_873 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_28_2_cast_fu_392_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_28_2_cast_reg_878 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_28_2_1_fu_396_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_28_2_1_reg_883 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_28_2_2_cast_fu_400_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_28_2_2_cast_reg_888 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_op_assign_3_tr_tr_tr_cast_fu_404_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_3_tr_tr_tr_cast_reg_893 : STD_LOGIC_VECTOR (13 downto 0);
    signal Offset_load_reg_898 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_flatten_reg_903 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_271 : BOOLEAN;
    signal ap_sig_ioackin_out_img_V_TREADY : STD_LOGIC;
    signal ap_reg_ppstg_exitcond_flatten_reg_903_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_429_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal col_mid2_fu_441_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal col_mid2_reg_912 : STD_LOGIC_VECTOR (9 downto 0);
    signal row_mid2_fu_495_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_4_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_922 : STD_LOGIC_VECTOR (0 downto 0);
    signal line_buffer_V_0_addr_reg_926 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_reg_937 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_temp_V_reg_941 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_cond_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_947_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_947_pp0_iter2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_947_pp0_iter3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_947_pp0_iter4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_947_pp0_iter5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_947_pp0_iter6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_947_pp0_iter7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_947_pp0_iter8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_947_pp0_iter9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_947_pp0_iter10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_947_pp0_iter11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_947_pp0_iter12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_947_pp0_iter13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_947_pp0_iter14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_947_pp0_iter15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_947_pp0_iter16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_947_pp0_iter17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_947_pp0_iter18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_947_pp0_iter19 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_1_fu_539_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal in_temp_V_1_load_reg_956 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_1_2_loc_1_load_reg_961 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_window_V_1_2_loc_1_load_reg_961_pp0_iter2 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_0_2_loc_1_load_reg_966 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_0_1_fu_598_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_29_0_1_reg_971 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_29_1_fu_607_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_29_1_reg_976 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_29_2_1_fu_616_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_29_2_1_reg_981 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_29_1_2_fu_660_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_29_1_2_reg_986 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp1_fu_679_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_reg_991 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_733_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp6_reg_996 : STD_LOGIC_VECTOR (11 downto 0);
    signal out_temp_V_215_2_fu_713_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal out_temp_V_215_2_reg_1001 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_1_fu_341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_509_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_586_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal in_temp_V_1_fu_106 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_1_2_loc_1_fu_110 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_0_2_loc_1_fu_114 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ioackin_out_img_V_TREADY : STD_LOGIC := '0';
    signal exitcond_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_s_fu_449_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_mid1_fu_455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp8_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_mid1_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_fu_467_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_mid2_fu_487_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_0_1_fu_598_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_0_1_fu_598_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_29_1_fu_607_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_1_fu_607_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_29_2_1_fu_616_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_2_1_fu_616_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_29_1_2_fu_660_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_1_2_fu_660_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_755_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_740_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp2_cast_fu_673_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp3_cast_fu_676_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_762_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_747_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp5_cast_fu_697_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp6_cast_fu_700_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp4_fu_703_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp1_cast_fu_694_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp4_cast_fu_709_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_719_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_719_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_fu_723_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_733_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_733_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_740_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_740_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_747_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_747_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_755_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_755_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_762_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_762_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_719_ce : STD_LOGIC;
    signal ap_sig_cseq_ST_st25_fsm_3 : STD_LOGIC;
    signal ap_sig_743 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_733_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_740_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_747_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_755_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_762_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_29_0_1_fu_598_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_29_1_2_fu_660_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_29_1_fu_607_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_29_2_1_fu_616_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_786 : BOOLEAN;
    signal ap_sig_209 : BOOLEAN;

    component Filter_Convolution_sdiv_14ns_6ns_14_18 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component Filter_Convolution_mac_muladd_8ns_2s_11s_12_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (1 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component Filter_Convolution_mac_muladd_8ns_2s_11ns_11_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (1 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component Filter_Convolution_mac_muladd_8ns_3ns_11s_12_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component Filter_Convolution_mac_muladd_8ns_2ns_11ns_11_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (1 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component Filter_Convolution_M_0_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component Filter_Convolution_M_0_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component Filter_Convolution_M_0_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component Filter_Convolution_M_1_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component Filter_Convolution_M_1_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component Filter_Convolution_M_1_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component Filter_Convolution_M_2_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component Filter_Convolution_M_2_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component Filter_Convolution_M_2_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component Filter_Convolution_SumF IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component Filter_Convolution_Offset IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Filter_Convolution_line_buffer_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    M_0_0_U : component Filter_Convolution_M_0_0
    generic map (
        DataWidth => 2,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => M_0_0_address0,
        ce0 => M_0_0_ce0,
        q0 => M_0_0_q0);

    M_0_1_U : component Filter_Convolution_M_0_1
    generic map (
        DataWidth => 3,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => M_0_1_address0,
        ce0 => M_0_1_ce0,
        q0 => M_0_1_q0);

    M_0_2_U : component Filter_Convolution_M_0_2
    generic map (
        DataWidth => 2,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => M_0_2_address0,
        ce0 => M_0_2_ce0,
        q0 => M_0_2_q0);

    M_1_0_U : component Filter_Convolution_M_1_0
    generic map (
        DataWidth => 3,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => M_1_0_address0,
        ce0 => M_1_0_ce0,
        q0 => M_1_0_q0);

    M_1_1_U : component Filter_Convolution_M_1_1
    generic map (
        DataWidth => 3,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => M_1_1_address0,
        ce0 => M_1_1_ce0,
        q0 => M_1_1_q0);

    M_1_2_U : component Filter_Convolution_M_1_2
    generic map (
        DataWidth => 3,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => M_1_2_address0,
        ce0 => M_1_2_ce0,
        q0 => M_1_2_q0);

    M_2_0_U : component Filter_Convolution_M_2_0
    generic map (
        DataWidth => 2,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => M_2_0_address0,
        ce0 => M_2_0_ce0,
        q0 => M_2_0_q0);

    M_2_1_U : component Filter_Convolution_M_2_1
    generic map (
        DataWidth => 3,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => M_2_1_address0,
        ce0 => M_2_1_ce0,
        q0 => M_2_1_q0);

    M_2_2_U : component Filter_Convolution_M_2_2
    generic map (
        DataWidth => 2,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => M_2_2_address0,
        ce0 => M_2_2_ce0,
        q0 => M_2_2_q0);

    SumF_U : component Filter_Convolution_SumF
    generic map (
        DataWidth => 5,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => SumF_address0,
        ce0 => SumF_ce0,
        q0 => SumF_q0);

    Offset_U : component Filter_Convolution_Offset
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Offset_address0,
        ce0 => Offset_ce0,
        q0 => Offset_q0);

    line_buffer_V_0_U : component Filter_Convolution_line_buffer_V_0
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_V_0_address0,
        ce0 => line_buffer_V_0_ce0,
        q0 => line_buffer_V_0_q0,
        address1 => line_buffer_V_0_addr_reg_926,
        ce1 => line_buffer_V_0_ce1,
        we1 => line_buffer_V_0_we1,
        d1 => line_buffer_V_1_q0);

    line_buffer_V_1_U : component Filter_Convolution_line_buffer_V_0
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_V_1_address0,
        ce0 => line_buffer_V_1_ce0,
        q0 => line_buffer_V_1_q0,
        address1 => line_buffer_V_1_address1,
        ce1 => line_buffer_V_1_ce1,
        we1 => line_buffer_V_1_we1,
        d1 => in_temp_V_reg_941);

    Filter_Convolution_sdiv_14ns_6ns_14_18_U0 : component Filter_Convolution_sdiv_14ns_6ns_14_18
    generic map (
        ID => 1,
        NUM_STAGE => 18,
        din0_WIDTH => 14,
        din1_WIDTH => 6,
        dout_WIDTH => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => out_temp_V_215_2_reg_1001,
        din1 => grp_fu_719_p1,
        ce => grp_fu_719_ce,
        dout => grp_fu_719_p2);

    Filter_Convolution_mac_muladd_8ns_2s_11s_12_1_U1 : component Filter_Convolution_mac_muladd_8ns_2s_11s_12_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 11,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_733_p0,
        din1 => grp_fu_733_p1,
        din2 => grp_fu_762_p3,
        dout => grp_fu_733_p3);

    Filter_Convolution_mac_muladd_8ns_2s_11ns_11_1_U2 : component Filter_Convolution_mac_muladd_8ns_2s_11ns_11_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        din0 => grp_fu_740_p0,
        din1 => grp_fu_740_p1,
        din2 => tmp_29_1_reg_976,
        dout => grp_fu_740_p3);

    Filter_Convolution_mac_muladd_8ns_3ns_11s_12_1_U3 : component Filter_Convolution_mac_muladd_8ns_3ns_11s_12_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 3,
        din2_WIDTH => 11,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_747_p0,
        din1 => grp_fu_747_p1,
        din2 => tmp_29_1_2_reg_986,
        dout => grp_fu_747_p3);

    Filter_Convolution_mac_muladd_8ns_2s_11ns_11_1_U4 : component Filter_Convolution_mac_muladd_8ns_2s_11ns_11_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        din0 => grp_fu_755_p0,
        din1 => grp_fu_755_p1,
        din2 => tmp_29_0_1_reg_971,
        dout => grp_fu_755_p3);

    Filter_Convolution_mac_muladd_8ns_2ns_11ns_11_1_U5 : component Filter_Convolution_mac_muladd_8ns_2ns_11ns_11_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        din0 => grp_fu_762_p0,
        din1 => grp_fu_762_p1,
        din2 => tmp_29_2_1_reg_981,
        dout => grp_fu_762_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ioackin_out_img_V_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_out_img_V_TREADY <= ap_const_logic_0;
            else
                if (ap_sig_209) then
                    if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                        ap_reg_ioackin_out_img_V_TREADY <= ap_const_logic_0;
                    elsif (ap_sig_786) then 
                        ap_reg_ioackin_out_img_V_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((exitcond_flatten_fu_423_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                    ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                    ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                    ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                    ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                    ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                    ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                    ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                    ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                    ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                    ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then
                    if (not((ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
                        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) then 
                        ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                    ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                    ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
                    ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
                end if; 
            end if;
        end if;
    end process;


    col_reg_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_423_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
                col_reg_330 <= col_1_fu_539_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
                col_reg_330 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    in_temp_V_1_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = exitcond_flatten_reg_903) and not((ap_const_lv1_0 = tmp_s_reg_937)))) then 
                in_temp_V_1_fu_106 <= in_temp_V_reg_941;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
                in_temp_V_1_fu_106 <= window_V_2_2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_423_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
                indvar_flatten_reg_308 <= indvar_flatten_next_fu_429_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
                indvar_flatten_reg_308 <= ap_const_lv19_0;
            end if; 
        end if;
    end process;

    row_reg_319_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_423_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
                row_reg_319 <= row_mid2_fu_495_p3;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
                row_reg_319 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    window_V_0_2_loc_1_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = exitcond_flatten_reg_903) and not((ap_const_lv1_0 = tmp_4_reg_922)))) then 
                window_V_0_2_loc_1_fu_114 <= line_buffer_V_0_q0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
                window_V_0_2_loc_1_fu_114 <= window_V_0_2;
            end if; 
        end if;
    end process;

    window_V_1_2_loc_1_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = exitcond_flatten_reg_903) and not((ap_const_lv1_0 = tmp_4_reg_922)))) then 
                window_V_1_2_loc_1_fu_110 <= line_buffer_V_1_q0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
                window_V_1_2_loc_1_fu_110 <= window_V_1_2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                Offset_load_reg_898 <= Offset_q0;
                    i_op_assign_3_tr_tr_tr_cast_reg_893(4 downto 0) <= i_op_assign_3_tr_tr_tr_cast_fu_404_p1(4 downto 0);
                tmp_28_0_1_reg_853 <= tmp_28_0_1_fu_372_p1;
                tmp_28_0_2_cast_reg_858 <= tmp_28_0_2_cast_fu_376_p1;
                    tmp_28_1_1_cast_reg_868(2 downto 0) <= tmp_28_1_1_cast_fu_384_p1(2 downto 0);
                tmp_28_1_2_cast_reg_873 <= tmp_28_1_2_cast_fu_388_p1;
                tmp_28_1_reg_863 <= tmp_28_1_fu_380_p1;
                tmp_28_2_1_reg_883 <= tmp_28_2_1_fu_396_p1;
                    tmp_28_2_2_cast_reg_888(1 downto 0) <= tmp_28_2_2_cast_fu_400_p1(1 downto 0);
                tmp_28_2_cast_reg_878 <= tmp_28_2_cast_fu_392_p1;
                tmp_7_cast_reg_848 <= tmp_7_cast_fu_368_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then
                ap_reg_ppstg_exitcond_flatten_reg_903_pp0_iter1 <= exitcond_flatten_reg_903;
                ap_reg_ppstg_or_cond_reg_947_pp0_iter1 <= or_cond_reg_947;
                exitcond_flatten_reg_903 <= exitcond_flatten_fu_423_p2;
                in_temp_V_1_load_reg_956 <= in_temp_V_1_fu_106;
                window_V_0_2_loc_1_load_reg_966 <= window_V_0_2_loc_1_fu_114;
                window_V_1_2_loc_1_load_reg_961 <= window_V_1_2_loc_1_fu_110;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then
                ap_reg_ppstg_or_cond_reg_947_pp0_iter10 <= ap_reg_ppstg_or_cond_reg_947_pp0_iter9;
                ap_reg_ppstg_or_cond_reg_947_pp0_iter11 <= ap_reg_ppstg_or_cond_reg_947_pp0_iter10;
                ap_reg_ppstg_or_cond_reg_947_pp0_iter12 <= ap_reg_ppstg_or_cond_reg_947_pp0_iter11;
                ap_reg_ppstg_or_cond_reg_947_pp0_iter13 <= ap_reg_ppstg_or_cond_reg_947_pp0_iter12;
                ap_reg_ppstg_or_cond_reg_947_pp0_iter14 <= ap_reg_ppstg_or_cond_reg_947_pp0_iter13;
                ap_reg_ppstg_or_cond_reg_947_pp0_iter15 <= ap_reg_ppstg_or_cond_reg_947_pp0_iter14;
                ap_reg_ppstg_or_cond_reg_947_pp0_iter16 <= ap_reg_ppstg_or_cond_reg_947_pp0_iter15;
                ap_reg_ppstg_or_cond_reg_947_pp0_iter17 <= ap_reg_ppstg_or_cond_reg_947_pp0_iter16;
                ap_reg_ppstg_or_cond_reg_947_pp0_iter18 <= ap_reg_ppstg_or_cond_reg_947_pp0_iter17;
                ap_reg_ppstg_or_cond_reg_947_pp0_iter19 <= ap_reg_ppstg_or_cond_reg_947_pp0_iter18;
                ap_reg_ppstg_or_cond_reg_947_pp0_iter2 <= ap_reg_ppstg_or_cond_reg_947_pp0_iter1;
                ap_reg_ppstg_or_cond_reg_947_pp0_iter20 <= ap_reg_ppstg_or_cond_reg_947_pp0_iter19;
                ap_reg_ppstg_or_cond_reg_947_pp0_iter3 <= ap_reg_ppstg_or_cond_reg_947_pp0_iter2;
                ap_reg_ppstg_or_cond_reg_947_pp0_iter4 <= ap_reg_ppstg_or_cond_reg_947_pp0_iter3;
                ap_reg_ppstg_or_cond_reg_947_pp0_iter5 <= ap_reg_ppstg_or_cond_reg_947_pp0_iter4;
                ap_reg_ppstg_or_cond_reg_947_pp0_iter6 <= ap_reg_ppstg_or_cond_reg_947_pp0_iter5;
                ap_reg_ppstg_or_cond_reg_947_pp0_iter7 <= ap_reg_ppstg_or_cond_reg_947_pp0_iter6;
                ap_reg_ppstg_or_cond_reg_947_pp0_iter8 <= ap_reg_ppstg_or_cond_reg_947_pp0_iter7;
                ap_reg_ppstg_or_cond_reg_947_pp0_iter9 <= ap_reg_ppstg_or_cond_reg_947_pp0_iter8;
                ap_reg_ppstg_window_V_1_2_loc_1_load_reg_961_pp0_iter2 <= window_V_1_2_loc_1_load_reg_961;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_fu_423_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then
                col_mid2_reg_912 <= col_mid2_fu_441_p3;
                or_cond_reg_947 <= or_cond_fu_533_p2;
                tmp_4_reg_922 <= tmp_4_fu_503_p2;
                tmp_s_reg_937 <= tmp_s_fu_515_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_fu_423_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_s_fu_515_p2)) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then
                in_temp_V_reg_941 <= in_img_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_fu_423_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((ap_const_lv1_0 = tmp_4_fu_503_p2)))) then
                line_buffer_V_0_addr_reg_926 <= tmp_6_fu_509_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter2)))) then
                out_temp_V_215_2_reg_1001 <= out_temp_V_215_2_fu_713_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter1)))) then
                tmp1_reg_991 <= tmp1_fu_679_p2;
                tmp_29_1_2_reg_986 <= tmp_29_1_2_fu_660_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter1)))) then
                tmp6_reg_996 <= grp_fu_733_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = exitcond_flatten_reg_903) and not((ap_const_lv1_0 = or_cond_reg_947)))) then
                tmp_29_0_1_reg_971 <= tmp_29_0_1_fu_598_p2;
                tmp_29_1_reg_976 <= tmp_29_1_fu_607_p2;
                tmp_29_2_1_reg_981 <= tmp_29_2_1_fu_616_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_903_pp0_iter1))) then
                window_V_0_1 <= window_V_0_2_loc_1_load_reg_966;
                window_V_2_1 <= in_temp_V_1_load_reg_956;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = exitcond_flatten_reg_903) and not((ap_const_lv1_0 = tmp_4_reg_922)))) then
                window_V_0_2 <= line_buffer_V_0_q0;
                window_V_1_2 <= line_buffer_V_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = exitcond_flatten_reg_903))) then
                window_V_1_1 <= window_V_1_2_loc_1_fu_110;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_423_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_s_fu_515_p2)) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then
                window_V_2_2 <= in_img_V_TDATA;
            end if;
        end if;
    end process;
    tmp_28_1_1_cast_reg_868(10 downto 3) <= "00000000";
    tmp_28_2_2_cast_reg_888(9 downto 2) <= "00000000";
    i_op_assign_3_tr_tr_tr_cast_reg_893(13 downto 5) <= "000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it20, ap_reg_ppiten_pp0_it21, ap_reg_ppstg_or_cond_reg_947_pp0_iter20, ap_sig_271, ap_sig_ioackin_out_img_V_TREADY)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it20)))) and not(((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it20))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) then
                    ap_NS_fsm <= ap_ST_st25_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_st25_fsm_3 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    M_0_0_address0 <= tmp_1_fu_341_p1(3 - 1 downto 0);

    M_0_0_ce0_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            M_0_0_ce0 <= ap_const_logic_1;
        else 
            M_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    M_0_1_address0 <= tmp_1_fu_341_p1(3 - 1 downto 0);

    M_0_1_ce0_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            M_0_1_ce0 <= ap_const_logic_1;
        else 
            M_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    M_0_2_address0 <= tmp_1_fu_341_p1(3 - 1 downto 0);

    M_0_2_ce0_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            M_0_2_ce0 <= ap_const_logic_1;
        else 
            M_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    M_1_0_address0 <= tmp_1_fu_341_p1(3 - 1 downto 0);

    M_1_0_ce0_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            M_1_0_ce0 <= ap_const_logic_1;
        else 
            M_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    M_1_1_address0 <= tmp_1_fu_341_p1(3 - 1 downto 0);

    M_1_1_ce0_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            M_1_1_ce0 <= ap_const_logic_1;
        else 
            M_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    M_1_2_address0 <= tmp_1_fu_341_p1(3 - 1 downto 0);

    M_1_2_ce0_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            M_1_2_ce0 <= ap_const_logic_1;
        else 
            M_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    M_2_0_address0 <= tmp_1_fu_341_p1(3 - 1 downto 0);

    M_2_0_ce0_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            M_2_0_ce0 <= ap_const_logic_1;
        else 
            M_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    M_2_1_address0 <= tmp_1_fu_341_p1(3 - 1 downto 0);

    M_2_1_ce0_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            M_2_1_ce0 <= ap_const_logic_1;
        else 
            M_2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    M_2_2_address0 <= tmp_1_fu_341_p1(3 - 1 downto 0);

    M_2_2_ce0_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            M_2_2_ce0 <= ap_const_logic_1;
        else 
            M_2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Offset_address0 <= tmp_1_fu_341_p1(3 - 1 downto 0);

    Offset_ce0_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            Offset_ce0 <= ap_const_logic_1;
        else 
            Offset_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SumF_address0 <= tmp_1_fu_341_p1(3 - 1 downto 0);

    SumF_ce0_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            SumF_ce0 <= ap_const_logic_1;
        else 
            SumF_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_sig_cseq_ST_st25_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_3)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st25_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_3)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_148_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_148 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_209_assign_proc : process(ap_reg_ppiten_pp0_it21, ap_reg_ppstg_or_cond_reg_947_pp0_iter20)
    begin
                ap_sig_209 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)));
    end process;


    ap_sig_21_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_21 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_247_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_247 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_271_assign_proc : process(in_img_V_TVALID, exitcond_flatten_fu_423_p2, tmp_s_fu_515_p2)
    begin
                ap_sig_271 <= ((exitcond_flatten_fu_423_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_s_fu_515_p2)) and (in_img_V_TVALID = ap_const_logic_0));
    end process;


    ap_sig_743_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_743 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_786_assign_proc : process(out_img_V_TREADY, ap_reg_ppiten_pp0_it0, ap_sig_271)
    begin
                ap_sig_786 <= (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271)) and (ap_const_logic_1 = out_img_V_TREADY));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_148)
    begin
        if (ap_sig_148) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_21)
    begin
        if (ap_sig_21) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st25_fsm_3_assign_proc : process(ap_sig_743)
    begin
        if (ap_sig_743) then 
            ap_sig_cseq_ST_st25_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st25_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_247)
    begin
        if (ap_sig_247) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_out_img_V_TREADY_assign_proc : process(out_img_V_TREADY, ap_reg_ioackin_out_img_V_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_out_img_V_TREADY)) then 
            ap_sig_ioackin_out_img_V_TREADY <= out_img_V_TREADY;
        else 
            ap_sig_ioackin_out_img_V_TREADY <= ap_const_logic_1;
        end if; 
    end process;

    col_1_fu_539_p2 <= std_logic_vector(unsigned(col_mid2_fu_441_p3) + unsigned(ap_const_lv10_1));
    col_mid2_fu_441_p3 <= 
        ap_const_lv10_0 when (exitcond_fu_435_p2(0) = '1') else 
        col_reg_330;
    exitcond_flatten_fu_423_p2 <= "1" when (indvar_flatten_reg_308 = ap_const_lv19_4B461) else "0";
    exitcond_fu_435_p2 <= "1" when (col_reg_330 = ap_const_lv10_281) else "0";

    grp_fu_719_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it21, ap_reg_ppstg_or_cond_reg_947_pp0_iter20, ap_sig_271, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            grp_fu_719_ce <= ap_const_logic_1;
        else 
            grp_fu_719_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_719_p1 <= i_op_assign_3_tr_tr_tr_cast_reg_893(6 - 1 downto 0);
    grp_fu_733_p0 <= grp_fu_733_p00(8 - 1 downto 0);
    grp_fu_733_p00 <= std_logic_vector(resize(unsigned(window_V_2_1),10));
    grp_fu_733_p1 <= tmp_28_2_cast_reg_878(2 - 1 downto 0);
    grp_fu_740_p0 <= grp_fu_740_p00(8 - 1 downto 0);
    grp_fu_740_p00 <= std_logic_vector(resize(unsigned(window_V_0_2_loc_1_fu_114),10));
    grp_fu_740_p1 <= tmp_28_0_2_cast_reg_858(2 - 1 downto 0);
    grp_fu_747_p0 <= grp_fu_747_p00(8 - 1 downto 0);
    grp_fu_747_p00 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_window_V_1_2_loc_1_load_reg_961_pp0_iter2),11));
    grp_fu_747_p1 <= tmp_28_1_1_cast_reg_868(3 - 1 downto 0);
    grp_fu_755_p0 <= grp_fu_755_p00(8 - 1 downto 0);
    grp_fu_755_p00 <= std_logic_vector(resize(unsigned(window_V_0_1),10));
    grp_fu_755_p1 <= tmp_7_cast_reg_848(2 - 1 downto 0);
    grp_fu_762_p0 <= grp_fu_762_p00(8 - 1 downto 0);
    grp_fu_762_p00 <= std_logic_vector(resize(unsigned(in_temp_V_1_fu_106),10));
    grp_fu_762_p1 <= tmp_28_2_2_cast_reg_888(2 - 1 downto 0);
    i_op_assign_3_tr_tr_tr_cast_fu_404_p1 <= std_logic_vector(resize(unsigned(SumF_q0),14));

    in_img_V_TDATA_blk_n_assign_proc : process(in_img_V_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, exitcond_flatten_fu_423_p2, tmp_s_fu_515_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_423_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_s_fu_515_p2)))) then 
            in_img_V_TDATA_blk_n <= in_img_V_TVALID;
        else 
            in_img_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_img_V_TREADY_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it21, exitcond_flatten_fu_423_p2, tmp_s_fu_515_p2, ap_reg_ppstg_or_cond_reg_947_pp0_iter20, ap_sig_271, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_423_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_s_fu_515_p2)) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            in_img_V_TREADY <= ap_const_logic_1;
        else 
            in_img_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next_fu_429_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_308) + unsigned(ap_const_lv19_1));
    line_buffer_V_0_address0 <= tmp_6_fu_509_p1(10 - 1 downto 0);

    line_buffer_V_0_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it21, ap_reg_ppstg_or_cond_reg_947_pp0_iter20, ap_sig_271, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            line_buffer_V_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_0_ce1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it21, ap_reg_ppstg_or_cond_reg_947_pp0_iter20, ap_sig_271, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            line_buffer_V_0_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_0_we1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it21, ap_reg_ppstg_or_cond_reg_947_pp0_iter20, exitcond_flatten_reg_903, ap_sig_271, ap_sig_ioackin_out_img_V_TREADY, tmp_4_reg_922)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = exitcond_flatten_reg_903) and not((ap_const_lv1_0 = tmp_4_reg_922))))) then 
            line_buffer_V_0_we1 <= ap_const_logic_1;
        else 
            line_buffer_V_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_1_address0 <= tmp_6_fu_509_p1(10 - 1 downto 0);
    line_buffer_V_1_address1 <= tmp_9_fu_586_p1(10 - 1 downto 0);

    line_buffer_V_1_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it21, ap_reg_ppstg_or_cond_reg_947_pp0_iter20, ap_sig_271, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            line_buffer_V_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_1_ce1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it21, ap_reg_ppstg_or_cond_reg_947_pp0_iter20, ap_sig_271, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            line_buffer_V_1_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_1_we1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it21, ap_reg_ppstg_or_cond_reg_947_pp0_iter20, exitcond_flatten_reg_903, ap_sig_271, ap_sig_ioackin_out_img_V_TREADY, tmp_s_reg_937)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = exitcond_flatten_reg_903) and not((ap_const_lv1_0 = tmp_s_reg_937))))) then 
            line_buffer_V_1_we1 <= ap_const_logic_1;
        else 
            line_buffer_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond_fu_533_p2 <= (tmp_2_mid2_fu_487_p3 and tmp_8_fu_527_p2);
    out_img_V_TDATA <= std_logic_vector(unsigned(tmp_fu_723_p1) + unsigned(Offset_load_reg_898));

    out_img_V_TDATA_blk_n_assign_proc : process(out_img_V_TREADY, ap_reg_ppiten_pp0_it21, ap_reg_ppstg_or_cond_reg_947_pp0_iter20)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)))) then 
            out_img_V_TDATA_blk_n <= out_img_V_TREADY;
        else 
            out_img_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_img_V_TVALID_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it21, ap_reg_ppstg_or_cond_reg_947_pp0_iter20, ap_sig_271, ap_reg_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_947_pp0_iter20)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_271)) and (ap_const_logic_0 = ap_reg_ioackin_out_img_V_TREADY))) then 
            out_img_V_TVALID <= ap_const_logic_1;
        else 
            out_img_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    out_temp_V_215_2_fu_713_p2 <= std_logic_vector(signed(tmp1_cast_fu_694_p1) + signed(tmp4_cast_fu_709_p1));
    row_mid2_fu_495_p3 <= 
        row_s_fu_449_p2 when (exitcond_fu_435_p2(0) = '1') else 
        row_reg_319;
    row_s_fu_449_p2 <= std_logic_vector(unsigned(row_reg_319) + unsigned(ap_const_lv9_1));
        tmp1_cast_fu_694_p1 <= std_logic_vector(resize(signed(tmp1_reg_991),14));

    tmp1_fu_679_p2 <= std_logic_vector(signed(tmp2_cast_fu_673_p1) + signed(tmp3_cast_fu_676_p1));
        tmp2_cast_fu_673_p1 <= std_logic_vector(resize(signed(grp_fu_755_p3),12));

        tmp3_cast_fu_676_p1 <= std_logic_vector(resize(signed(grp_fu_740_p3),12));

        tmp4_cast_fu_709_p1 <= std_logic_vector(resize(signed(tmp4_fu_703_p2),14));

    tmp4_fu_703_p2 <= std_logic_vector(signed(tmp5_cast_fu_697_p1) + signed(tmp6_cast_fu_700_p1));
        tmp5_cast_fu_697_p1 <= std_logic_vector(resize(signed(grp_fu_747_p3),13));

        tmp6_cast_fu_700_p1 <= std_logic_vector(resize(signed(tmp6_reg_996),13));

    tmp8_fu_461_p2 <= "1" when (unsigned(row_reg_319) < unsigned(ap_const_lv9_1E0)) else "0";
    tmp_1_fu_341_p1 <= std_logic_vector(resize(unsigned(id_filter_V),64));
        tmp_28_0_1_fu_372_p1 <= std_logic_vector(resize(signed(M_0_1_q0),11));

        tmp_28_0_2_cast_fu_376_p1 <= std_logic_vector(resize(signed(M_0_2_q0),10));

    tmp_28_1_1_cast_fu_384_p1 <= std_logic_vector(resize(unsigned(M_1_1_q0),11));
        tmp_28_1_2_cast_fu_388_p1 <= std_logic_vector(resize(signed(M_1_2_q0),11));

        tmp_28_1_fu_380_p1 <= std_logic_vector(resize(signed(M_1_0_q0),11));

        tmp_28_2_1_fu_396_p1 <= std_logic_vector(resize(signed(M_2_1_q0),11));

    tmp_28_2_2_cast_fu_400_p1 <= std_logic_vector(resize(unsigned(M_2_2_q0),10));
        tmp_28_2_cast_fu_392_p1 <= std_logic_vector(resize(signed(M_2_0_q0),10));

    tmp_29_0_1_fu_598_p0 <= tmp_29_0_1_fu_598_p00(8 - 1 downto 0);
    tmp_29_0_1_fu_598_p00 <= std_logic_vector(resize(unsigned(window_V_0_2_loc_1_fu_114),11));
    tmp_29_0_1_fu_598_p1 <= tmp_28_0_1_reg_853(3 - 1 downto 0);
    tmp_29_0_1_fu_598_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed('0' &tmp_29_0_1_fu_598_p0) * signed(tmp_29_0_1_fu_598_p1))), 11));
    tmp_29_1_2_fu_660_p0 <= tmp_29_1_2_fu_660_p00(8 - 1 downto 0);
    tmp_29_1_2_fu_660_p00 <= std_logic_vector(resize(unsigned(window_V_1_2_loc_1_fu_110),11));
    tmp_29_1_2_fu_660_p1 <= tmp_28_1_2_cast_reg_873(3 - 1 downto 0);
    tmp_29_1_2_fu_660_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed('0' &tmp_29_1_2_fu_660_p0) * signed(tmp_29_1_2_fu_660_p1))), 11));
    tmp_29_1_fu_607_p0 <= tmp_29_1_fu_607_p00(8 - 1 downto 0);
    tmp_29_1_fu_607_p00 <= std_logic_vector(resize(unsigned(window_V_1_1),11));
    tmp_29_1_fu_607_p1 <= tmp_28_1_reg_863(3 - 1 downto 0);
    tmp_29_1_fu_607_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed('0' &tmp_29_1_fu_607_p0) * signed(tmp_29_1_fu_607_p1))), 11));
    tmp_29_2_1_fu_616_p0 <= tmp_29_2_1_fu_616_p00(8 - 1 downto 0);
    tmp_29_2_1_fu_616_p00 <= std_logic_vector(resize(unsigned(in_temp_V_1_fu_106),11));
    tmp_29_2_1_fu_616_p1 <= tmp_28_2_1_reg_883(3 - 1 downto 0);
    tmp_29_2_1_fu_616_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed('0' &tmp_29_2_1_fu_616_p0) * signed(tmp_29_2_1_fu_616_p1))), 11));
    tmp_2_fu_481_p2 <= "0" when (row_reg_319 = ap_const_lv9_0) else "1";
    tmp_2_mid1_fu_475_p2 <= "0" when (row_s_fu_449_p2 = ap_const_lv9_0) else "1";
    tmp_2_mid2_fu_487_p3 <= 
        tmp_2_mid1_fu_475_p2 when (exitcond_fu_435_p2(0) = '1') else 
        tmp_2_fu_481_p2;
    tmp_4_fu_503_p2 <= "1" when (unsigned(col_mid2_fu_441_p3) < unsigned(ap_const_lv10_280)) else "0";
    tmp_6_fu_509_p1 <= std_logic_vector(resize(unsigned(col_mid2_fu_441_p3),64));
        tmp_7_cast_fu_368_p1 <= std_logic_vector(resize(signed(M_0_0_q0),10));

    tmp_8_fu_527_p2 <= "0" when (col_mid2_fu_441_p3 = ap_const_lv10_0) else "1";
    tmp_9_fu_586_p1 <= std_logic_vector(resize(unsigned(col_mid2_reg_912),64));
    tmp_fu_723_p1 <= grp_fu_719_p2(8 - 1 downto 0);
    tmp_mid1_fu_455_p2 <= "1" when (unsigned(row_s_fu_449_p2) < unsigned(ap_const_lv9_1E0)) else "0";
    tmp_mid2_fu_467_p3 <= 
        tmp_mid1_fu_455_p2 when (exitcond_fu_435_p2(0) = '1') else 
        tmp8_fu_461_p2;
    tmp_s_fu_515_p2 <= (tmp_4_fu_503_p2 and tmp_mid2_fu_467_p3);
end behav;
