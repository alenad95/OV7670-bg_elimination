

================================================================
== Vivado HLS Report for 'Filter_Convolution'
================================================================
* Date:           Tue Nov 29 22:23:31 2016

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        FILTER_CONVOLUTION
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     10.18|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  308344|  308344|  308345|  308345|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+--------+--------+----------+-----------+-----------+--------+----------+
        |                     |     Latency     | Iteration|  Initiation Interval  |  Trip  |          |
        |      Loop Name      |   min  |   max  |  Latency |  achieved |   target  |  Count | Pipelined|
        +---------------------+--------+--------+----------+-----------+-----------+--------+----------+
        |- Loop_row_Loop_col  |  308341|  308341|        22|          1|          1|  308321|    yes   |
        +---------------------+--------+--------+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 22


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 25
* Pipeline: 1
  Pipeline-0: II = 1, D = 22, States = { 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	25  / (exitcond_flatten)
	5  / (!exitcond_flatten)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	3  / true
25 --> 
* FSM state operations: 

 <State 1>: 2.39ns
ST_1: in_temp_V_1 [1/1] 0.00ns
.preheader55.preheader:0  %in_temp_V_1 = alloca i8

ST_1: window_V_1_2_loc_1 [1/1] 0.00ns
.preheader55.preheader:1  %window_V_1_2_loc_1 = alloca i8

ST_1: window_V_0_2_loc_1 [1/1] 0.00ns
.preheader55.preheader:2  %window_V_0_2_loc_1 = alloca i8

ST_1: id_filter_V_read [1/1] 0.00ns
.preheader55.preheader:7  %id_filter_V_read = call i3 @_ssdm_op_Read.ap_none.i3(i3 %id_filter_V)

ST_1: tmp_1 [1/1] 0.00ns
.preheader55.preheader:14  %tmp_1 = zext i3 %id_filter_V_read to i64

ST_1: M_0_0_addr [1/1] 0.00ns
.preheader55.preheader:15  %M_0_0_addr = getelementptr [8 x i2]* @M_0_0, i64 0, i64 %tmp_1

ST_1: M_0_0_load [2/2] 2.39ns
.preheader55.preheader:16  %M_0_0_load = load i2* %M_0_0_addr, align 1

ST_1: M_0_1_addr [1/1] 0.00ns
.preheader55.preheader:18  %M_0_1_addr = getelementptr [8 x i3]* @M_0_1, i64 0, i64 %tmp_1

ST_1: M_0_1_load [2/2] 2.39ns
.preheader55.preheader:19  %M_0_1_load = load i3* %M_0_1_addr, align 1

ST_1: M_0_2_addr [1/1] 0.00ns
.preheader55.preheader:21  %M_0_2_addr = getelementptr [8 x i2]* @M_0_2, i64 0, i64 %tmp_1

ST_1: M_0_2_load [2/2] 2.39ns
.preheader55.preheader:22  %M_0_2_load = load i2* %M_0_2_addr, align 1

ST_1: M_1_0_addr [1/1] 0.00ns
.preheader55.preheader:24  %M_1_0_addr = getelementptr [8 x i3]* @M_1_0, i64 0, i64 %tmp_1

ST_1: M_1_0_load [2/2] 2.39ns
.preheader55.preheader:25  %M_1_0_load = load i3* %M_1_0_addr, align 1

ST_1: M_1_1_addr [1/1] 0.00ns
.preheader55.preheader:27  %M_1_1_addr = getelementptr [8 x i3]* @M_1_1, i64 0, i64 %tmp_1

ST_1: M_1_1_load [2/2] 2.39ns
.preheader55.preheader:28  %M_1_1_load = load i3* %M_1_1_addr, align 1

ST_1: M_1_2_addr [1/1] 0.00ns
.preheader55.preheader:30  %M_1_2_addr = getelementptr [8 x i3]* @M_1_2, i64 0, i64 %tmp_1

ST_1: M_1_2_load [2/2] 2.39ns
.preheader55.preheader:31  %M_1_2_load = load i3* %M_1_2_addr, align 1

ST_1: M_2_0_addr [1/1] 0.00ns
.preheader55.preheader:33  %M_2_0_addr = getelementptr [8 x i2]* @M_2_0, i64 0, i64 %tmp_1

ST_1: M_2_0_load [2/2] 2.39ns
.preheader55.preheader:34  %M_2_0_load = load i2* %M_2_0_addr, align 1

ST_1: M_2_1_addr [1/1] 0.00ns
.preheader55.preheader:36  %M_2_1_addr = getelementptr [8 x i3]* @M_2_1, i64 0, i64 %tmp_1

ST_1: M_2_1_load [2/2] 2.39ns
.preheader55.preheader:37  %M_2_1_load = load i3* %M_2_1_addr, align 1

ST_1: M_2_2_addr [1/1] 0.00ns
.preheader55.preheader:39  %M_2_2_addr = getelementptr [8 x i2]* @M_2_2, i64 0, i64 %tmp_1

ST_1: M_2_2_load [2/2] 2.39ns
.preheader55.preheader:40  %M_2_2_load = load i2* %M_2_2_addr, align 1

ST_1: SumF_addr [1/1] 0.00ns
.preheader55.preheader:42  %SumF_addr = getelementptr [8 x i5]* @SumF, i64 0, i64 %tmp_1

ST_1: SumF_load [2/2] 2.39ns
.preheader55.preheader:43  %SumF_load = load i5* %SumF_addr, align 1

ST_1: Offset_addr [1/1] 0.00ns
.preheader55.preheader:45  %Offset_addr = getelementptr [8 x i8]* @Offset, i64 0, i64 %tmp_1

ST_1: Offset_load [2/2] 2.39ns
.preheader55.preheader:46  %Offset_load = load i8* %Offset_addr, align 1


 <State 2>: 2.39ns
ST_2: stg_53 [1/1] 0.00ns
.preheader55.preheader:3  call void (...)* @_ssdm_op_SpecBitsMap(i3 %id_filter_V), !map !7

ST_2: stg_54 [1/1] 0.00ns
.preheader55.preheader:4  call void (...)* @_ssdm_op_SpecBitsMap(i8* %in_img_V), !map !13

ST_2: stg_55 [1/1] 0.00ns
.preheader55.preheader:5  call void (...)* @_ssdm_op_SpecBitsMap(i8* %out_img_V), !map !19

ST_2: stg_56 [1/1] 0.00ns
.preheader55.preheader:6  call void (...)* @_ssdm_op_SpecTopModule([19 x i8]* @Filter_Convolution_str) nounwind

ST_2: stg_57 [1/1] 0.00ns
.preheader55.preheader:8  call void (...)* @_ssdm_op_SpecInterface(i3 %id_filter_V, [8 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str) nounwind

ST_2: stg_58 [1/1] 0.00ns
.preheader55.preheader:9  call void (...)* @_ssdm_op_SpecInterface(i8* %out_img_V, [5 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str)

ST_2: stg_59 [1/1] 0.00ns
.preheader55.preheader:10  call void (...)* @_ssdm_op_SpecInterface(i8* %in_img_V, [5 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str)

ST_2: window_V_0_2_load [1/1] 0.00ns
.preheader55.preheader:11  %window_V_0_2_load = load i8* @window_V_0_2, align 1

ST_2: window_V_1_2_load [1/1] 0.00ns
.preheader55.preheader:12  %window_V_1_2_load = load i8* @window_V_1_2, align 1

ST_2: window_V_2_2_load [1/1] 0.00ns
.preheader55.preheader:13  %window_V_2_2_load = load i8* @window_V_2_2, align 1

ST_2: M_0_0_load [1/2] 2.39ns
.preheader55.preheader:16  %M_0_0_load = load i2* %M_0_0_addr, align 1

ST_2: tmp_7_cast [1/1] 0.00ns
.preheader55.preheader:17  %tmp_7_cast = sext i2 %M_0_0_load to i10

ST_2: M_0_1_load [1/2] 2.39ns
.preheader55.preheader:19  %M_0_1_load = load i3* %M_0_1_addr, align 1

ST_2: tmp_28_0_1 [1/1] 0.00ns
.preheader55.preheader:20  %tmp_28_0_1 = sext i3 %M_0_1_load to i11

ST_2: M_0_2_load [1/2] 2.39ns
.preheader55.preheader:22  %M_0_2_load = load i2* %M_0_2_addr, align 1

ST_2: tmp_28_0_2_cast [1/1] 0.00ns
.preheader55.preheader:23  %tmp_28_0_2_cast = sext i2 %M_0_2_load to i10

ST_2: M_1_0_load [1/2] 2.39ns
.preheader55.preheader:25  %M_1_0_load = load i3* %M_1_0_addr, align 1

ST_2: tmp_28_1 [1/1] 0.00ns
.preheader55.preheader:26  %tmp_28_1 = sext i3 %M_1_0_load to i11

ST_2: M_1_1_load [1/2] 2.39ns
.preheader55.preheader:28  %M_1_1_load = load i3* %M_1_1_addr, align 1

ST_2: tmp_28_1_1_cast [1/1] 0.00ns
.preheader55.preheader:29  %tmp_28_1_1_cast = zext i3 %M_1_1_load to i11

ST_2: M_1_2_load [1/2] 2.39ns
.preheader55.preheader:31  %M_1_2_load = load i3* %M_1_2_addr, align 1

ST_2: tmp_28_1_2_cast [1/1] 0.00ns
.preheader55.preheader:32  %tmp_28_1_2_cast = sext i3 %M_1_2_load to i11

ST_2: M_2_0_load [1/2] 2.39ns
.preheader55.preheader:34  %M_2_0_load = load i2* %M_2_0_addr, align 1

ST_2: tmp_28_2_cast [1/1] 0.00ns
.preheader55.preheader:35  %tmp_28_2_cast = sext i2 %M_2_0_load to i10

ST_2: M_2_1_load [1/2] 2.39ns
.preheader55.preheader:37  %M_2_1_load = load i3* %M_2_1_addr, align 1

ST_2: tmp_28_2_1 [1/1] 0.00ns
.preheader55.preheader:38  %tmp_28_2_1 = sext i3 %M_2_1_load to i11

ST_2: M_2_2_load [1/2] 2.39ns
.preheader55.preheader:40  %M_2_2_load = load i2* %M_2_2_addr, align 1

ST_2: tmp_28_2_2_cast [1/1] 0.00ns
.preheader55.preheader:41  %tmp_28_2_2_cast = zext i2 %M_2_2_load to i10

ST_2: SumF_load [1/2] 2.39ns
.preheader55.preheader:43  %SumF_load = load i5* %SumF_addr, align 1

ST_2: i_op_assign_3_tr_tr_tr_cast [1/1] 0.00ns
.preheader55.preheader:44  %i_op_assign_3_tr_tr_tr_cast = zext i5 %SumF_load to i14

ST_2: Offset_load [1/2] 2.39ns
.preheader55.preheader:46  %Offset_load = load i8* %Offset_addr, align 1

ST_2: stg_84 [1/1] 1.57ns
.preheader55.preheader:47  store i8 %window_V_0_2_load, i8* %window_V_0_2_loc_1

ST_2: stg_85 [1/1] 1.57ns
.preheader55.preheader:48  store i8 %window_V_1_2_load, i8* %window_V_1_2_loc_1

ST_2: stg_86 [1/1] 1.57ns
.preheader55.preheader:49  store i8 %window_V_2_2_load, i8* %in_temp_V_1

ST_2: stg_87 [1/1] 1.57ns
.preheader55.preheader:50  br label %0


 <State 3>: 8.25ns
ST_3: indvar_flatten [1/1] 0.00ns
:0  %indvar_flatten = phi i19 [ 0, %.preheader55.preheader ], [ %indvar_flatten_next, %._crit_edge65 ]

ST_3: row [1/1] 0.00ns
:1  %row = phi i9 [ 0, %.preheader55.preheader ], [ %row_mid2, %._crit_edge65 ]

ST_3: col [1/1] 0.00ns
:2  %col = phi i10 [ 0, %.preheader55.preheader ], [ %col_1, %._crit_edge65 ]

ST_3: exitcond_flatten [1/1] 2.33ns
:6  %exitcond_flatten = icmp eq i19 %indvar_flatten, -215967

ST_3: indvar_flatten_next [1/1] 2.08ns
:7  %indvar_flatten_next = add i19 %indvar_flatten, 1

ST_3: stg_93 [1/1] 0.00ns
:8  br i1 %exitcond_flatten, label %2, label %.reset

ST_3: exitcond [1/1] 2.07ns
.reset:2  %exitcond = icmp eq i10 %col, -383

ST_3: col_mid2 [1/1] 1.37ns
.reset:3  %col_mid2 = select i1 %exitcond, i10 0, i10 %col

ST_3: row_s [1/1] 1.84ns
.reset:4  %row_s = add i9 %row, 1

ST_3: tmp_mid1 [1/1] 2.03ns
.reset:5  %tmp_mid1 = icmp ult i9 %row_s, -32

ST_3: tmp8 [1/1] 2.03ns
.reset:6  %tmp8 = icmp ult i9 %row, -32

ST_3: tmp_mid2 [1/1] 1.37ns
.reset:7  %tmp_mid2 = select i1 %exitcond, i1 %tmp_mid1, i1 %tmp8

ST_3: tmp_2_mid1 [1/1] 2.03ns
.reset:8  %tmp_2_mid1 = icmp ne i9 %row_s, 0

ST_3: tmp_2 [1/1] 2.03ns
.reset:9  %tmp_2 = icmp ne i9 %row, 0

ST_3: tmp_2_mid2 [1/1] 1.37ns
.reset:10  %tmp_2_mid2 = select i1 %exitcond, i1 %tmp_2_mid1, i1 %tmp_2

ST_3: row_mid2 [1/1] 1.37ns
.reset:11  %row_mid2 = select i1 %exitcond, i9 %row_s, i9 %row

ST_3: tmp_4 [1/1] 2.07ns
.reset:21  %tmp_4 = icmp ult i10 %col_mid2, -384

ST_3: stg_105 [1/1] 0.00ns
.reset:22  br i1 %tmp_4, label %.preheader47.preheader, label %.loopexit

ST_3: tmp_6 [1/1] 0.00ns
.preheader47.preheader:0  %tmp_6 = zext i10 %col_mid2 to i64

ST_3: line_buffer_V_0_addr [1/1] 0.00ns
.preheader47.preheader:1  %line_buffer_V_0_addr = getelementptr [640 x i8]* @line_buffer_V_0, i64 0, i64 %tmp_6

ST_3: line_buffer_V_0_load [2/2] 2.71ns
.preheader47.preheader:2  %line_buffer_V_0_load = load i8* %line_buffer_V_0_addr, align 1

ST_3: line_buffer_V_1_addr [1/1] 0.00ns
.preheader47.preheader:3  %line_buffer_V_1_addr = getelementptr [640 x i8]* @line_buffer_V_1, i64 0, i64 %tmp_6

ST_3: line_buffer_V_1_load [2/2] 2.71ns
.preheader47.preheader:4  %line_buffer_V_1_load = load i8* %line_buffer_V_1_addr, align 1

ST_3: tmp_s [1/1] 1.37ns
.loopexit:0  %tmp_s = and i1 %tmp_4, %tmp_mid2

ST_3: stg_112 [1/1] 0.00ns
.loopexit:1  br i1 %tmp_s, label %1, label %.loopexit._crit_edge

ST_3: in_temp_V [1/1] 0.00ns
:0  %in_temp_V = call i8 @_ssdm_op_Read.axis.volatile.i8P(i8* %in_img_V)

ST_3: stg_114 [1/1] 0.00ns
:1  store i8 %in_temp_V, i8* @window_V_2_2, align 1

ST_3: tmp_8 [1/1] 2.07ns
.loopexit._crit_edge:0  %tmp_8 = icmp ne i10 %col_mid2, 0

ST_3: or_cond [1/1] 1.37ns
.loopexit._crit_edge:1  %or_cond = and i1 %tmp_2_mid2, %tmp_8

ST_3: stg_117 [1/1] 0.00ns
.loopexit._crit_edge:2  br i1 %or_cond, label %mediaPixel.exit, label %._crit_edge65

ST_3: col_1 [1/1] 1.84ns
._crit_edge65:1  %col_1 = add i10 %col_mid2, 1


 <State 4>: 6.38ns
ST_4: in_temp_V_1_load [1/1] 0.00ns
:3  %in_temp_V_1_load = load i8* %in_temp_V_1

ST_4: window_V_1_2_loc_1_load [1/1] 0.00ns
:4  %window_V_1_2_loc_1_load = load i8* %window_V_1_2_loc_1

ST_4: window_V_0_2_loc_1_load [1/1] 0.00ns
:5  %window_V_0_2_loc_1_load = load i8* %window_V_0_2_loc_1

ST_4: window_V_1_1_load [1/1] 0.00ns
.reset:17  %window_V_1_1_load = load i8* @window_V_1_1, align 1

ST_4: stg_123 [1/1] 0.00ns
.reset:18  store i8 %window_V_1_2_loc_1_load, i8* @window_V_1_1, align 1

ST_4: line_buffer_V_0_load [1/2] 2.71ns
.preheader47.preheader:2  %line_buffer_V_0_load = load i8* %line_buffer_V_0_addr, align 1

ST_4: line_buffer_V_1_load [1/2] 2.71ns
.preheader47.preheader:4  %line_buffer_V_1_load = load i8* %line_buffer_V_1_addr, align 1

ST_4: stg_126 [1/1] 0.00ns
.preheader47.preheader:5  store i8 %line_buffer_V_0_load, i8* @window_V_0_2, align 1

ST_4: stg_127 [1/1] 0.00ns
.preheader47.preheader:6  store i8 %line_buffer_V_1_load, i8* @window_V_1_2, align 1

ST_4: stg_128 [1/1] 2.71ns
.preheader47.preheader:7  store i8 %line_buffer_V_1_load, i8* %line_buffer_V_0_addr, align 1

ST_4: stg_129 [1/1] 1.57ns
.preheader47.preheader:8  store i8 %line_buffer_V_0_load, i8* %window_V_0_2_loc_1

ST_4: stg_130 [1/1] 1.57ns
.preheader47.preheader:9  store i8 %line_buffer_V_1_load, i8* %window_V_1_2_loc_1

ST_4: stg_131 [1/1] 0.00ns
.preheader47.preheader:10  br label %.loopexit

ST_4: tmp_9 [1/1] 0.00ns
:2  %tmp_9 = zext i10 %col_mid2 to i64

ST_4: line_buffer_V_1_addr_1 [1/1] 0.00ns
:3  %line_buffer_V_1_addr_1 = getelementptr [640 x i8]* @line_buffer_V_1, i64 0, i64 %tmp_9

ST_4: stg_134 [1/1] 2.71ns
:4  store i8 %in_temp_V, i8* %line_buffer_V_1_addr_1, align 1

ST_4: stg_135 [1/1] 1.57ns
:5  store i8 %in_temp_V, i8* %in_temp_V_1

ST_4: stg_136 [1/1] 0.00ns
:6  br label %.loopexit._crit_edge

ST_4: tmp_27_0_1 [1/1] 0.00ns
mediaPixel.exit:6  %tmp_27_0_1 = zext i8 %window_V_0_2_loc_1_load to i11

ST_4: tmp_29_0_1 [1/1] 6.38ns
mediaPixel.exit:7  %tmp_29_0_1 = mul i11 %tmp_27_0_1, %tmp_28_0_1

ST_4: tmp_27_1 [1/1] 0.00ns
mediaPixel.exit:11  %tmp_27_1 = zext i8 %window_V_1_1_load to i11

ST_4: tmp_29_1 [1/1] 6.38ns
mediaPixel.exit:12  %tmp_29_1 = mul i11 %tmp_27_1, %tmp_28_1

ST_4: tmp_27_2_1 [1/1] 0.00ns
mediaPixel.exit:22  %tmp_27_2_1 = zext i8 %in_temp_V_1_load to i11

ST_4: tmp_29_2_1 [1/1] 6.38ns
mediaPixel.exit:23  %tmp_29_2_1 = mul i11 %tmp_27_2_1, %tmp_28_2_1


 <State 5>: 9.40ns
ST_5: window_V_0_1_load [1/1] 0.00ns
.reset:15  %window_V_0_1_load = load i8* @window_V_0_1, align 1

ST_5: stg_144 [1/1] 0.00ns
.reset:16  store i8 %window_V_0_2_loc_1_load, i8* @window_V_0_1, align 1

ST_5: window_V_2_1_load [1/1] 0.00ns
.reset:19  %window_V_2_1_load = load i8* @window_V_2_1, align 1

ST_5: stg_146 [1/1] 0.00ns
.reset:20  store i8 %in_temp_V_1_load, i8* @window_V_2_1, align 1

ST_5: in_temp_V_1_load_1 [1/1] 0.00ns
mediaPixel.exit:0  %in_temp_V_1_load_1 = load i8* %in_temp_V_1

ST_5: window_V_1_2_loc_1_load_1 [1/1] 0.00ns
mediaPixel.exit:1  %window_V_1_2_loc_1_load_1 = load i8* %window_V_1_2_loc_1

ST_5: window_V_0_2_loc_1_load_1 [1/1] 0.00ns
mediaPixel.exit:2  %window_V_0_2_loc_1_load_1 = load i8* %window_V_0_2_loc_1

ST_5: tmp_3_cast [1/1] 0.00ns
mediaPixel.exit:3  %tmp_3_cast = zext i8 %window_V_0_1_load to i10

ST_5: tmp_3 [1/1] 3.36ns
mediaPixel.exit:4  %tmp_3 = mul i10 %tmp_3_cast, %tmp_7_cast

ST_5: tmp_11_cast [1/1] 0.00ns
mediaPixel.exit:5  %tmp_11_cast = sext i10 %tmp_3 to i11

ST_5: tmp_27_0_2_cast [1/1] 0.00ns
mediaPixel.exit:8  %tmp_27_0_2_cast = zext i8 %window_V_0_2_loc_1_load_1 to i10

ST_5: tmp_29_0_2 [1/1] 3.36ns
mediaPixel.exit:9  %tmp_29_0_2 = mul i10 %tmp_27_0_2_cast, %tmp_28_0_2_cast

ST_5: tmp_29_0_2_cast [1/1] 0.00ns
mediaPixel.exit:10  %tmp_29_0_2_cast = sext i10 %tmp_29_0_2 to i11

ST_5: tmp_27_1_2_cast [1/1] 0.00ns
mediaPixel.exit:16  %tmp_27_1_2_cast = zext i8 %window_V_1_2_loc_1_load_1 to i11

ST_5: tmp_29_1_2 [1/1] 6.38ns
mediaPixel.exit:17  %tmp_29_1_2 = mul i11 %tmp_27_1_2_cast, %tmp_28_1_2_cast

ST_5: tmp_27_2_cast [1/1] 0.00ns
mediaPixel.exit:19  %tmp_27_2_cast = zext i8 %window_V_2_1_load to i10

ST_5: tmp_29_2 [1/1] 3.36ns
mediaPixel.exit:20  %tmp_29_2 = mul i10 %tmp_27_2_cast, %tmp_28_2_cast

ST_5: tmp_29_2_cast [1/1] 0.00ns
mediaPixel.exit:21  %tmp_29_2_cast = sext i10 %tmp_29_2 to i12

ST_5: tmp_27_2_2_cast [1/1] 0.00ns
mediaPixel.exit:24  %tmp_27_2_2_cast = zext i8 %in_temp_V_1_load_1 to i10

ST_5: tmp_29_2_2 [1/1] 3.36ns
mediaPixel.exit:25  %tmp_29_2_2 = mul i10 %tmp_27_2_2_cast, %tmp_28_2_2_cast

ST_5: tmp_29_2_2_cast [1/1] 0.00ns
mediaPixel.exit:26  %tmp_29_2_2_cast = zext i10 %tmp_29_2_2 to i11

ST_5: tmp2 [1/1] 3.02ns
mediaPixel.exit:27  %tmp2 = add i11 %tmp_29_0_1, %tmp_11_cast

ST_5: tmp2_cast [1/1] 0.00ns
mediaPixel.exit:28  %tmp2_cast = sext i11 %tmp2 to i12

ST_5: tmp3 [1/1] 3.02ns
mediaPixel.exit:29  %tmp3 = add i11 %tmp_29_1, %tmp_29_0_2_cast

ST_5: tmp3_cast [1/1] 0.00ns
mediaPixel.exit:30  %tmp3_cast = sext i11 %tmp3 to i12

ST_5: tmp1 [1/1] 1.84ns
mediaPixel.exit:31  %tmp1 = add i12 %tmp2_cast, %tmp3_cast

ST_5: tmp7 [1/1] 3.02ns
mediaPixel.exit:35  %tmp7 = add i11 %tmp_29_2_2_cast, %tmp_29_2_1

ST_5: tmp7_cast [1/1] 0.00ns
mediaPixel.exit:36  %tmp7_cast = sext i11 %tmp7 to i12

ST_5: tmp6 [1/1] 3.02ns
mediaPixel.exit:37  %tmp6 = add i12 %tmp_29_2_cast, %tmp7_cast


 <State 6>: 10.18ns
ST_6: tmp_27_1_1_cast [1/1] 0.00ns
mediaPixel.exit:13  %tmp_27_1_1_cast = zext i8 %window_V_1_2_loc_1_load to i11

ST_6: tmp_29_1_1 [1/1] 3.36ns
mediaPixel.exit:14  %tmp_29_1_1 = mul i11 %tmp_27_1_1_cast, %tmp_28_1_1_cast

ST_6: tmp_29_1_1_cast [1/1] 0.00ns
mediaPixel.exit:15  %tmp_29_1_1_cast = zext i11 %tmp_29_1_1 to i12

ST_6: tmp_29_1_2_cast [1/1] 0.00ns
mediaPixel.exit:18  %tmp_29_1_2_cast = sext i11 %tmp_29_1_2 to i12

ST_6: tmp1_cast [1/1] 0.00ns
mediaPixel.exit:32  %tmp1_cast = sext i12 %tmp1 to i14

ST_6: tmp5 [1/1] 3.02ns
mediaPixel.exit:33  %tmp5 = add i12 %tmp_29_1_2_cast, %tmp_29_1_1_cast

ST_6: tmp5_cast [1/1] 0.00ns
mediaPixel.exit:34  %tmp5_cast = sext i12 %tmp5 to i13

ST_6: tmp6_cast [1/1] 0.00ns
mediaPixel.exit:38  %tmp6_cast = sext i12 %tmp6 to i13

ST_6: tmp4 [1/1] 1.84ns
mediaPixel.exit:39  %tmp4 = add i13 %tmp5_cast, %tmp6_cast

ST_6: tmp4_cast [1/1] 0.00ns
mediaPixel.exit:40  %tmp4_cast = sext i13 %tmp4 to i14

ST_6: out_temp_V_215_2 [1/1] 1.96ns
mediaPixel.exit:41  %out_temp_V_215_2 = add i14 %tmp1_cast, %tmp4_cast


 <State 7>: 3.73ns
ST_7: tmp_7 [18/18] 3.73ns
mediaPixel.exit:42  %tmp_7 = sdiv i14 %out_temp_V_215_2, %i_op_assign_3_tr_tr_tr_cast


 <State 8>: 3.73ns
ST_8: tmp_7 [17/18] 3.73ns
mediaPixel.exit:42  %tmp_7 = sdiv i14 %out_temp_V_215_2, %i_op_assign_3_tr_tr_tr_cast


 <State 9>: 3.73ns
ST_9: tmp_7 [16/18] 3.73ns
mediaPixel.exit:42  %tmp_7 = sdiv i14 %out_temp_V_215_2, %i_op_assign_3_tr_tr_tr_cast


 <State 10>: 3.73ns
ST_10: tmp_7 [15/18] 3.73ns
mediaPixel.exit:42  %tmp_7 = sdiv i14 %out_temp_V_215_2, %i_op_assign_3_tr_tr_tr_cast


 <State 11>: 3.73ns
ST_11: tmp_7 [14/18] 3.73ns
mediaPixel.exit:42  %tmp_7 = sdiv i14 %out_temp_V_215_2, %i_op_assign_3_tr_tr_tr_cast


 <State 12>: 3.73ns
ST_12: tmp_7 [13/18] 3.73ns
mediaPixel.exit:42  %tmp_7 = sdiv i14 %out_temp_V_215_2, %i_op_assign_3_tr_tr_tr_cast


 <State 13>: 3.73ns
ST_13: tmp_7 [12/18] 3.73ns
mediaPixel.exit:42  %tmp_7 = sdiv i14 %out_temp_V_215_2, %i_op_assign_3_tr_tr_tr_cast


 <State 14>: 3.73ns
ST_14: tmp_7 [11/18] 3.73ns
mediaPixel.exit:42  %tmp_7 = sdiv i14 %out_temp_V_215_2, %i_op_assign_3_tr_tr_tr_cast


 <State 15>: 3.73ns
ST_15: tmp_7 [10/18] 3.73ns
mediaPixel.exit:42  %tmp_7 = sdiv i14 %out_temp_V_215_2, %i_op_assign_3_tr_tr_tr_cast


 <State 16>: 3.73ns
ST_16: tmp_7 [9/18] 3.73ns
mediaPixel.exit:42  %tmp_7 = sdiv i14 %out_temp_V_215_2, %i_op_assign_3_tr_tr_tr_cast


 <State 17>: 3.73ns
ST_17: tmp_7 [8/18] 3.73ns
mediaPixel.exit:42  %tmp_7 = sdiv i14 %out_temp_V_215_2, %i_op_assign_3_tr_tr_tr_cast


 <State 18>: 3.73ns
ST_18: tmp_7 [7/18] 3.73ns
mediaPixel.exit:42  %tmp_7 = sdiv i14 %out_temp_V_215_2, %i_op_assign_3_tr_tr_tr_cast


 <State 19>: 3.73ns
ST_19: tmp_7 [6/18] 3.73ns
mediaPixel.exit:42  %tmp_7 = sdiv i14 %out_temp_V_215_2, %i_op_assign_3_tr_tr_tr_cast


 <State 20>: 3.73ns
ST_20: tmp_7 [5/18] 3.73ns
mediaPixel.exit:42  %tmp_7 = sdiv i14 %out_temp_V_215_2, %i_op_assign_3_tr_tr_tr_cast


 <State 21>: 3.73ns
ST_21: tmp_7 [4/18] 3.73ns
mediaPixel.exit:42  %tmp_7 = sdiv i14 %out_temp_V_215_2, %i_op_assign_3_tr_tr_tr_cast


 <State 22>: 3.73ns
ST_22: tmp_7 [3/18] 3.73ns
mediaPixel.exit:42  %tmp_7 = sdiv i14 %out_temp_V_215_2, %i_op_assign_3_tr_tr_tr_cast


 <State 23>: 3.73ns
ST_23: tmp_7 [2/18] 3.73ns
mediaPixel.exit:42  %tmp_7 = sdiv i14 %out_temp_V_215_2, %i_op_assign_3_tr_tr_tr_cast


 <State 24>: 5.45ns
ST_24: stg_200 [1/1] 0.00ns
.reset:0  call void (...)* @_ssdm_op_SpecLoopName([18 x i8]* @Loop_row_Loop_col_str)

ST_24: empty_3 [1/1] 0.00ns
.reset:1  %empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 308321, i64 308321, i64 308321)

ST_24: stg_202 [1/1] 0.00ns
.reset:12  call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str7) nounwind

ST_24: tmp_5 [1/1] 0.00ns
.reset:13  %tmp_5 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str7)

ST_24: stg_204 [1/1] 0.00ns
.reset:14  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_24: tmp_7 [1/18] 3.73ns
mediaPixel.exit:42  %tmp_7 = sdiv i14 %out_temp_V_215_2, %i_op_assign_3_tr_tr_tr_cast

ST_24: tmp [1/1] 0.00ns
mediaPixel.exit:43  %tmp = trunc i14 %tmp_7 to i8

ST_24: tmp_10 [1/1] 1.72ns
mediaPixel.exit:44  %tmp_10 = add i8 %tmp, %Offset_load

ST_24: stg_208 [1/1] 0.00ns
mediaPixel.exit:45  call void @_ssdm_op_Write.axis.volatile.i8P(i8* %out_img_V, i8 %tmp_10)

ST_24: stg_209 [1/1] 0.00ns
mediaPixel.exit:46  br label %._crit_edge65

ST_24: empty [1/1] 0.00ns
._crit_edge65:0  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str7, i32 %tmp_5)

ST_24: stg_211 [1/1] 0.00ns
._crit_edge65:2  br label %0


 <State 25>: 0.00ns
ST_25: stg_212 [1/1] 0.00ns
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 5>: 9.4ns
The critical path consists of the following:
	'load' operation ('in_temp_V_1_load_1', FILTER_CONVOLUTION/Filter_convolution.cpp:14->FILTER_CONVOLUTION/Filter_convolution.cpp:83) on local variable 'in_temp.V' (0 ns)
	'mul' operation ('tmp_29_2_2', FILTER_CONVOLUTION/Filter_convolution.cpp:14->FILTER_CONVOLUTION/Filter_convolution.cpp:83) (3.36 ns)
	'add' operation ('tmp7', FILTER_CONVOLUTION/Filter_convolution.cpp:14->FILTER_CONVOLUTION/Filter_convolution.cpp:83) (3.02 ns)
	'add' operation ('tmp6', FILTER_CONVOLUTION/Filter_convolution.cpp:14->FILTER_CONVOLUTION/Filter_convolution.cpp:83) (3.02 ns)

 <State 6>: 10.2ns
The critical path consists of the following:
	'mul' operation ('tmp_29_1_1', FILTER_CONVOLUTION/Filter_convolution.cpp:14->FILTER_CONVOLUTION/Filter_convolution.cpp:83) (3.36 ns)
	'add' operation ('tmp5', FILTER_CONVOLUTION/Filter_convolution.cpp:14->FILTER_CONVOLUTION/Filter_convolution.cpp:83) (3.02 ns)
	'add' operation ('tmp4', FILTER_CONVOLUTION/Filter_convolution.cpp:14->FILTER_CONVOLUTION/Filter_convolution.cpp:83) (1.84 ns)
	'add' operation ('out_temp_V_215_2', FILTER_CONVOLUTION/Filter_convolution.cpp:14->FILTER_CONVOLUTION/Filter_convolution.cpp:83) (1.96 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
