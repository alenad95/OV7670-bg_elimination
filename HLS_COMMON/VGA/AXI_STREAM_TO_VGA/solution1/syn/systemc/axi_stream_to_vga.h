// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _axi_stream_to_vga_HH_
#define _axi_stream_to_vga_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct axi_stream_to_vga : public sc_module {
    // Port declarations 15
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > selftest;
    sc_in< sc_lv<8> > inStream_V_V_TDATA;
    sc_in< sc_logic > inStream_V_V_TVALID;
    sc_out< sc_logic > inStream_V_V_TREADY;
    sc_out< sc_lv<4> > R_V;
    sc_out< sc_lv<4> > G_V;
    sc_out< sc_lv<4> > B_V;
    sc_out< sc_lv<1> > V_SYNC_V;
    sc_out< sc_lv<1> > H_SYNC_V;


    // Module declarations
    axi_stream_to_vga(sc_module_name name);
    SC_HAS_PROCESS(axi_stream_to_vga);

    ~axi_stream_to_vga();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_21;
    sc_signal< sc_lv<4> > color_blinking_V;
    sc_signal< sc_lv<19> > indvar_flatten_reg_192;
    sc_signal< sc_lv<10> > y_reg_203;
    sc_signal< sc_lv<10> > x_reg_214;
    sc_signal< sc_lv<1> > selftest_read_read_fu_134_p2;
    sc_signal< sc_lv<4> > op2_V_read_assign_fu_252_p2;
    sc_signal< sc_lv<4> > op2_V_read_assign_reg_498;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_140_p3;
    sc_signal< sc_lv<1> > tmp_reg_503;
    sc_signal< sc_lv<4> > tmp_6_i_fu_264_p2;
    sc_signal< sc_lv<4> > tmp_6_i_reg_507;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_270_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_512;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_1;
    sc_signal< bool > ap_sig_bdd_63;
    sc_signal< sc_lv<1> > or_cond2_fu_386_p2;
    sc_signal< bool > ap_sig_bdd_78;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_lv<19> > indvar_flatten_next_fu_276_p2;
    sc_signal< sc_lv<10> > y_mid2_fu_302_p3;
    sc_signal< sc_lv<10> > y_mid2_reg_521;
    sc_signal< sc_lv<1> > or_cond2_reg_526;
    sc_signal< sc_lv<10> > x_1_fu_452_p2;
    sc_signal< sc_lv<10> > y_phi_fu_207_p4;
    sc_signal< sc_lv<4> > R_temp_V_read_assign_fu_122;
    sc_signal< sc_lv<21> > tmp_2_i_fu_442_p4;
    sc_signal< sc_lv<4> > G_temp_V_read_assign_fu_126;
    sc_signal< sc_lv<4> > B_temp_V_read_assign_fu_130;
    sc_signal< sc_lv<1> > icmp_fu_326_p2;
    sc_signal< sc_lv<1> > V_SYNC_V_preg;
    sc_signal< sc_lv<1> > not_1_fu_361_p2;
    sc_signal< sc_lv<1> > H_SYNC_V_preg;
    sc_signal< sc_lv<4> > R_V_preg;
    sc_signal< sc_lv<4> > G_V_preg;
    sc_signal< sc_lv<4> > B_V_preg;
    sc_signal< sc_lv<1> > exitcond4_fu_282_p2;
    sc_signal< sc_lv<10> > y_s_fu_296_p2;
    sc_signal< sc_lv<9> > tmp_3_fu_316_p4;
    sc_signal< sc_lv<1> > tmp_1_fu_333_p2;
    sc_signal< sc_lv<1> > tmp_2_fu_339_p2;
    sc_signal< sc_lv<10> > x_mid2_fu_288_p3;
    sc_signal< sc_lv<11> > tmp_3_cast_fu_351_p1;
    sc_signal< sc_lv<1> > tmp_4_fu_368_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_374_p2;
    sc_signal< sc_lv<1> > tmp2_fu_345_p2;
    sc_signal< sc_lv<1> > tmp1_fu_380_p2;
    sc_signal< sc_lv<10> > p_Val2_1_fu_310_p2;
    sc_signal< sc_lv<11> > p_Val2_s_fu_355_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_430_p3;
    sc_signal< sc_lv<19> > tmp_1_i_fu_438_p1;
    sc_signal< sc_lv<1> > tmp_6_fu_422_p3;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_2;
    sc_signal< bool > ap_sig_bdd_296;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< bool > ap_sig_bdd_106;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_st1_fsm_0;
    static const sc_lv<3> ap_ST_pp0_stg0_fsm_1;
    static const sc_lv<3> ap_ST_st4_fsm_2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<19> ap_const_lv19_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<21> ap_const_lv21_3;
    static const sc_lv<21> ap_const_lv21_2;
    static const sc_lv<21> ap_const_lv21_1;
    static const sc_lv<21> ap_const_lv21_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<19> ap_const_lv19_668A0;
    static const sc_lv<19> ap_const_lv19_1;
    static const sc_lv<10> ap_const_lv10_320;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<10> ap_const_lv10_3DD;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<10> ap_const_lv10_22;
    static const sc_lv<10> ap_const_lv10_203;
    static const sc_lv<11> ap_const_lv11_770;
    static const sc_lv<10> ap_const_lv10_5F;
    static const sc_lv<10> ap_const_lv10_8F;
    static const sc_lv<10> ap_const_lv10_310;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_B_V();
    void thread_G_V();
    void thread_H_SYNC_V();
    void thread_R_V();
    void thread_V_SYNC_V();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_bdd_106();
    void thread_ap_sig_bdd_21();
    void thread_ap_sig_bdd_296();
    void thread_ap_sig_bdd_63();
    void thread_ap_sig_bdd_78();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_1();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st4_fsm_2();
    void thread_exitcond4_fu_282_p2();
    void thread_exitcond_flatten_fu_270_p2();
    void thread_icmp_fu_326_p2();
    void thread_inStream_V_V_TREADY();
    void thread_indvar_flatten_next_fu_276_p2();
    void thread_not_1_fu_361_p2();
    void thread_op2_V_read_assign_fu_252_p2();
    void thread_or_cond2_fu_386_p2();
    void thread_p_Val2_1_fu_310_p2();
    void thread_p_Val2_s_fu_355_p2();
    void thread_selftest_read_read_fu_134_p2();
    void thread_tmp1_fu_380_p2();
    void thread_tmp2_fu_345_p2();
    void thread_tmp_1_fu_333_p2();
    void thread_tmp_1_i_fu_438_p1();
    void thread_tmp_2_fu_339_p2();
    void thread_tmp_2_i_fu_442_p4();
    void thread_tmp_3_cast_fu_351_p1();
    void thread_tmp_3_fu_316_p4();
    void thread_tmp_4_fu_368_p2();
    void thread_tmp_5_fu_374_p2();
    void thread_tmp_6_fu_422_p3();
    void thread_tmp_6_i_fu_264_p2();
    void thread_tmp_7_fu_430_p3();
    void thread_tmp_nbreadreq_fu_140_p3();
    void thread_x_1_fu_452_p2();
    void thread_x_mid2_fu_288_p3();
    void thread_y_mid2_fu_302_p3();
    void thread_y_phi_fu_207_p4();
    void thread_y_s_fu_296_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
