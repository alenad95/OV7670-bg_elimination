// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="LF_valid_to_AXIS,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.459000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=35,HLS_SYN_LUT=110}" *)

module LF_valid_to_AXIS (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_in_V,
        frame_valid,
        line_valid,
        outputStream_V_V_TDATA,
        outputStream_V_V_TVALID,
        outputStream_V_V_TREADY,
        frame_offset
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_4AFFF = 32'b1001010111111111111;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] data_in_V;
input   frame_valid;
input   line_valid;
output  [7:0] outputStream_V_V_TDATA;
output   outputStream_V_V_TVALID;
input   outputStream_V_V_TREADY;
output  [31:0] frame_offset;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg outputStream_V_V_TVALID;
reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm = 1'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_19;
reg   [0:0] res = 1'b1;
reg   [31:0] frame_offset_inner = 32'b11111111111111111111111111111111;
reg   [31:0] tmp_4_phi_fu_82_p8;
wire   [0:0] res_load_load_fu_93_p1;
wire   [0:0] frame_valid_read_read_fu_46_p2;
wire   [0:0] line_valid_read_read_fu_52_p2;
reg    ap_sig_ioackin_outputStream_V_V_TREADY;
wire   [31:0] storemerge_fu_116_p3;
reg    ap_reg_ioackin_outputStream_V_V_TREADY = 1'b0;
wire   [0:0] tmp_2_fu_104_p2;
wire   [31:0] tmp_3_fu_110_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_sig_bdd_120;
reg    ap_sig_bdd_63;




always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ioackin_outputStream_V_V_TREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_outputStream_V_V_TREADY <= ap_const_logic_0;
    end else begin
        if (ap_sig_bdd_63) begin
            if (~((ap_start == ap_const_logic_0) | ((res_load_load_fu_93_p1 == ap_const_lv1_0) & ~(ap_const_lv1_0 == frame_valid_read_read_fu_46_p2) & ~(ap_const_lv1_0 == line_valid_read_read_fu_52_p2) & (ap_const_logic_0 == ap_sig_ioackin_outputStream_V_V_TREADY)))) begin
                ap_reg_ioackin_outputStream_V_V_TREADY <= ap_const_logic_0;
            end else if (ap_sig_bdd_120) begin
                ap_reg_ioackin_outputStream_V_V_TREADY <= ap_const_logic_1;
            end
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_frame_offset_inner
    if (ap_rst_n_inv == 1'b1) begin
        frame_offset_inner <= ap_const_lv32_FFFFFFFF;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (res_load_load_fu_93_p1 == ap_const_lv1_0) & ~(ap_const_lv1_0 == frame_valid_read_read_fu_46_p2) & ~(ap_const_lv1_0 == line_valid_read_read_fu_52_p2) & ~((ap_start == ap_const_logic_0) | ((res_load_load_fu_93_p1 == ap_const_lv1_0) & ~(ap_const_lv1_0 == frame_valid_read_read_fu_46_p2) & ~(ap_const_lv1_0 == line_valid_read_read_fu_52_p2) & (ap_const_logic_0 == ap_sig_ioackin_outputStream_V_V_TREADY))))) begin
            frame_offset_inner <= storemerge_fu_116_p3;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_res
    if (ap_rst_n_inv == 1'b1) begin
        res <= ap_const_lv1_1;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (ap_const_lv1_0 == frame_valid_read_read_fu_46_p2) & ~((ap_start == ap_const_logic_0) | ((res_load_load_fu_93_p1 == ap_const_lv1_0) & ~(ap_const_lv1_0 == frame_valid_read_read_fu_46_p2) & ~(ap_const_lv1_0 == line_valid_read_read_fu_52_p2) & (ap_const_logic_0 == ap_sig_ioackin_outputStream_V_V_TREADY))) & ~(res_load_load_fu_93_p1 == ap_const_lv1_0))) begin
            res <= ap_const_lv1_0;
        end
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or res_load_load_fu_93_p1 or frame_valid_read_read_fu_46_p2 or line_valid_read_read_fu_52_p2 or ap_sig_ioackin_outputStream_V_V_TREADY) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == ap_const_logic_0) | ((res_load_load_fu_93_p1 == ap_const_lv1_0) & ~(ap_const_lv1_0 == frame_valid_read_read_fu_46_p2) & ~(ap_const_lv1_0 == line_valid_read_read_fu_52_p2) & (ap_const_logic_0 == ap_sig_ioackin_outputStream_V_V_TREADY))))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or res_load_load_fu_93_p1 or frame_valid_read_read_fu_46_p2 or line_valid_read_read_fu_52_p2 or ap_sig_ioackin_outputStream_V_V_TREADY) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == ap_const_logic_0) | ((res_load_load_fu_93_p1 == ap_const_lv1_0) & ~(ap_const_lv1_0 == frame_valid_read_read_fu_46_p2) & ~(ap_const_lv1_0 == line_valid_read_read_fu_52_p2) & (ap_const_logic_0 == ap_sig_ioackin_outputStream_V_V_TREADY))))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_19) begin
    if (ap_sig_bdd_19) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (outputStream_V_V_TREADY or ap_reg_ioackin_outputStream_V_V_TREADY) begin
    if ((ap_const_logic_0 == ap_reg_ioackin_outputStream_V_V_TREADY)) begin
        ap_sig_ioackin_outputStream_V_V_TREADY = outputStream_V_V_TREADY;
    end else begin
        ap_sig_ioackin_outputStream_V_V_TREADY = ap_const_logic_1;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or res_load_load_fu_93_p1 or frame_valid_read_read_fu_46_p2 or line_valid_read_read_fu_52_p2 or ap_reg_ioackin_outputStream_V_V_TREADY) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (res_load_load_fu_93_p1 == ap_const_lv1_0) & ~(ap_const_lv1_0 == frame_valid_read_read_fu_46_p2) & ~(ap_const_lv1_0 == line_valid_read_read_fu_52_p2) & ~(ap_start == ap_const_logic_0) & (ap_const_logic_0 == ap_reg_ioackin_outputStream_V_V_TREADY))) begin
        outputStream_V_V_TVALID = ap_const_logic_1;
    end else begin
        outputStream_V_V_TVALID = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or frame_offset_inner or res_load_load_fu_93_p1 or frame_valid_read_read_fu_46_p2 or line_valid_read_read_fu_52_p2 or storemerge_fu_116_p3) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (res_load_load_fu_93_p1 == ap_const_lv1_0) & ~(ap_const_lv1_0 == frame_valid_read_read_fu_46_p2) & ~(ap_const_lv1_0 == line_valid_read_read_fu_52_p2))) begin
        tmp_4_phi_fu_82_p8 = storemerge_fu_116_p3;
    end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(res_load_load_fu_93_p1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (res_load_load_fu_93_p1 == ap_const_lv1_0) & (ap_const_lv1_0 == frame_valid_read_read_fu_46_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (res_load_load_fu_93_p1 == ap_const_lv1_0) & ~(ap_const_lv1_0 == frame_valid_read_read_fu_46_p2) & (ap_const_lv1_0 == line_valid_read_read_fu_52_p2)))) begin
        tmp_4_phi_fu_82_p8 = frame_offset_inner;
    end else begin
        tmp_4_phi_fu_82_p8 = 'bx;
    end
end
always @ (ap_start or ap_CS_fsm or res_load_load_fu_93_p1 or frame_valid_read_read_fu_46_p2 or line_valid_read_read_fu_52_p2 or ap_sig_ioackin_outputStream_V_V_TREADY) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end



always @ (ap_rst_n) begin
    ap_rst_n_inv = ~ap_rst_n;
end


always @ (ap_start or outputStream_V_V_TREADY) begin
    ap_sig_bdd_120 = (~(ap_start == ap_const_logic_0) & (ap_const_logic_1 == outputStream_V_V_TREADY));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_19 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_sig_cseq_ST_st1_fsm_0 or res_load_load_fu_93_p1 or frame_valid_read_read_fu_46_p2 or line_valid_read_read_fu_52_p2) begin
    ap_sig_bdd_63 = ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (res_load_load_fu_93_p1 == ap_const_lv1_0) & ~(ap_const_lv1_0 == frame_valid_read_read_fu_46_p2) & ~(ap_const_lv1_0 == line_valid_read_read_fu_52_p2));
end

assign frame_offset = tmp_4_phi_fu_82_p8;

assign frame_valid_read_read_fu_46_p2 = frame_valid;

assign line_valid_read_read_fu_52_p2 = line_valid;

assign outputStream_V_V_TDATA = data_in_V;

assign res_load_load_fu_93_p1 = res;

assign storemerge_fu_116_p3 = ((tmp_2_fu_104_p2[0:0] === 1'b1) ? ap_const_lv32_0 : tmp_3_fu_110_p2);

assign tmp_2_fu_104_p2 = (frame_offset_inner == ap_const_lv32_4AFFF? 1'b1: 1'b0);

assign tmp_3_fu_110_p2 = (frame_offset_inner + ap_const_lv32_1);


endmodule //LF_valid_to_AXIS

