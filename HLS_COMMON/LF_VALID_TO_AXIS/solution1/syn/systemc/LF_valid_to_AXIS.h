// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _LF_valid_to_AXIS_HH_
#define _LF_valid_to_AXIS_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct LF_valid_to_AXIS : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > data_in_V;
    sc_in< sc_logic > frame_valid;
    sc_in< sc_logic > line_valid;
    sc_out< sc_lv<8> > outputStream_V_V_TDATA;
    sc_out< sc_logic > outputStream_V_V_TVALID;
    sc_in< sc_logic > outputStream_V_V_TREADY;


    // Module declarations
    LF_valid_to_AXIS(sc_module_name name);
    SC_HAS_PROCESS(LF_valid_to_AXIS);

    ~LF_valid_to_AXIS();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_18;
    sc_signal< sc_lv<1> > res;
    sc_signal< sc_logic > outputStream_V_V_TDATA_blk_n;
    sc_signal< sc_lv<1> > res_load_load_fu_64_p1;
    sc_signal< sc_lv<1> > frame_valid_read_read_fu_38_p2;
    sc_signal< sc_lv<1> > line_valid_read_read_fu_44_p2;
    sc_signal< sc_logic > ap_sig_ioackin_outputStream_V_V_TREADY;
    sc_signal< sc_logic > ap_reg_ioackin_outputStream_V_V_TREADY;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< bool > ap_sig_80;
    sc_signal< bool > ap_sig_45;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_st1_fsm_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_18();
    void thread_ap_sig_45();
    void thread_ap_sig_80();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_ioackin_outputStream_V_V_TREADY();
    void thread_frame_valid_read_read_fu_38_p2();
    void thread_line_valid_read_read_fu_44_p2();
    void thread_outputStream_V_V_TDATA();
    void thread_outputStream_V_V_TDATA_blk_n();
    void thread_outputStream_V_V_TVALID();
    void thread_res_load_load_fu_64_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
