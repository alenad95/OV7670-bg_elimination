<profile>

<section name = "Vivado HLS Report for 'axis_to_ddr_writer'" level="0">
<item name = "Date">Sat Apr 30 19:20:28 2016
</item>
<item name = "Version">2015.4 (Build 1412921 on Wed Nov 18 09:58:55 AM 2015)</item>
<item name = "Project">AXIS_TO_DDR_WRITER_VGA64</item>
<item name = "Solution">solution1</item>
<item name = "Product family">zynq</item>
<item name = "Target device">xc7z020clg484-1</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing (ns)">
<section name = "" level="1">
<item name = "Target clock period (ns)">10.00</item>
<item name = "Clock uncertainty (ns)">1.25</item>
<item name = "Estimated clock period (ns)">8.75</item>
</section>
</item>
<item name = "Latency (clock cycles)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">, min, max, min, max, Type</keys>
<column name="">346351, 346351, 346352, 346352, none</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="7">Instance, Module, min, max, min, max, Type</keys>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
<column name="- Loop 1">346350, 346350, 4618, -, -, 75, no</column>
<column name=" + Loop 1.1">4096, 4096, 1, 1, 1, 4096, yes</column>
<column name=" + memcpy.base_ddr_addr.buffer.gep">513, 513, 3, 1, 1, 512, yes</column>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="5">Name, BRAM_18K, DSP48E, FF, LUT</keys>
<column name="DSP">-, -, -, -</column>
<column name="Expression">-, 1, 0, 98</column>
<column name="FIFO">-, -, -, -</column>
<column name="Instance">-, -, 548, 700</column>
<column name="Memory">2, -, 0, 0</column>
<column name="Multiplexer">-, -, -, 59</column>
<column name="Register">-, -, 197, -</column>
<specialColumn name="Available">280, 220, 106400, 53200</specialColumn>
<specialColumn name="Utilization (%)">~0, ~0, ~0, 1</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="6">Instance, Module, BRAM_18K, DSP48E, FF, LUT</keys>
<column name="axis_to_ddr_writer_base_ddr_addr_m_axi_U">axis_to_ddr_writer_base_ddr_addr_m_axi, 0, 0, 548, 700</column>
</table>
</item>
<item name = "DSP48"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="9">Memory, Module, BRAM_18K, FF, LUT, Words, Bits, Banks, W*Bits*Banks</keys>
<column name="buffer_U">axis_to_ddr_writer_buffer, 2, 0, 0, 512, 64, 1, 32768</column>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="7">Name, BRAM_18K, FF, LUT, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP48E, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="tmp_1_fu_214_p2">*, 1, 0, 0, 3, 19</column>
<column name="frame_count">+, 0, 0, 32, 32, 1</column>
<column name="idx_1_fu_236_p2">+, 0, 0, 7, 7, 1</column>
<column name="indvar_flatten_next_fu_276_p2">+, 0, 0, 13, 13, 1</column>
<column name="indvar_next_fu_299_p2">+, 0, 0, 10, 10, 1</column>
<column name="offset_fu_310_p2">+, 0, 0, 19, 19, 10</column>
<column name="tmp_4_fu_242_p2">+, 0, 0, 3, 3, 1</column>
<column name="ap_sig_bdd_207">and, 0, 0, 1, 1, 1</column>
<column name="ap_sig_bdd_317">and, 0, 0, 1, 1, 1</column>
<column name="exitcond1_fu_230_p2">icmp, 0, 0, 3, 7, 7</column>
<column name="exitcond3_fu_293_p2">icmp, 0, 0, 4, 10, 11</column>
<column name="exitcond_flatten_fu_270_p2">icmp, 0, 0, 5, 13, 14</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_NS_fsm">4, 11, 1, 11</column>
<column name="ap_reg_ppiten_pp1_it2">1, 2, 1, 2</column>
<column name="ap_sig_ioackin_base_ddr_addr_AWREADY">1, 2, 1, 2</column>
<column name="ap_sig_ioackin_base_ddr_addr_WREADY">1, 2, 1, 2</column>
<column name="frame_index_V">3, 2, 3, 6</column>
<column name="idx_reg_172">7, 2, 7, 14</column>
<column name="indvar_flatten_reg_183">13, 2, 13, 26</column>
<column name="indvar_reg_194">10, 2, 10, 20</column>
<column name="offset1_reg_162">19, 2, 19, 38</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="ap_CS_fsm">10, 0, 10, 0</column>
<column name="ap_reg_ioackin_base_ddr_addr_AWREADY">1, 0, 1, 0</column>
<column name="ap_reg_ioackin_base_ddr_addr_WREADY">1, 0, 1, 0</column>
<column name="ap_reg_ppiten_pp1_it0">1, 0, 1, 0</column>
<column name="ap_reg_ppiten_pp1_it1">1, 0, 1, 0</column>
<column name="ap_reg_ppiten_pp1_it2">1, 0, 1, 0</column>
<column name="ap_reg_ppstg_exitcond3_reg_348_pp1_it1">1, 0, 1, 0</column>
<column name="buffer_load_reg_362">64, 0, 64, 0</column>
<column name="exitcond3_reg_348">1, 0, 1, 0</column>
<column name="frame_count_inner">32, 0, 32, 0</column>
<column name="frame_index_V_preg">3, 0, 3, 0</column>
<column name="idx_1_reg_330">7, 0, 7, 0</column>
<column name="idx_reg_172">7, 0, 7, 0</column>
<column name="indvar_flatten_reg_183">13, 0, 13, 0</column>
<column name="indvar_reg_194">10, 0, 10, 0</column>
<column name="inner_index_V">3, 0, 3, 0</column>
<column name="inner_index_V_load_reg_316">3, 0, 3, 0</column>
<column name="offset1_reg_162">19, 0, 19, 0</column>
<column name="offset_reg_367">19, 0, 19, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="ap_clk">in, 1, ap_ctrl_hs, axis_to_ddr_writer, return value</column>
<column name="ap_rst_n">in, 1, ap_ctrl_hs, axis_to_ddr_writer, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, axis_to_ddr_writer, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, axis_to_ddr_writer, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, axis_to_ddr_writer, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, axis_to_ddr_writer, return value</column>
<column name="inputStream_V_TDATA">in, 8, axis, inputStream_V, pointer</column>
<column name="inputStream_V_TVALID">in, 1, axis, inputStream_V, pointer</column>
<column name="inputStream_V_TREADY">out, 1, axis, inputStream_V, pointer</column>
<column name="m_axi_base_ddr_addr_AWVALID">out, 1, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_AWREADY">in, 1, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_AWADDR">out, 32, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_AWID">out, 1, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_AWLEN">out, 8, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_AWSIZE">out, 3, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_AWBURST">out, 2, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_AWLOCK">out, 2, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_AWCACHE">out, 4, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_AWPROT">out, 3, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_AWQOS">out, 4, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_AWREGION">out, 4, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_AWUSER">out, 1, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_WVALID">out, 1, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_WREADY">in, 1, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_WDATA">out, 64, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_WSTRB">out, 8, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_WLAST">out, 1, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_WID">out, 1, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_WUSER">out, 1, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_ARVALID">out, 1, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_ARREADY">in, 1, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_ARADDR">out, 32, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_ARID">out, 1, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_ARLEN">out, 8, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_ARSIZE">out, 3, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_ARBURST">out, 2, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_ARLOCK">out, 2, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_ARCACHE">out, 4, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_ARPROT">out, 3, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_ARQOS">out, 4, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_ARREGION">out, 4, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_ARUSER">out, 1, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_RVALID">in, 1, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_RREADY">out, 1, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_RDATA">in, 64, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_RLAST">in, 1, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_RID">in, 1, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_RUSER">in, 1, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_RRESP">in, 2, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_BVALID">in, 1, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_BREADY">out, 1, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_BRESP">in, 2, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_BID">in, 1, m_axi, base_ddr_addr, pointer</column>
<column name="m_axi_base_ddr_addr_BUSER">in, 1, m_axi, base_ddr_addr, pointer</column>
<column name="frame_index_V">out, 3, ap_none, frame_index_V, pointer</column>
<column name="frame_count">out, 32, ap_none, frame_count, pointer</column>
</table>
</item>
</section>

<section name = "Critical Path" level="0">
<item name = "Max Delay">8.75</item>
<item name = "Critical Path Table"><table name="Critical Path Table" hasTotal="0">
<keys size="15">Name, Operator, Delay, Accumulated Delay, Store Source, Resource, Core, Interface, Type, Port, Array, Scope, Pointer, Callee, Phi Node</keys>
<column name="'tmp', AXIS_TO_DDR_WRITER_VGA64/axis_to_ddr_writer.cpp:116">zext, 0.00, 0.00, -, -, -, -, -, -, -, -, -, -, -</column>
<column name="'base_ddr_addr_addr', AXIS_TO_DDR_WRITER_VGA64/axis_to_ddr_writer.cpp:116">getelementptr, 0.00, 0.00, -, -, -, -, -, -, -, -, -, -, -</column>
<column name="'p_wr_req', AXIS_TO_DDR_WRITER_VGA64/axis_to_ddr_writer.cpp:116">writereq, 8.75, 8.75, -, -, -, m_axi, request, &apos;base_ddr_addr&apos;, -, -, -, -, -</column>
</table>
</item>
</section>
</profile>
