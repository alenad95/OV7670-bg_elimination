// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "ddr_to_axis_reader.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic ddr_to_axis_reader::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic ddr_to_axis_reader::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<12> ddr_to_axis_reader::ap_ST_st1_fsm_0 = "1";
const sc_lv<12> ddr_to_axis_reader::ap_ST_st2_fsm_1 = "10";
const sc_lv<12> ddr_to_axis_reader::ap_ST_st3_fsm_2 = "100";
const sc_lv<12> ddr_to_axis_reader::ap_ST_st4_fsm_3 = "1000";
const sc_lv<12> ddr_to_axis_reader::ap_ST_st5_fsm_4 = "10000";
const sc_lv<12> ddr_to_axis_reader::ap_ST_st6_fsm_5 = "100000";
const sc_lv<12> ddr_to_axis_reader::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<12> ddr_to_axis_reader::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<12> ddr_to_axis_reader::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<12> ddr_to_axis_reader::ap_ST_pp0_stg0_fsm_9 = "1000000000";
const sc_lv<12> ddr_to_axis_reader::ap_ST_pp1_stg0_fsm_10 = "10000000000";
const sc_lv<12> ddr_to_axis_reader::ap_ST_st16_fsm_11 = "100000000000";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> ddr_to_axis_reader::ap_const_lv1_1 = "1";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const int ddr_to_axis_reader::C_M_AXI_DATA_WIDTH = "100000";
const int ddr_to_axis_reader::C_M_AXI_BASE_DDR_ADDR_TARGET_ADDR = "0000000000000000000000000000000000000000000000000000000000000000";
const int ddr_to_axis_reader::C_M_AXI_BASE_DDR_ADDR_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int ddr_to_axis_reader::C_M_AXI_BASE_DDR_ADDR_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int ddr_to_axis_reader::C_M_AXI_BASE_DDR_ADDR_CACHE_VALUE = "11";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_9 = "1001";
const sc_lv<1> ddr_to_axis_reader::ap_const_lv1_0 = "0";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_1 = "1";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_2 = "10";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_A = "1010";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_B = "1011";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_8 = "1000";
const sc_lv<7> ddr_to_axis_reader::ap_const_lv7_0 = "0000000";
const sc_lv<10> ddr_to_axis_reader::ap_const_lv10_0 = "0000000000";
const sc_lv<13> ddr_to_axis_reader::ap_const_lv13_0 = "0000000000000";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_200 = "1000000000";
const sc_lv<3> ddr_to_axis_reader::ap_const_lv3_0 = "000";
const sc_lv<2> ddr_to_axis_reader::ap_const_lv2_0 = "00";
const sc_lv<4> ddr_to_axis_reader::ap_const_lv4_0 = "0000";
const sc_lv<3> ddr_to_axis_reader::ap_const_lv3_7 = "111";
const sc_lv<22> ddr_to_axis_reader::ap_const_lv22_4B000 = "1001011000000000000";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_3 = "11";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_15 = "10101";
const sc_lv<7> ddr_to_axis_reader::ap_const_lv7_4B = "1001011";
const sc_lv<7> ddr_to_axis_reader::ap_const_lv7_1 = "1";
const sc_lv<10> ddr_to_axis_reader::ap_const_lv10_200 = "1000000000";
const sc_lv<10> ddr_to_axis_reader::ap_const_lv10_1 = "1";
const sc_lv<13> ddr_to_axis_reader::ap_const_lv13_1000 = "1000000000000";
const sc_lv<13> ddr_to_axis_reader::ap_const_lv13_1 = "1";
const sc_lv<6> ddr_to_axis_reader::ap_const_lv6_7 = "111";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_3F = "111111";
const sc_lv<7> ddr_to_axis_reader::ap_const_lv7_3F = "111111";
const sc_lv<64> ddr_to_axis_reader::ap_const_lv64_FFFFFFFFFFFFFFFF = "1111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<19> ddr_to_axis_reader::ap_const_lv19_200 = "1000000000";
const sc_lv<64> ddr_to_axis_reader::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<8> ddr_to_axis_reader::ap_const_lv8_0 = "00000000";

ddr_to_axis_reader::ddr_to_axis_reader(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ddr_to_axis_reader_base_ddr_addr_m_axi_U = new ddr_to_axis_reader_base_ddr_addr_m_axi<64,32,5,C_M_AXI_BASE_DDR_ADDR_ID_WIDTH,C_M_AXI_BASE_DDR_ADDR_ADDR_WIDTH,C_M_AXI_BASE_DDR_ADDR_DATA_WIDTH,C_M_AXI_BASE_DDR_ADDR_AWUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_ARUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_WUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_RUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_BUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_TARGET_ADDR,C_M_AXI_BASE_DDR_ADDR_USER_VALUE,C_M_AXI_BASE_DDR_ADDR_PROT_VALUE,C_M_AXI_BASE_DDR_ADDR_CACHE_VALUE>("ddr_to_axis_reader_base_ddr_addr_m_axi_U");
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWVALID(m_axi_base_ddr_addr_AWVALID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWREADY(m_axi_base_ddr_addr_AWREADY);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWADDR(m_axi_base_ddr_addr_AWADDR);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWID(m_axi_base_ddr_addr_AWID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWLEN(m_axi_base_ddr_addr_AWLEN);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWSIZE(m_axi_base_ddr_addr_AWSIZE);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWBURST(m_axi_base_ddr_addr_AWBURST);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWLOCK(m_axi_base_ddr_addr_AWLOCK);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWCACHE(m_axi_base_ddr_addr_AWCACHE);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWPROT(m_axi_base_ddr_addr_AWPROT);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWQOS(m_axi_base_ddr_addr_AWQOS);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWREGION(m_axi_base_ddr_addr_AWREGION);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWUSER(m_axi_base_ddr_addr_AWUSER);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->WVALID(m_axi_base_ddr_addr_WVALID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->WREADY(m_axi_base_ddr_addr_WREADY);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->WDATA(m_axi_base_ddr_addr_WDATA);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->WSTRB(m_axi_base_ddr_addr_WSTRB);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->WLAST(m_axi_base_ddr_addr_WLAST);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->WID(m_axi_base_ddr_addr_WID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->WUSER(m_axi_base_ddr_addr_WUSER);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARVALID(m_axi_base_ddr_addr_ARVALID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARREADY(m_axi_base_ddr_addr_ARREADY);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARADDR(m_axi_base_ddr_addr_ARADDR);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARID(m_axi_base_ddr_addr_ARID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARLEN(m_axi_base_ddr_addr_ARLEN);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARSIZE(m_axi_base_ddr_addr_ARSIZE);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARBURST(m_axi_base_ddr_addr_ARBURST);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARLOCK(m_axi_base_ddr_addr_ARLOCK);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARCACHE(m_axi_base_ddr_addr_ARCACHE);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARPROT(m_axi_base_ddr_addr_ARPROT);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARQOS(m_axi_base_ddr_addr_ARQOS);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARREGION(m_axi_base_ddr_addr_ARREGION);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARUSER(m_axi_base_ddr_addr_ARUSER);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->RVALID(m_axi_base_ddr_addr_RVALID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->RREADY(m_axi_base_ddr_addr_RREADY);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->RDATA(m_axi_base_ddr_addr_RDATA);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->RLAST(m_axi_base_ddr_addr_RLAST);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->RID(m_axi_base_ddr_addr_RID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->RUSER(m_axi_base_ddr_addr_RUSER);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->RRESP(m_axi_base_ddr_addr_RRESP);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->BVALID(m_axi_base_ddr_addr_BVALID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->BREADY(m_axi_base_ddr_addr_BREADY);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->BRESP(m_axi_base_ddr_addr_BRESP);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->BID(m_axi_base_ddr_addr_BID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->BUSER(m_axi_base_ddr_addr_BUSER);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ACLK(ap_clk);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARESET(ap_rst_n_inv);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ACLK_EN(ddr_to_axis_reader_base_ddr_addr_m_axi_U_ap_dummy_ce);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARVALID(base_ddr_addr_ARVALID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARREADY(base_ddr_addr_ARREADY);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARADDR(base_ddr_addr_ARADDR);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARID(base_ddr_addr_ARID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARLEN(base_ddr_addr_ARLEN);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARSIZE(base_ddr_addr_ARSIZE);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARLOCK(base_ddr_addr_ARLOCK);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARCACHE(base_ddr_addr_ARCACHE);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARQOS(base_ddr_addr_ARQOS);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARPROT(base_ddr_addr_ARPROT);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARUSER(base_ddr_addr_ARUSER);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARBURST(base_ddr_addr_ARBURST);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARREGION(base_ddr_addr_ARREGION);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_RVALID(base_ddr_addr_RVALID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_RREADY(base_ddr_addr_RREADY);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_RDATA(base_ddr_addr_RDATA);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_RID(base_ddr_addr_RID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_RUSER(base_ddr_addr_RUSER);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_RRESP(base_ddr_addr_RRESP);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_RLAST(base_ddr_addr_RLAST);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWVALID(base_ddr_addr_AWVALID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWREADY(base_ddr_addr_AWREADY);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWADDR(base_ddr_addr_AWADDR);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWID(base_ddr_addr_AWID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWLEN(base_ddr_addr_AWLEN);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWSIZE(base_ddr_addr_AWSIZE);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWLOCK(base_ddr_addr_AWLOCK);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWCACHE(base_ddr_addr_AWCACHE);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWQOS(base_ddr_addr_AWQOS);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWPROT(base_ddr_addr_AWPROT);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWUSER(base_ddr_addr_AWUSER);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWBURST(base_ddr_addr_AWBURST);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWREGION(base_ddr_addr_AWREGION);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_WVALID(base_ddr_addr_WVALID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_WREADY(base_ddr_addr_WREADY);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_WDATA(base_ddr_addr_WDATA);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_WID(base_ddr_addr_WID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_WUSER(base_ddr_addr_WUSER);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_WLAST(base_ddr_addr_WLAST);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_WSTRB(base_ddr_addr_WSTRB);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_BVALID(base_ddr_addr_BVALID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_BREADY(base_ddr_addr_BREADY);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_BRESP(base_ddr_addr_BRESP);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_BID(base_ddr_addr_BID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_BUSER(base_ddr_addr_BUSER);
    buffer_U = new ddr_to_axis_reader_buffer("buffer_U");
    buffer_U->clk(ap_clk);
    buffer_U->reset(ap_rst_n_inv);
    buffer_U->address0(buffer_address0);
    buffer_U->ce0(buffer_ce0);
    buffer_U->q0(buffer_q0);
    buffer_U->address1(buffer_address1);
    buffer_U->ce1(buffer_ce1);
    buffer_U->we1(buffer_we1);
    buffer_U->d1(buffer_d1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond1_fu_270_p2 );
    sensitive << ( ap_sig_ioackin_base_ddr_addr_ARREADY );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond1_fu_270_p2 );
    sensitive << ( ap_sig_ioackin_base_ddr_addr_ARREADY );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_bdd_185);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_194);
    sensitive << ( base_ddr_addr_RVALID );
    sensitive << ( exitcond2_reg_543 );

    SC_METHOD(thread_ap_sig_bdd_216);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_227);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_256);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_296);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_303);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_348);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond1_fu_270_p2 );

    SC_METHOD(thread_ap_sig_bdd_378);
    sensitive << ( ap_reg_ppstg_exitcond_reg_557_pp1_it1 );
    sensitive << ( ap_reg_ppiten_pp1_it2 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_9);
    sensitive << ( ap_sig_bdd_185 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp1_stg0_fsm_10);
    sensitive << ( ap_sig_bdd_256 );

    SC_METHOD(thread_ap_sig_cseq_ST_st16_fsm_11);
    sensitive << ( ap_sig_bdd_296 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_30 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_216 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_227 );

    SC_METHOD(thread_ap_sig_cseq_ST_st9_fsm_8);
    sensitive << ( ap_sig_bdd_303 );

    SC_METHOD(thread_ap_sig_ioackin_base_ddr_addr_ARREADY);
    sensitive << ( base_ddr_addr_ARREADY );
    sensitive << ( ap_reg_ioackin_base_ddr_addr_ARREADY );

    SC_METHOD(thread_ap_sig_ioackin_outStream_V_TREADY);
    sensitive << ( outStream_V_TREADY );
    sensitive << ( ap_reg_ioackin_outStream_V_TREADY );

    SC_METHOD(thread_base_ddr_addr_ARADDR);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond1_fu_270_p2 );
    sensitive << ( tmp_2_fu_282_p1 );
    sensitive << ( ap_reg_ioackin_base_ddr_addr_ARREADY );

    SC_METHOD(thread_base_ddr_addr_ARBURST);

    SC_METHOD(thread_base_ddr_addr_ARCACHE);

    SC_METHOD(thread_base_ddr_addr_ARID);

    SC_METHOD(thread_base_ddr_addr_ARLEN);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond1_fu_270_p2 );
    sensitive << ( ap_reg_ioackin_base_ddr_addr_ARREADY );

    SC_METHOD(thread_base_ddr_addr_ARLOCK);

    SC_METHOD(thread_base_ddr_addr_ARPROT);

    SC_METHOD(thread_base_ddr_addr_ARQOS);

    SC_METHOD(thread_base_ddr_addr_ARREGION);

    SC_METHOD(thread_base_ddr_addr_ARSIZE);

    SC_METHOD(thread_base_ddr_addr_ARUSER);

    SC_METHOD(thread_base_ddr_addr_ARVALID);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond1_fu_270_p2 );
    sensitive << ( ap_reg_ioackin_base_ddr_addr_ARREADY );

    SC_METHOD(thread_base_ddr_addr_AWADDR);

    SC_METHOD(thread_base_ddr_addr_AWBURST);

    SC_METHOD(thread_base_ddr_addr_AWCACHE);

    SC_METHOD(thread_base_ddr_addr_AWID);

    SC_METHOD(thread_base_ddr_addr_AWLEN);

    SC_METHOD(thread_base_ddr_addr_AWLOCK);

    SC_METHOD(thread_base_ddr_addr_AWPROT);

    SC_METHOD(thread_base_ddr_addr_AWQOS);

    SC_METHOD(thread_base_ddr_addr_AWREGION);

    SC_METHOD(thread_base_ddr_addr_AWSIZE);

    SC_METHOD(thread_base_ddr_addr_AWUSER);

    SC_METHOD(thread_base_ddr_addr_AWVALID);

    SC_METHOD(thread_base_ddr_addr_BREADY);

    SC_METHOD(thread_base_ddr_addr_RREADY);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_9 );
    sensitive << ( exitcond2_reg_543 );
    sensitive << ( ap_sig_bdd_194 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_base_ddr_addr_WDATA);

    SC_METHOD(thread_base_ddr_addr_WID);

    SC_METHOD(thread_base_ddr_addr_WLAST);

    SC_METHOD(thread_base_ddr_addr_WSTRB);

    SC_METHOD(thread_base_ddr_addr_WUSER);

    SC_METHOD(thread_base_ddr_addr_WVALID);

    SC_METHOD(thread_buffer_address0);
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_10 );
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( gepindex2_cast_fu_384_p1 );

    SC_METHOD(thread_buffer_address1);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( tmp_7_fu_353_p1 );

    SC_METHOD(thread_buffer_ce0);
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_10 );
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_557_pp1_it1 );
    sensitive << ( ap_sig_ioackin_outStream_V_TREADY );
    sensitive << ( ap_reg_ppiten_pp1_it2 );

    SC_METHOD(thread_buffer_ce1);
    sensitive << ( ap_sig_bdd_194 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    SC_METHOD(thread_buffer_d1);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( base_ddr_addr_addr_read_reg_552 );

    SC_METHOD(thread_buffer_we1);
    sensitive << ( ap_sig_bdd_194 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppstg_exitcond2_reg_543_pp0_it1 );

    SC_METHOD(thread_ddr_to_axis_reader_base_ddr_addr_m_axi_U_ap_dummy_ce);

    SC_METHOD(thread_end_pos_fu_396_p2);
    sensitive << ( start_pos_fu_389_p3 );

    SC_METHOD(thread_exitcond1_fu_270_p2);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond1_fu_270_p2 );
    sensitive << ( ap_sig_ioackin_base_ddr_addr_ARREADY );
    sensitive << ( i_reg_208 );

    SC_METHOD(thread_exitcond2_fu_341_p2);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_9 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_194 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( indvar_phi_fu_223_p4 );

    SC_METHOD(thread_exitcond_fu_358_p2);
    sensitive << ( j_reg_231 );
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_10 );
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_557_pp1_it1 );
    sensitive << ( ap_sig_ioackin_outStream_V_TREADY );
    sensitive << ( ap_reg_ppiten_pp1_it2 );

    SC_METHOD(thread_frame_count);
    sensitive << ( frame_count_inner );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond1_fu_270_p2 );

    SC_METHOD(thread_frame_count_equals);
    sensitive << ( frame_count_equals_inner );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond1_fu_270_p2 );
    sensitive << ( tmp_4_fu_314_p2 );

    SC_METHOD(thread_gepindex2_cast_fu_384_p1);
    sensitive << ( gepindex_cast_fu_374_p4 );

    SC_METHOD(thread_gepindex_cast_fu_374_p4);
    sensitive << ( j_reg_231 );

    SC_METHOD(thread_i_1_fu_276_p2);
    sensitive << ( i_reg_208 );

    SC_METHOD(thread_indvar_next_fu_347_p2);
    sensitive << ( indvar_phi_fu_223_p4 );

    SC_METHOD(thread_indvar_phi_fu_223_p4);
    sensitive << ( indvar_reg_219 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_9 );
    sensitive << ( exitcond2_reg_543 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( indvar_next_reg_547 );

    SC_METHOD(thread_inner_index_V_2_fu_242_p2);
    sensitive << ( frame_index_V );

    SC_METHOD(thread_j_1_fu_364_p2);
    sensitive << ( j_reg_231 );

    SC_METHOD(thread_offset_fu_503_p2);
    sensitive << ( offset1_reg_198 );

    SC_METHOD(thread_outStream_V_TDATA);
    sensitive << ( ap_reg_ppstg_exitcond_reg_557_pp1_it1 );
    sensitive << ( ap_reg_ppiten_pp1_it2 );
    sensitive << ( tmp_24_fu_493_p2 );

    SC_METHOD(thread_outStream_V_TVALID);
    sensitive << ( ap_reg_ppstg_exitcond_reg_557_pp1_it1 );
    sensitive << ( ap_reg_ppiten_pp1_it2 );
    sensitive << ( ap_reg_ioackin_outStream_V_TREADY );

    SC_METHOD(thread_start_pos_fu_389_p3);
    sensitive << ( tmp_6_reg_566 );

    SC_METHOD(thread_tmp_10_fu_408_p1);
    sensitive << ( start_pos_fu_389_p3 );

    SC_METHOD(thread_tmp_11_fu_412_p1);
    sensitive << ( end_pos_fu_396_p2 );

    SC_METHOD(thread_tmp_12_fu_416_p4);
    sensitive << ( buffer_q0 );

    SC_METHOD(thread_tmp_13_fu_426_p2);
    sensitive << ( tmp_10_fu_408_p1 );
    sensitive << ( tmp_11_fu_412_p1 );

    SC_METHOD(thread_tmp_14_fu_432_p2);
    sensitive << ( tmp_10_fu_408_p1 );

    SC_METHOD(thread_tmp_15_fu_438_p2);
    sensitive << ( tmp_10_fu_408_p1 );
    sensitive << ( tmp_11_fu_412_p1 );

    SC_METHOD(thread_tmp_16_fu_444_p3);
    sensitive << ( tmp_8_fu_402_p2 );
    sensitive << ( tmp_13_fu_426_p2 );
    sensitive << ( tmp_15_fu_438_p2 );

    SC_METHOD(thread_tmp_17_fu_452_p3);
    sensitive << ( buffer_q0 );
    sensitive << ( tmp_8_fu_402_p2 );
    sensitive << ( tmp_12_fu_416_p4 );

    SC_METHOD(thread_tmp_18_fu_460_p3);
    sensitive << ( tmp_10_fu_408_p1 );
    sensitive << ( tmp_8_fu_402_p2 );
    sensitive << ( tmp_14_fu_432_p2 );

    SC_METHOD(thread_tmp_19_fu_478_p2);
    sensitive << ( tmp_16_reg_576 );

    SC_METHOD(thread_tmp_1_fu_254_p0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( tmp_1_fu_254_p00 );

    SC_METHOD(thread_tmp_1_fu_254_p00);
    sensitive << ( inner_index_V_2_reg_509 );

    SC_METHOD(thread_tmp_1_fu_254_p2);
    sensitive << ( tmp_1_fu_254_p0 );

    SC_METHOD(thread_tmp_20_fu_468_p1);
    sensitive << ( tmp_18_fu_460_p3 );

    SC_METHOD(thread_tmp_21_fu_483_p1);
    sensitive << ( tmp_19_fu_478_p2 );

    SC_METHOD(thread_tmp_22_fu_472_p2);
    sensitive << ( tmp_17_fu_452_p3 );
    sensitive << ( tmp_20_fu_468_p1 );

    SC_METHOD(thread_tmp_23_fu_487_p2);
    sensitive << ( tmp_21_fu_483_p1 );

    SC_METHOD(thread_tmp_24_fu_493_p2);
    sensitive << ( tmp_22_reg_581 );
    sensitive << ( tmp_23_fu_487_p2 );

    SC_METHOD(thread_tmp_2_fu_282_p1);
    sensitive << ( offset1_reg_198 );

    SC_METHOD(thread_tmp_3_fu_297_p2);
    sensitive << ( frame_count_inner );

    SC_METHOD(thread_tmp_4_fu_314_p2);
    sensitive << ( index_old );
    sensitive << ( tmp_reg_515 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond1_fu_270_p2 );
    sensitive << ( ap_sig_ioackin_base_ddr_addr_ARREADY );

    SC_METHOD(thread_tmp_5_fu_323_p2);
    sensitive << ( frame_count_equals_inner );

    SC_METHOD(thread_tmp_6_fu_370_p1);
    sensitive << ( j_reg_231 );

    SC_METHOD(thread_tmp_7_fu_353_p1);
    sensitive << ( ap_reg_ppstg_indvar_reg_219_pp0_it1 );

    SC_METHOD(thread_tmp_8_fu_402_p2);
    sensitive << ( exitcond_reg_557 );
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_10 );
    sensitive << ( ap_reg_ppiten_pp1_it1 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_557_pp1_it1 );
    sensitive << ( ap_sig_ioackin_outStream_V_TREADY );
    sensitive << ( ap_reg_ppiten_pp1_it2 );
    sensitive << ( start_pos_fu_389_p3 );
    sensitive << ( end_pos_fu_396_p2 );

    SC_METHOD(thread_tmp_fu_248_p1);
    sensitive << ( inner_index_V_2_reg_509 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_194 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( exitcond1_fu_270_p2 );
    sensitive << ( ap_sig_ioackin_base_ddr_addr_ARREADY );
    sensitive << ( exitcond2_fu_341_p2 );
    sensitive << ( exitcond_fu_358_p2 );
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( ap_reg_ppiten_pp1_it1 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_557_pp1_it1 );
    sensitive << ( ap_sig_ioackin_outStream_V_TREADY );
    sensitive << ( ap_reg_ppiten_pp1_it2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000000001";
    frame_count_inner = "00000000000000000000000000000000";
    index_old = "11111111111111111111111111111111";
    frame_count_equals_inner = "00000000000000000000000000000000";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it2 = SC_LOGIC_0;
    ap_reg_ppiten_pp1_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp1_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp1_it2 = SC_LOGIC_0;
    ap_reg_ioackin_base_ddr_addr_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_outStream_V_TREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "ddr_to_axis_reader_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, outStream_V_TDATA, "(port)outStream_V_TDATA");
    sc_trace(mVcdFile, outStream_V_TVALID, "(port)outStream_V_TVALID");
    sc_trace(mVcdFile, outStream_V_TREADY, "(port)outStream_V_TREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWVALID, "(port)m_axi_base_ddr_addr_AWVALID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWREADY, "(port)m_axi_base_ddr_addr_AWREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWADDR, "(port)m_axi_base_ddr_addr_AWADDR");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWID, "(port)m_axi_base_ddr_addr_AWID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWLEN, "(port)m_axi_base_ddr_addr_AWLEN");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWSIZE, "(port)m_axi_base_ddr_addr_AWSIZE");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWBURST, "(port)m_axi_base_ddr_addr_AWBURST");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWLOCK, "(port)m_axi_base_ddr_addr_AWLOCK");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWCACHE, "(port)m_axi_base_ddr_addr_AWCACHE");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWPROT, "(port)m_axi_base_ddr_addr_AWPROT");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWQOS, "(port)m_axi_base_ddr_addr_AWQOS");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWREGION, "(port)m_axi_base_ddr_addr_AWREGION");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWUSER, "(port)m_axi_base_ddr_addr_AWUSER");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WVALID, "(port)m_axi_base_ddr_addr_WVALID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WREADY, "(port)m_axi_base_ddr_addr_WREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WDATA, "(port)m_axi_base_ddr_addr_WDATA");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WSTRB, "(port)m_axi_base_ddr_addr_WSTRB");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WLAST, "(port)m_axi_base_ddr_addr_WLAST");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WID, "(port)m_axi_base_ddr_addr_WID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WUSER, "(port)m_axi_base_ddr_addr_WUSER");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARVALID, "(port)m_axi_base_ddr_addr_ARVALID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARREADY, "(port)m_axi_base_ddr_addr_ARREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARADDR, "(port)m_axi_base_ddr_addr_ARADDR");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARID, "(port)m_axi_base_ddr_addr_ARID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARLEN, "(port)m_axi_base_ddr_addr_ARLEN");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARSIZE, "(port)m_axi_base_ddr_addr_ARSIZE");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARBURST, "(port)m_axi_base_ddr_addr_ARBURST");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARLOCK, "(port)m_axi_base_ddr_addr_ARLOCK");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARCACHE, "(port)m_axi_base_ddr_addr_ARCACHE");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARPROT, "(port)m_axi_base_ddr_addr_ARPROT");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARQOS, "(port)m_axi_base_ddr_addr_ARQOS");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARREGION, "(port)m_axi_base_ddr_addr_ARREGION");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARUSER, "(port)m_axi_base_ddr_addr_ARUSER");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RVALID, "(port)m_axi_base_ddr_addr_RVALID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RREADY, "(port)m_axi_base_ddr_addr_RREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RDATA, "(port)m_axi_base_ddr_addr_RDATA");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RLAST, "(port)m_axi_base_ddr_addr_RLAST");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RID, "(port)m_axi_base_ddr_addr_RID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RUSER, "(port)m_axi_base_ddr_addr_RUSER");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RRESP, "(port)m_axi_base_ddr_addr_RRESP");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_BVALID, "(port)m_axi_base_ddr_addr_BVALID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_BREADY, "(port)m_axi_base_ddr_addr_BREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_BRESP, "(port)m_axi_base_ddr_addr_BRESP");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_BID, "(port)m_axi_base_ddr_addr_BID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_BUSER, "(port)m_axi_base_ddr_addr_BUSER");
    sc_trace(mVcdFile, frame_index_V, "(port)frame_index_V");
    sc_trace(mVcdFile, frame_count, "(port)frame_count");
    sc_trace(mVcdFile, frame_count_equals, "(port)frame_count_equals");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_30, "ap_sig_bdd_30");
    sc_trace(mVcdFile, frame_count_inner, "frame_count_inner");
    sc_trace(mVcdFile, index_old, "index_old");
    sc_trace(mVcdFile, frame_count_equals_inner, "frame_count_equals_inner");
    sc_trace(mVcdFile, base_ddr_addr_AWVALID, "base_ddr_addr_AWVALID");
    sc_trace(mVcdFile, base_ddr_addr_AWREADY, "base_ddr_addr_AWREADY");
    sc_trace(mVcdFile, base_ddr_addr_AWADDR, "base_ddr_addr_AWADDR");
    sc_trace(mVcdFile, base_ddr_addr_AWID, "base_ddr_addr_AWID");
    sc_trace(mVcdFile, base_ddr_addr_AWLEN, "base_ddr_addr_AWLEN");
    sc_trace(mVcdFile, base_ddr_addr_AWSIZE, "base_ddr_addr_AWSIZE");
    sc_trace(mVcdFile, base_ddr_addr_AWBURST, "base_ddr_addr_AWBURST");
    sc_trace(mVcdFile, base_ddr_addr_AWLOCK, "base_ddr_addr_AWLOCK");
    sc_trace(mVcdFile, base_ddr_addr_AWCACHE, "base_ddr_addr_AWCACHE");
    sc_trace(mVcdFile, base_ddr_addr_AWPROT, "base_ddr_addr_AWPROT");
    sc_trace(mVcdFile, base_ddr_addr_AWQOS, "base_ddr_addr_AWQOS");
    sc_trace(mVcdFile, base_ddr_addr_AWREGION, "base_ddr_addr_AWREGION");
    sc_trace(mVcdFile, base_ddr_addr_AWUSER, "base_ddr_addr_AWUSER");
    sc_trace(mVcdFile, base_ddr_addr_WVALID, "base_ddr_addr_WVALID");
    sc_trace(mVcdFile, base_ddr_addr_WREADY, "base_ddr_addr_WREADY");
    sc_trace(mVcdFile, base_ddr_addr_WDATA, "base_ddr_addr_WDATA");
    sc_trace(mVcdFile, base_ddr_addr_WSTRB, "base_ddr_addr_WSTRB");
    sc_trace(mVcdFile, base_ddr_addr_WLAST, "base_ddr_addr_WLAST");
    sc_trace(mVcdFile, base_ddr_addr_WID, "base_ddr_addr_WID");
    sc_trace(mVcdFile, base_ddr_addr_WUSER, "base_ddr_addr_WUSER");
    sc_trace(mVcdFile, base_ddr_addr_ARVALID, "base_ddr_addr_ARVALID");
    sc_trace(mVcdFile, base_ddr_addr_ARREADY, "base_ddr_addr_ARREADY");
    sc_trace(mVcdFile, base_ddr_addr_ARADDR, "base_ddr_addr_ARADDR");
    sc_trace(mVcdFile, base_ddr_addr_ARID, "base_ddr_addr_ARID");
    sc_trace(mVcdFile, base_ddr_addr_ARLEN, "base_ddr_addr_ARLEN");
    sc_trace(mVcdFile, base_ddr_addr_ARSIZE, "base_ddr_addr_ARSIZE");
    sc_trace(mVcdFile, base_ddr_addr_ARBURST, "base_ddr_addr_ARBURST");
    sc_trace(mVcdFile, base_ddr_addr_ARLOCK, "base_ddr_addr_ARLOCK");
    sc_trace(mVcdFile, base_ddr_addr_ARCACHE, "base_ddr_addr_ARCACHE");
    sc_trace(mVcdFile, base_ddr_addr_ARPROT, "base_ddr_addr_ARPROT");
    sc_trace(mVcdFile, base_ddr_addr_ARQOS, "base_ddr_addr_ARQOS");
    sc_trace(mVcdFile, base_ddr_addr_ARREGION, "base_ddr_addr_ARREGION");
    sc_trace(mVcdFile, base_ddr_addr_ARUSER, "base_ddr_addr_ARUSER");
    sc_trace(mVcdFile, base_ddr_addr_RVALID, "base_ddr_addr_RVALID");
    sc_trace(mVcdFile, base_ddr_addr_RREADY, "base_ddr_addr_RREADY");
    sc_trace(mVcdFile, base_ddr_addr_RDATA, "base_ddr_addr_RDATA");
    sc_trace(mVcdFile, base_ddr_addr_RLAST, "base_ddr_addr_RLAST");
    sc_trace(mVcdFile, base_ddr_addr_RID, "base_ddr_addr_RID");
    sc_trace(mVcdFile, base_ddr_addr_RUSER, "base_ddr_addr_RUSER");
    sc_trace(mVcdFile, base_ddr_addr_RRESP, "base_ddr_addr_RRESP");
    sc_trace(mVcdFile, base_ddr_addr_BVALID, "base_ddr_addr_BVALID");
    sc_trace(mVcdFile, base_ddr_addr_BREADY, "base_ddr_addr_BREADY");
    sc_trace(mVcdFile, base_ddr_addr_BRESP, "base_ddr_addr_BRESP");
    sc_trace(mVcdFile, base_ddr_addr_BID, "base_ddr_addr_BID");
    sc_trace(mVcdFile, base_ddr_addr_BUSER, "base_ddr_addr_BUSER");
    sc_trace(mVcdFile, ddr_to_axis_reader_base_ddr_addr_m_axi_U_ap_dummy_ce, "ddr_to_axis_reader_base_ddr_addr_m_axi_U_ap_dummy_ce");
    sc_trace(mVcdFile, indvar_reg_219, "indvar_reg_219");
    sc_trace(mVcdFile, ap_reg_ppstg_indvar_reg_219_pp0_it1, "ap_reg_ppstg_indvar_reg_219_pp0_it1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_9, "ap_sig_cseq_ST_pp0_stg0_fsm_9");
    sc_trace(mVcdFile, ap_sig_bdd_185, "ap_sig_bdd_185");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, exitcond2_reg_543, "exitcond2_reg_543");
    sc_trace(mVcdFile, ap_sig_bdd_194, "ap_sig_bdd_194");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it2, "ap_reg_ppiten_pp0_it2");
    sc_trace(mVcdFile, j_reg_231, "j_reg_231");
    sc_trace(mVcdFile, inner_index_V_2_fu_242_p2, "inner_index_V_2_fu_242_p2");
    sc_trace(mVcdFile, inner_index_V_2_reg_509, "inner_index_V_2_reg_509");
    sc_trace(mVcdFile, tmp_fu_248_p1, "tmp_fu_248_p1");
    sc_trace(mVcdFile, tmp_reg_515, "tmp_reg_515");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_216, "ap_sig_bdd_216");
    sc_trace(mVcdFile, i_1_fu_276_p2, "i_1_fu_276_p2");
    sc_trace(mVcdFile, i_1_reg_529, "i_1_reg_529");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_227, "ap_sig_bdd_227");
    sc_trace(mVcdFile, exitcond1_fu_270_p2, "exitcond1_fu_270_p2");
    sc_trace(mVcdFile, ap_sig_ioackin_base_ddr_addr_ARREADY, "ap_sig_ioackin_base_ddr_addr_ARREADY");
    sc_trace(mVcdFile, exitcond2_fu_341_p2, "exitcond2_fu_341_p2");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond2_reg_543_pp0_it1, "ap_reg_ppstg_exitcond2_reg_543_pp0_it1");
    sc_trace(mVcdFile, indvar_next_fu_347_p2, "indvar_next_fu_347_p2");
    sc_trace(mVcdFile, indvar_next_reg_547, "indvar_next_reg_547");
    sc_trace(mVcdFile, base_ddr_addr_addr_read_reg_552, "base_ddr_addr_addr_read_reg_552");
    sc_trace(mVcdFile, exitcond_fu_358_p2, "exitcond_fu_358_p2");
    sc_trace(mVcdFile, exitcond_reg_557, "exitcond_reg_557");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp1_stg0_fsm_10, "ap_sig_cseq_ST_pp1_stg0_fsm_10");
    sc_trace(mVcdFile, ap_sig_bdd_256, "ap_sig_bdd_256");
    sc_trace(mVcdFile, ap_reg_ppiten_pp1_it0, "ap_reg_ppiten_pp1_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp1_it1, "ap_reg_ppiten_pp1_it1");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_557_pp1_it1, "ap_reg_ppstg_exitcond_reg_557_pp1_it1");
    sc_trace(mVcdFile, ap_sig_ioackin_outStream_V_TREADY, "ap_sig_ioackin_outStream_V_TREADY");
    sc_trace(mVcdFile, ap_reg_ppiten_pp1_it2, "ap_reg_ppiten_pp1_it2");
    sc_trace(mVcdFile, j_1_fu_364_p2, "j_1_fu_364_p2");
    sc_trace(mVcdFile, tmp_6_fu_370_p1, "tmp_6_fu_370_p1");
    sc_trace(mVcdFile, tmp_6_reg_566, "tmp_6_reg_566");
    sc_trace(mVcdFile, tmp_16_fu_444_p3, "tmp_16_fu_444_p3");
    sc_trace(mVcdFile, tmp_16_reg_576, "tmp_16_reg_576");
    sc_trace(mVcdFile, tmp_22_fu_472_p2, "tmp_22_fu_472_p2");
    sc_trace(mVcdFile, tmp_22_reg_581, "tmp_22_reg_581");
    sc_trace(mVcdFile, offset_fu_503_p2, "offset_fu_503_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st16_fsm_11, "ap_sig_cseq_ST_st16_fsm_11");
    sc_trace(mVcdFile, ap_sig_bdd_296, "ap_sig_bdd_296");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st9_fsm_8, "ap_sig_cseq_ST_st9_fsm_8");
    sc_trace(mVcdFile, ap_sig_bdd_303, "ap_sig_bdd_303");
    sc_trace(mVcdFile, buffer_address0, "buffer_address0");
    sc_trace(mVcdFile, buffer_ce0, "buffer_ce0");
    sc_trace(mVcdFile, buffer_q0, "buffer_q0");
    sc_trace(mVcdFile, buffer_address1, "buffer_address1");
    sc_trace(mVcdFile, buffer_ce1, "buffer_ce1");
    sc_trace(mVcdFile, buffer_we1, "buffer_we1");
    sc_trace(mVcdFile, buffer_d1, "buffer_d1");
    sc_trace(mVcdFile, offset1_reg_198, "offset1_reg_198");
    sc_trace(mVcdFile, i_reg_208, "i_reg_208");
    sc_trace(mVcdFile, indvar_phi_fu_223_p4, "indvar_phi_fu_223_p4");
    sc_trace(mVcdFile, tmp_7_fu_353_p1, "tmp_7_fu_353_p1");
    sc_trace(mVcdFile, gepindex2_cast_fu_384_p1, "gepindex2_cast_fu_384_p1");
    sc_trace(mVcdFile, tmp_2_fu_282_p1, "tmp_2_fu_282_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_base_ddr_addr_ARREADY, "ap_reg_ioackin_base_ddr_addr_ARREADY");
    sc_trace(mVcdFile, tmp_3_fu_297_p2, "tmp_3_fu_297_p2");
    sc_trace(mVcdFile, tmp_5_fu_323_p2, "tmp_5_fu_323_p2");
    sc_trace(mVcdFile, tmp_4_fu_314_p2, "tmp_4_fu_314_p2");
    sc_trace(mVcdFile, ap_reg_ioackin_outStream_V_TREADY, "ap_reg_ioackin_outStream_V_TREADY");
    sc_trace(mVcdFile, tmp_1_fu_254_p0, "tmp_1_fu_254_p0");
    sc_trace(mVcdFile, tmp_1_fu_254_p2, "tmp_1_fu_254_p2");
    sc_trace(mVcdFile, gepindex_cast_fu_374_p4, "gepindex_cast_fu_374_p4");
    sc_trace(mVcdFile, start_pos_fu_389_p3, "start_pos_fu_389_p3");
    sc_trace(mVcdFile, end_pos_fu_396_p2, "end_pos_fu_396_p2");
    sc_trace(mVcdFile, tmp_10_fu_408_p1, "tmp_10_fu_408_p1");
    sc_trace(mVcdFile, tmp_11_fu_412_p1, "tmp_11_fu_412_p1");
    sc_trace(mVcdFile, tmp_8_fu_402_p2, "tmp_8_fu_402_p2");
    sc_trace(mVcdFile, tmp_13_fu_426_p2, "tmp_13_fu_426_p2");
    sc_trace(mVcdFile, tmp_15_fu_438_p2, "tmp_15_fu_438_p2");
    sc_trace(mVcdFile, tmp_12_fu_416_p4, "tmp_12_fu_416_p4");
    sc_trace(mVcdFile, tmp_14_fu_432_p2, "tmp_14_fu_432_p2");
    sc_trace(mVcdFile, tmp_18_fu_460_p3, "tmp_18_fu_460_p3");
    sc_trace(mVcdFile, tmp_17_fu_452_p3, "tmp_17_fu_452_p3");
    sc_trace(mVcdFile, tmp_20_fu_468_p1, "tmp_20_fu_468_p1");
    sc_trace(mVcdFile, tmp_19_fu_478_p2, "tmp_19_fu_478_p2");
    sc_trace(mVcdFile, tmp_21_fu_483_p1, "tmp_21_fu_483_p1");
    sc_trace(mVcdFile, tmp_23_fu_487_p2, "tmp_23_fu_487_p2");
    sc_trace(mVcdFile, tmp_24_fu_493_p2, "tmp_24_fu_493_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, tmp_1_fu_254_p00, "tmp_1_fu_254_p00");
    sc_trace(mVcdFile, ap_sig_bdd_348, "ap_sig_bdd_348");
    sc_trace(mVcdFile, ap_sig_bdd_378, "ap_sig_bdd_378");
#endif

    }
    mHdltvinHandle.open("ddr_to_axis_reader.hdltvin.dat");
    mHdltvoutHandle.open("ddr_to_axis_reader.hdltvout.dat");
}

ddr_to_axis_reader::~ddr_to_axis_reader() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete ddr_to_axis_reader_base_ddr_addr_m_axi_U;
    delete buffer_U;
}

void ddr_to_axis_reader::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_base_ddr_addr_ARREADY = ap_const_logic_0;
    } else {
        if (ap_sig_bdd_348.read()) {
            if (!(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_270_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read()))) {
                ap_reg_ioackin_base_ddr_addr_ARREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, base_ddr_addr_ARREADY.read())) {
                ap_reg_ioackin_base_ddr_addr_ARREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_outStream_V_TREADY = ap_const_logic_0;
    } else {
        if (ap_sig_bdd_378.read()) {
            if (!(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_557_pp1_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()))) {
                ap_reg_ioackin_outStream_V_TREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_TREADY.read())) {
                ap_reg_ioackin_outStream_V_TREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_9.read()) && 
             !(ap_sig_bdd_194.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_341_p2.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_9.read()) && 
             !(ap_sig_bdd_194.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_341_p2.read()))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_9.read()) && 
                     !(ap_sig_bdd_194.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_341_p2.read())))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
    } else {
        if (!(ap_sig_bdd_194.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
            ap_reg_ppiten_pp0_it2 = ap_reg_ppiten_pp0_it1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
            ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp1_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
             !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_557_pp1_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_358_p2.read()))) {
            ap_reg_ppiten_pp1_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_9.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                    !(ap_sig_bdd_194.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_341_p2.read()))) {
            ap_reg_ppiten_pp1_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp1_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
             !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_557_pp1_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_358_p2.read()))) {
            ap_reg_ppiten_pp1_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_9.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                     !(ap_sig_bdd_194.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_341_p2.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_557_pp1_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_358_p2.read())))) {
            ap_reg_ppiten_pp1_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp1_it2 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_557_pp1_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()))) {
            ap_reg_ppiten_pp1_it2 = ap_reg_ppiten_pp1_it1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_9.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                    !(ap_sig_bdd_194.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_341_p2.read()))) {
            ap_reg_ppiten_pp1_it2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        frame_count_equals_inner = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
             !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_270_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read())) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_270_p2.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_314_p2.read()))) {
            frame_count_equals_inner = tmp_5_fu_323_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        frame_count_inner = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
             !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_270_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read())) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_270_p2.read()))) {
            frame_count_inner = tmp_3_fu_297_p2.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_11.read())) {
        i_reg_208 = i_1_reg_529.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        i_reg_208 = ap_const_lv7_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        index_old = ap_const_lv32_FFFFFFFF;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
             !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_270_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read())) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_270_p2.read()))) {
            index_old = tmp_reg_515.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        indvar_reg_219 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_9.read()) && 
                esl_seteq<1,1,1>(exitcond2_reg_543.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
                !(ap_sig_bdd_194.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        indvar_reg_219 = indvar_next_reg_547.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(ap_sig_bdd_194.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_341_p2.read()))) {
        j_reg_231 = ap_const_lv13_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_557_pp1_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_358_p2.read()))) {
        j_reg_231 = j_1_fu_364_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_11.read())) {
        offset1_reg_198 = offset_fu_503_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        offset1_reg_198 = tmp_1_fu_254_p2.read().range(21, 3);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_9.read()) && !(ap_sig_bdd_194.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        ap_reg_ppstg_exitcond2_reg_543_pp0_it1 = exitcond2_reg_543.read();
        ap_reg_ppstg_indvar_reg_219_pp0_it1 = indvar_reg_219.read();
        exitcond2_reg_543 = exitcond2_fu_341_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_557_pp1_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())))) {
        ap_reg_ppstg_exitcond_reg_557_pp1_it1 = exitcond_reg_557.read();
        exitcond_reg_557 = exitcond_fu_358_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_9.read()) && esl_seteq<1,1,1>(exitcond2_reg_543.read(), ap_const_lv1_0) && !(ap_sig_bdd_194.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        base_ddr_addr_addr_read_reg_552 = base_ddr_addr_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_270_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read())))) {
        i_1_reg_529 = i_1_fu_276_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_9.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(ap_sig_bdd_194.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        indvar_next_reg_547 = indvar_next_fu_347_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        inner_index_V_2_reg_509 = inner_index_V_2_fu_242_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_557_pp1_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_557.read()))) {
        tmp_16_reg_576 = tmp_16_fu_444_p3.read();
        tmp_22_reg_581 = tmp_22_fu_472_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_557_pp1_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_358_p2.read()))) {
        tmp_6_reg_566 = tmp_6_fu_370_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        tmp_reg_515 = tmp_fu_248_p1.read();
    }
}

void ddr_to_axis_reader::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_270_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read())) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_270_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_270_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read())) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_270_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void ddr_to_axis_reader::thread_ap_sig_bdd_185() {
    ap_sig_bdd_185 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void ddr_to_axis_reader::thread_ap_sig_bdd_194() {
    ap_sig_bdd_194 = (esl_seteq<1,1,1>(base_ddr_addr_RVALID.read(), ap_const_logic_0) && esl_seteq<1,1,1>(exitcond2_reg_543.read(), ap_const_lv1_0));
}

void ddr_to_axis_reader::thread_ap_sig_bdd_216() {
    ap_sig_bdd_216 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void ddr_to_axis_reader::thread_ap_sig_bdd_227() {
    ap_sig_bdd_227 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void ddr_to_axis_reader::thread_ap_sig_bdd_256() {
    ap_sig_bdd_256 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void ddr_to_axis_reader::thread_ap_sig_bdd_296() {
    ap_sig_bdd_296 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void ddr_to_axis_reader::thread_ap_sig_bdd_30() {
    ap_sig_bdd_30 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void ddr_to_axis_reader::thread_ap_sig_bdd_303() {
    ap_sig_bdd_303 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void ddr_to_axis_reader::thread_ap_sig_bdd_348() {
    ap_sig_bdd_348 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_270_p2.read()));
}

void ddr_to_axis_reader::thread_ap_sig_bdd_378() {
    ap_sig_bdd_378 = (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_557_pp1_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()));
}

void ddr_to_axis_reader::thread_ap_sig_cseq_ST_pp0_stg0_fsm_9() {
    if (ap_sig_bdd_185.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_9 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ap_sig_cseq_ST_pp1_stg0_fsm_10() {
    if (ap_sig_bdd_256.read()) {
        ap_sig_cseq_ST_pp1_stg0_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp1_stg0_fsm_10 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ap_sig_cseq_ST_st16_fsm_11() {
    if (ap_sig_bdd_296.read()) {
        ap_sig_cseq_ST_st16_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st16_fsm_11 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_30.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_216.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_227.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ap_sig_cseq_ST_st9_fsm_8() {
    if (ap_sig_bdd_303.read()) {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ap_sig_ioackin_base_ddr_addr_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_base_ddr_addr_ARREADY.read())) {
        ap_sig_ioackin_base_ddr_addr_ARREADY = base_ddr_addr_ARREADY.read();
    } else {
        ap_sig_ioackin_base_ddr_addr_ARREADY = ap_const_logic_1;
    }
}

void ddr_to_axis_reader::thread_ap_sig_ioackin_outStream_V_TREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_outStream_V_TREADY.read())) {
        ap_sig_ioackin_outStream_V_TREADY = outStream_V_TREADY.read();
    } else {
        ap_sig_ioackin_outStream_V_TREADY = ap_const_logic_1;
    }
}

void ddr_to_axis_reader::thread_base_ddr_addr_ARADDR() {
    base_ddr_addr_ARADDR =  (sc_lv<32>) (tmp_2_fu_282_p1.read());
}

void ddr_to_axis_reader::thread_base_ddr_addr_ARBURST() {
    base_ddr_addr_ARBURST = ap_const_lv2_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_ARCACHE() {
    base_ddr_addr_ARCACHE = ap_const_lv4_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_ARID() {
    base_ddr_addr_ARID = ap_const_lv1_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_ARLEN() {
    base_ddr_addr_ARLEN = ap_const_lv32_200;
}

void ddr_to_axis_reader::thread_base_ddr_addr_ARLOCK() {
    base_ddr_addr_ARLOCK = ap_const_lv2_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_ARPROT() {
    base_ddr_addr_ARPROT = ap_const_lv3_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_ARQOS() {
    base_ddr_addr_ARQOS = ap_const_lv4_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_ARREGION() {
    base_ddr_addr_ARREGION = ap_const_lv4_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_ARSIZE() {
    base_ddr_addr_ARSIZE = ap_const_lv3_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_ARUSER() {
    base_ddr_addr_ARUSER = ap_const_lv1_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_270_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_base_ddr_addr_ARREADY.read()))) {
        base_ddr_addr_ARVALID = ap_const_logic_1;
    } else {
        base_ddr_addr_ARVALID = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_base_ddr_addr_AWADDR() {
    base_ddr_addr_AWADDR = ap_const_lv32_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_AWBURST() {
    base_ddr_addr_AWBURST = ap_const_lv2_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_AWCACHE() {
    base_ddr_addr_AWCACHE = ap_const_lv4_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_AWID() {
    base_ddr_addr_AWID = ap_const_lv1_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_AWLEN() {
    base_ddr_addr_AWLEN = ap_const_lv32_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_AWLOCK() {
    base_ddr_addr_AWLOCK = ap_const_lv2_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_AWPROT() {
    base_ddr_addr_AWPROT = ap_const_lv3_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_AWQOS() {
    base_ddr_addr_AWQOS = ap_const_lv4_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_AWREGION() {
    base_ddr_addr_AWREGION = ap_const_lv4_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_AWSIZE() {
    base_ddr_addr_AWSIZE = ap_const_lv3_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_AWUSER() {
    base_ddr_addr_AWUSER = ap_const_lv1_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_AWVALID() {
    base_ddr_addr_AWVALID = ap_const_logic_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_BREADY() {
    base_ddr_addr_BREADY = ap_const_logic_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_9.read()) && 
         esl_seteq<1,1,1>(exitcond2_reg_543.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !(ap_sig_bdd_194.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        base_ddr_addr_RREADY = ap_const_logic_1;
    } else {
        base_ddr_addr_RREADY = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_base_ddr_addr_WDATA() {
    base_ddr_addr_WDATA = ap_const_lv64_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_WID() {
    base_ddr_addr_WID = ap_const_lv1_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_WLAST() {
    base_ddr_addr_WLAST = ap_const_logic_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_WSTRB() {
    base_ddr_addr_WSTRB = ap_const_lv8_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_WUSER() {
    base_ddr_addr_WUSER = ap_const_lv1_0;
}

void ddr_to_axis_reader::thread_base_ddr_addr_WVALID() {
    base_ddr_addr_WVALID = ap_const_logic_0;
}

void ddr_to_axis_reader::thread_buffer_address0() {
    buffer_address0 =  (sc_lv<9>) (gepindex2_cast_fu_384_p1.read());
}

void ddr_to_axis_reader::thread_buffer_address1() {
    buffer_address1 =  (sc_lv<9>) (tmp_7_fu_353_p1.read());
}

void ddr_to_axis_reader::thread_buffer_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_557_pp1_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())))) {
        buffer_ce0 = ap_const_logic_1;
    } else {
        buffer_ce0 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_buffer_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
         !(ap_sig_bdd_194.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        buffer_ce1 = ap_const_logic_1;
    } else {
        buffer_ce1 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_buffer_d1() {
    buffer_d1 = base_ddr_addr_addr_read_reg_552.read();
}

void ddr_to_axis_reader::thread_buffer_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
          !(ap_sig_bdd_194.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond2_reg_543_pp0_it1.read())))) {
        buffer_we1 = ap_const_logic_1;
    } else {
        buffer_we1 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ddr_to_axis_reader_base_ddr_addr_m_axi_U_ap_dummy_ce() {
    ddr_to_axis_reader_base_ddr_addr_m_axi_U_ap_dummy_ce = ap_const_logic_1;
}

void ddr_to_axis_reader::thread_end_pos_fu_396_p2() {
    end_pos_fu_396_p2 = (start_pos_fu_389_p3.read() | ap_const_lv6_7);
}

void ddr_to_axis_reader::thread_exitcond1_fu_270_p2() {
    exitcond1_fu_270_p2 = (!i_reg_208.read().is_01() || !ap_const_lv7_4B.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_208.read() == ap_const_lv7_4B);
}

void ddr_to_axis_reader::thread_exitcond2_fu_341_p2() {
    exitcond2_fu_341_p2 = (!indvar_phi_fu_223_p4.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(indvar_phi_fu_223_p4.read() == ap_const_lv10_200);
}

void ddr_to_axis_reader::thread_exitcond_fu_358_p2() {
    exitcond_fu_358_p2 = (!j_reg_231.read().is_01() || !ap_const_lv13_1000.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_231.read() == ap_const_lv13_1000);
}

void ddr_to_axis_reader::thread_frame_count() {
    frame_count = (!frame_count_inner.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(frame_count_inner.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void ddr_to_axis_reader::thread_frame_count_equals() {
    frame_count_equals = (!frame_count_equals_inner.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(frame_count_equals_inner.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void ddr_to_axis_reader::thread_gepindex2_cast_fu_384_p1() {
    gepindex2_cast_fu_384_p1 = esl_zext<64,9>(gepindex_cast_fu_374_p4.read());
}

void ddr_to_axis_reader::thread_gepindex_cast_fu_374_p4() {
    gepindex_cast_fu_374_p4 = j_reg_231.read().range(11, 3);
}

void ddr_to_axis_reader::thread_i_1_fu_276_p2() {
    i_1_fu_276_p2 = (!i_reg_208.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_reg_208.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void ddr_to_axis_reader::thread_indvar_next_fu_347_p2() {
    indvar_next_fu_347_p2 = (!indvar_phi_fu_223_p4.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(indvar_phi_fu_223_p4.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void ddr_to_axis_reader::thread_indvar_phi_fu_223_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_9.read()) && 
         esl_seteq<1,1,1>(exitcond2_reg_543.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
        indvar_phi_fu_223_p4 = indvar_next_reg_547.read();
    } else {
        indvar_phi_fu_223_p4 = indvar_reg_219.read();
    }
}

void ddr_to_axis_reader::thread_inner_index_V_2_fu_242_p2() {
    inner_index_V_2_fu_242_p2 = (!frame_index_V.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<3>(): (sc_biguint<3>(frame_index_V.read()) + sc_bigint<3>(ap_const_lv3_7));
}

void ddr_to_axis_reader::thread_j_1_fu_364_p2() {
    j_1_fu_364_p2 = (!j_reg_231.read().is_01() || !ap_const_lv13_1.is_01())? sc_lv<13>(): (sc_biguint<13>(j_reg_231.read()) + sc_biguint<13>(ap_const_lv13_1));
}

void ddr_to_axis_reader::thread_offset_fu_503_p2() {
    offset_fu_503_p2 = (!offset1_reg_198.read().is_01() || !ap_const_lv19_200.is_01())? sc_lv<19>(): (sc_biguint<19>(offset1_reg_198.read()) + sc_biguint<19>(ap_const_lv19_200));
}

void ddr_to_axis_reader::thread_outStream_V_TDATA() {
    outStream_V_TDATA = tmp_24_fu_493_p2.read().range(8-1, 0);
}

void ddr_to_axis_reader::thread_outStream_V_TVALID() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_557_pp1_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_outStream_V_TREADY.read()))) {
        outStream_V_TVALID = ap_const_logic_1;
    } else {
        outStream_V_TVALID = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_start_pos_fu_389_p3() {
    start_pos_fu_389_p3 = esl_concat<3,3>(tmp_6_reg_566.read(), ap_const_lv3_0);
}

void ddr_to_axis_reader::thread_tmp_10_fu_408_p1() {
    tmp_10_fu_408_p1 = esl_zext<7,6>(start_pos_fu_389_p3.read());
}

void ddr_to_axis_reader::thread_tmp_11_fu_412_p1() {
    tmp_11_fu_412_p1 = esl_zext<7,6>(end_pos_fu_396_p2.read());
}

void ddr_to_axis_reader::thread_tmp_12_fu_416_p4() {
    tmp_12_fu_416_p4 = buffer_q0.read().range(0, 63);
}

void ddr_to_axis_reader::thread_tmp_13_fu_426_p2() {
    tmp_13_fu_426_p2 = (!tmp_10_fu_408_p1.read().is_01() || !tmp_11_fu_412_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_10_fu_408_p1.read()) - sc_biguint<7>(tmp_11_fu_412_p1.read()));
}

void ddr_to_axis_reader::thread_tmp_14_fu_432_p2() {
    tmp_14_fu_432_p2 = (tmp_10_fu_408_p1.read() ^ ap_const_lv7_3F);
}

void ddr_to_axis_reader::thread_tmp_15_fu_438_p2() {
    tmp_15_fu_438_p2 = (!tmp_11_fu_412_p1.read().is_01() || !tmp_10_fu_408_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_11_fu_412_p1.read()) - sc_biguint<7>(tmp_10_fu_408_p1.read()));
}

void ddr_to_axis_reader::thread_tmp_16_fu_444_p3() {
    tmp_16_fu_444_p3 = (!tmp_8_fu_402_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_8_fu_402_p2.read()[0].to_bool())? tmp_13_fu_426_p2.read(): tmp_15_fu_438_p2.read());
}

void ddr_to_axis_reader::thread_tmp_17_fu_452_p3() {
    tmp_17_fu_452_p3 = (!tmp_8_fu_402_p2.read()[0].is_01())? sc_lv<64>(): ((tmp_8_fu_402_p2.read()[0].to_bool())? tmp_12_fu_416_p4.read(): buffer_q0.read());
}

void ddr_to_axis_reader::thread_tmp_18_fu_460_p3() {
    tmp_18_fu_460_p3 = (!tmp_8_fu_402_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_8_fu_402_p2.read()[0].to_bool())? tmp_14_fu_432_p2.read(): tmp_10_fu_408_p1.read());
}

void ddr_to_axis_reader::thread_tmp_19_fu_478_p2() {
    tmp_19_fu_478_p2 = (!ap_const_lv7_3F.is_01() || !tmp_16_reg_576.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_3F) - sc_biguint<7>(tmp_16_reg_576.read()));
}

void ddr_to_axis_reader::thread_tmp_1_fu_254_p0() {
    tmp_1_fu_254_p0 =  (sc_lv<3>) (tmp_1_fu_254_p00.read());
}

void ddr_to_axis_reader::thread_tmp_1_fu_254_p00() {
    tmp_1_fu_254_p00 = esl_zext<22,3>(inner_index_V_2_reg_509.read());
}

void ddr_to_axis_reader::thread_tmp_1_fu_254_p2() {
    tmp_1_fu_254_p2 = (!tmp_1_fu_254_p0.read().is_01() || !ap_const_lv22_4B000.is_01())? sc_lv<22>(): sc_biguint<3>(tmp_1_fu_254_p0.read()) * sc_biguint<22>(ap_const_lv22_4B000);
}

void ddr_to_axis_reader::thread_tmp_20_fu_468_p1() {
    tmp_20_fu_468_p1 = esl_zext<64,7>(tmp_18_fu_460_p3.read());
}

void ddr_to_axis_reader::thread_tmp_21_fu_483_p1() {
    tmp_21_fu_483_p1 = esl_zext<64,7>(tmp_19_fu_478_p2.read());
}

void ddr_to_axis_reader::thread_tmp_22_fu_472_p2() {
    tmp_22_fu_472_p2 = (!tmp_20_fu_468_p1.read().is_01())? sc_lv<64>(): tmp_17_fu_452_p3.read() >> (unsigned short)tmp_20_fu_468_p1.read().to_uint();
}

void ddr_to_axis_reader::thread_tmp_23_fu_487_p2() {
    tmp_23_fu_487_p2 = (!tmp_21_fu_483_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_FFFFFFFFFFFFFFFF >> (unsigned short)tmp_21_fu_483_p1.read().to_uint();
}

void ddr_to_axis_reader::thread_tmp_24_fu_493_p2() {
    tmp_24_fu_493_p2 = (tmp_22_reg_581.read() & tmp_23_fu_487_p2.read());
}

void ddr_to_axis_reader::thread_tmp_2_fu_282_p1() {
    tmp_2_fu_282_p1 = esl_zext<64,19>(offset1_reg_198.read());
}

void ddr_to_axis_reader::thread_tmp_3_fu_297_p2() {
    tmp_3_fu_297_p2 = (!frame_count_inner.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(frame_count_inner.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void ddr_to_axis_reader::thread_tmp_4_fu_314_p2() {
    tmp_4_fu_314_p2 = (!tmp_reg_515.read().is_01() || !index_old.read().is_01())? sc_lv<1>(): sc_lv<1>(tmp_reg_515.read() == index_old.read());
}

void ddr_to_axis_reader::thread_tmp_5_fu_323_p2() {
    tmp_5_fu_323_p2 = (!frame_count_equals_inner.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(frame_count_equals_inner.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void ddr_to_axis_reader::thread_tmp_6_fu_370_p1() {
    tmp_6_fu_370_p1 = j_reg_231.read().range(3-1, 0);
}

void ddr_to_axis_reader::thread_tmp_7_fu_353_p1() {
    tmp_7_fu_353_p1 = esl_zext<64,10>(ap_reg_ppstg_indvar_reg_219_pp0_it1.read());
}

void ddr_to_axis_reader::thread_tmp_8_fu_402_p2() {
    tmp_8_fu_402_p2 = (!start_pos_fu_389_p3.read().is_01() || !end_pos_fu_396_p2.read().is_01())? sc_lv<1>(): (sc_biguint<6>(start_pos_fu_389_p3.read()) > sc_biguint<6>(end_pos_fu_396_p2.read()));
}

void ddr_to_axis_reader::thread_tmp_fu_248_p1() {
    tmp_fu_248_p1 = esl_zext<32,3>(inner_index_V_2_reg_509.read());
}

void ddr_to_axis_reader::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_270_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read())) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_270_p2.read()))) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_270_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_270_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read())))) {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_9;
            break;
        case 512 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && !(ap_sig_bdd_194.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(ap_sig_bdd_194.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_341_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_9;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
  !(ap_sig_bdd_194.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  !(ap_sig_bdd_194.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_341_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_10;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_9;
            }
            break;
        case 1024 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_557_pp1_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_557_pp1_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_358_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read())))) {
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_10;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && 
  !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_557_pp1_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && 
  !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_557_pp1_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_358_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read())))) {
                ap_NS_fsm = ap_ST_st16_fsm_11;
            } else {
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_10;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXX";
            break;
    }
}

void ddr_to_axis_reader::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_TDATA\" :  \"" << outStream_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_TVALID\" :  \"" << outStream_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_V_TREADY\" :  \"" << outStream_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWVALID\" :  \"" << m_axi_base_ddr_addr_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_AWREADY\" :  \"" << m_axi_base_ddr_addr_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWADDR\" :  \"" << m_axi_base_ddr_addr_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWID\" :  \"" << m_axi_base_ddr_addr_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWLEN\" :  \"" << m_axi_base_ddr_addr_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWSIZE\" :  \"" << m_axi_base_ddr_addr_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWBURST\" :  \"" << m_axi_base_ddr_addr_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWLOCK\" :  \"" << m_axi_base_ddr_addr_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWCACHE\" :  \"" << m_axi_base_ddr_addr_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWPROT\" :  \"" << m_axi_base_ddr_addr_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWQOS\" :  \"" << m_axi_base_ddr_addr_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWREGION\" :  \"" << m_axi_base_ddr_addr_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWUSER\" :  \"" << m_axi_base_ddr_addr_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WVALID\" :  \"" << m_axi_base_ddr_addr_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_WREADY\" :  \"" << m_axi_base_ddr_addr_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WDATA\" :  \"" << m_axi_base_ddr_addr_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WSTRB\" :  \"" << m_axi_base_ddr_addr_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WLAST\" :  \"" << m_axi_base_ddr_addr_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WID\" :  \"" << m_axi_base_ddr_addr_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WUSER\" :  \"" << m_axi_base_ddr_addr_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARVALID\" :  \"" << m_axi_base_ddr_addr_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_ARREADY\" :  \"" << m_axi_base_ddr_addr_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARADDR\" :  \"" << m_axi_base_ddr_addr_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARID\" :  \"" << m_axi_base_ddr_addr_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARLEN\" :  \"" << m_axi_base_ddr_addr_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARSIZE\" :  \"" << m_axi_base_ddr_addr_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARBURST\" :  \"" << m_axi_base_ddr_addr_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARLOCK\" :  \"" << m_axi_base_ddr_addr_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARCACHE\" :  \"" << m_axi_base_ddr_addr_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARPROT\" :  \"" << m_axi_base_ddr_addr_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARQOS\" :  \"" << m_axi_base_ddr_addr_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARREGION\" :  \"" << m_axi_base_ddr_addr_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARUSER\" :  \"" << m_axi_base_ddr_addr_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RVALID\" :  \"" << m_axi_base_ddr_addr_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_RREADY\" :  \"" << m_axi_base_ddr_addr_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RDATA\" :  \"" << m_axi_base_ddr_addr_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RLAST\" :  \"" << m_axi_base_ddr_addr_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RID\" :  \"" << m_axi_base_ddr_addr_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RUSER\" :  \"" << m_axi_base_ddr_addr_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RRESP\" :  \"" << m_axi_base_ddr_addr_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_BVALID\" :  \"" << m_axi_base_ddr_addr_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_BREADY\" :  \"" << m_axi_base_ddr_addr_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_BRESP\" :  \"" << m_axi_base_ddr_addr_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_BID\" :  \"" << m_axi_base_ddr_addr_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_BUSER\" :  \"" << m_axi_base_ddr_addr_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"frame_index_V\" :  \"" << frame_index_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"frame_count\" :  \"" << frame_count.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"frame_count_equals\" :  \"" << frame_count_equals.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

