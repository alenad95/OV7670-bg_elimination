// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "ddr_to_axis_reader.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic ddr_to_axis_reader::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic ddr_to_axis_reader::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<15> ddr_to_axis_reader::ap_ST_st1_fsm_0 = "1";
const sc_lv<15> ddr_to_axis_reader::ap_ST_st2_fsm_1 = "10";
const sc_lv<15> ddr_to_axis_reader::ap_ST_st3_fsm_2 = "100";
const sc_lv<15> ddr_to_axis_reader::ap_ST_st4_fsm_3 = "1000";
const sc_lv<15> ddr_to_axis_reader::ap_ST_st5_fsm_4 = "10000";
const sc_lv<15> ddr_to_axis_reader::ap_ST_st6_fsm_5 = "100000";
const sc_lv<15> ddr_to_axis_reader::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<15> ddr_to_axis_reader::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<15> ddr_to_axis_reader::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<15> ddr_to_axis_reader::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<15> ddr_to_axis_reader::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<15> ddr_to_axis_reader::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<15> ddr_to_axis_reader::ap_ST_pp0_stg0_fsm_12 = "1000000000000";
const sc_lv<15> ddr_to_axis_reader::ap_ST_pp1_stg0_fsm_13 = "10000000000000";
const sc_lv<15> ddr_to_axis_reader::ap_ST_st19_fsm_14 = "100000000000000";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> ddr_to_axis_reader::ap_const_lv1_1 = "1";
const sc_lv<1> ddr_to_axis_reader::ap_const_lv1_0 = "0";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_5 = "101";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_C = "1100";
const int ddr_to_axis_reader::C_S_AXI_DATA_WIDTH = "100000";
const int ddr_to_axis_reader::C_M_AXI_DATA_WIDTH = "100000";
const int ddr_to_axis_reader::C_M_AXI_BASE_DDR_ADDR_TARGET_ADDR = "0000000000000000000000000000000000000000000000000000000000000000";
const int ddr_to_axis_reader::C_M_AXI_BASE_DDR_ADDR_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int ddr_to_axis_reader::C_M_AXI_BASE_DDR_ADDR_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int ddr_to_axis_reader::C_M_AXI_BASE_DDR_ADDR_CACHE_VALUE = "11";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_1 = "1";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_3 = "11";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_4 = "100";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_D = "1101";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_E = "1110";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_B = "1011";
const sc_lv<10> ddr_to_axis_reader::ap_const_lv10_0 = "0000000000";
const sc_lv<13> ddr_to_axis_reader::ap_const_lv13_0 = "0000000000000";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_200 = "1000000000";
const sc_lv<3> ddr_to_axis_reader::ap_const_lv3_0 = "000";
const sc_lv<2> ddr_to_axis_reader::ap_const_lv2_0 = "00";
const sc_lv<4> ddr_to_axis_reader::ap_const_lv4_0 = "0000";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_1F = "11111";
const sc_lv<8> ddr_to_axis_reader::ap_const_lv8_0 = "00000000";
const sc_lv<8> ddr_to_axis_reader::ap_const_lv8_FF = "11111111";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_22 = "100010";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_8000000 = "1000000000000000000000000000";
const sc_lv<10> ddr_to_axis_reader::ap_const_lv10_200 = "1000000000";
const sc_lv<10> ddr_to_axis_reader::ap_const_lv10_1 = "1";
const sc_lv<13> ddr_to_axis_reader::ap_const_lv13_1000 = "1000000000000";
const sc_lv<13> ddr_to_axis_reader::ap_const_lv13_1 = "1";
const sc_lv<6> ddr_to_axis_reader::ap_const_lv6_7 = "111";
const sc_lv<32> ddr_to_axis_reader::ap_const_lv32_3F = "111111";
const sc_lv<7> ddr_to_axis_reader::ap_const_lv7_3F = "111111";
const sc_lv<64> ddr_to_axis_reader::ap_const_lv64_FFFFFFFFFFFFFFFF = "1111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<64> ddr_to_axis_reader::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";

ddr_to_axis_reader::ddr_to_axis_reader(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ddr_to_axis_reader_AXILiteS_s_axi_U = new ddr_to_axis_reader_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("ddr_to_axis_reader_AXILiteS_s_axi_U");
    ddr_to_axis_reader_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    ddr_to_axis_reader_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    ddr_to_axis_reader_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    ddr_to_axis_reader_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    ddr_to_axis_reader_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    ddr_to_axis_reader_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    ddr_to_axis_reader_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    ddr_to_axis_reader_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    ddr_to_axis_reader_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    ddr_to_axis_reader_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    ddr_to_axis_reader_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    ddr_to_axis_reader_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    ddr_to_axis_reader_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    ddr_to_axis_reader_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    ddr_to_axis_reader_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    ddr_to_axis_reader_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    ddr_to_axis_reader_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    ddr_to_axis_reader_AXILiteS_s_axi_U->ACLK(ap_clk);
    ddr_to_axis_reader_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    ddr_to_axis_reader_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    ddr_to_axis_reader_AXILiteS_s_axi_U->ap_start(ap_start);
    ddr_to_axis_reader_AXILiteS_s_axi_U->interrupt(interrupt);
    ddr_to_axis_reader_AXILiteS_s_axi_U->ap_ready(ap_ready);
    ddr_to_axis_reader_AXILiteS_s_axi_U->ap_done(ap_done);
    ddr_to_axis_reader_AXILiteS_s_axi_U->ap_idle(ap_idle);
    ddr_to_axis_reader_AXILiteS_s_axi_U->base_address(base_address);
    ddr_to_axis_reader_AXILiteS_s_axi_U->frame_buffer_dim(frame_buffer_dim);
    ddr_to_axis_reader_AXILiteS_s_axi_U->frame_buffer_offset(frame_buffer_offset);
    ddr_to_axis_reader_AXILiteS_s_axi_U->frame_buffer_number(frame_buffer_number);
    ddr_to_axis_reader_AXILiteS_s_axi_U->update_intr(update_intr);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U = new ddr_to_axis_reader_base_ddr_addr_m_axi<64,32,5,16,16,16,16,C_M_AXI_BASE_DDR_ADDR_ID_WIDTH,C_M_AXI_BASE_DDR_ADDR_ADDR_WIDTH,C_M_AXI_BASE_DDR_ADDR_DATA_WIDTH,C_M_AXI_BASE_DDR_ADDR_AWUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_ARUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_WUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_RUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_BUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_TARGET_ADDR,C_M_AXI_BASE_DDR_ADDR_USER_VALUE,C_M_AXI_BASE_DDR_ADDR_PROT_VALUE,C_M_AXI_BASE_DDR_ADDR_CACHE_VALUE>("ddr_to_axis_reader_base_ddr_addr_m_axi_U");
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWVALID(m_axi_base_ddr_addr_AWVALID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWREADY(m_axi_base_ddr_addr_AWREADY);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWADDR(m_axi_base_ddr_addr_AWADDR);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWID(m_axi_base_ddr_addr_AWID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWLEN(m_axi_base_ddr_addr_AWLEN);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWSIZE(m_axi_base_ddr_addr_AWSIZE);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWBURST(m_axi_base_ddr_addr_AWBURST);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWLOCK(m_axi_base_ddr_addr_AWLOCK);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWCACHE(m_axi_base_ddr_addr_AWCACHE);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWPROT(m_axi_base_ddr_addr_AWPROT);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWQOS(m_axi_base_ddr_addr_AWQOS);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWREGION(m_axi_base_ddr_addr_AWREGION);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->AWUSER(m_axi_base_ddr_addr_AWUSER);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->WVALID(m_axi_base_ddr_addr_WVALID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->WREADY(m_axi_base_ddr_addr_WREADY);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->WDATA(m_axi_base_ddr_addr_WDATA);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->WSTRB(m_axi_base_ddr_addr_WSTRB);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->WLAST(m_axi_base_ddr_addr_WLAST);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->WID(m_axi_base_ddr_addr_WID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->WUSER(m_axi_base_ddr_addr_WUSER);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARVALID(m_axi_base_ddr_addr_ARVALID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARREADY(m_axi_base_ddr_addr_ARREADY);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARADDR(m_axi_base_ddr_addr_ARADDR);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARID(m_axi_base_ddr_addr_ARID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARLEN(m_axi_base_ddr_addr_ARLEN);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARSIZE(m_axi_base_ddr_addr_ARSIZE);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARBURST(m_axi_base_ddr_addr_ARBURST);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARLOCK(m_axi_base_ddr_addr_ARLOCK);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARCACHE(m_axi_base_ddr_addr_ARCACHE);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARPROT(m_axi_base_ddr_addr_ARPROT);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARQOS(m_axi_base_ddr_addr_ARQOS);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARREGION(m_axi_base_ddr_addr_ARREGION);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARUSER(m_axi_base_ddr_addr_ARUSER);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->RVALID(m_axi_base_ddr_addr_RVALID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->RREADY(m_axi_base_ddr_addr_RREADY);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->RDATA(m_axi_base_ddr_addr_RDATA);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->RLAST(m_axi_base_ddr_addr_RLAST);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->RID(m_axi_base_ddr_addr_RID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->RUSER(m_axi_base_ddr_addr_RUSER);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->RRESP(m_axi_base_ddr_addr_RRESP);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->BVALID(m_axi_base_ddr_addr_BVALID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->BREADY(m_axi_base_ddr_addr_BREADY);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->BRESP(m_axi_base_ddr_addr_BRESP);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->BID(m_axi_base_ddr_addr_BID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->BUSER(m_axi_base_ddr_addr_BUSER);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ACLK(ap_clk);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ARESET(ap_rst_n_inv);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->ACLK_EN(ap_var_for_const0);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARVALID(base_ddr_addr_ARVALID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARREADY(base_ddr_addr_ARREADY);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARADDR(base_ddr_addr_ARADDR);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARID(ap_var_for_const1);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARLEN(ap_var_for_const2);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARSIZE(ap_var_for_const3);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARLOCK(ap_var_for_const4);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARCACHE(ap_var_for_const5);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARQOS(ap_var_for_const5);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARPROT(ap_var_for_const3);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARUSER(ap_var_for_const1);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARBURST(ap_var_for_const4);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_ARREGION(ap_var_for_const5);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_RVALID(base_ddr_addr_RVALID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_RREADY(base_ddr_addr_RREADY);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_RDATA(base_ddr_addr_RDATA);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_RID(base_ddr_addr_RID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_RUSER(base_ddr_addr_RUSER);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_RRESP(base_ddr_addr_RRESP);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_RLAST(base_ddr_addr_RLAST);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWVALID(ap_var_for_const6);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWREADY(base_ddr_addr_AWREADY);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWADDR(ap_var_for_const7);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWID(ap_var_for_const1);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWLEN(ap_var_for_const7);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWSIZE(ap_var_for_const3);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWLOCK(ap_var_for_const4);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWCACHE(ap_var_for_const5);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWQOS(ap_var_for_const5);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWPROT(ap_var_for_const3);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWUSER(ap_var_for_const1);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWBURST(ap_var_for_const4);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_AWREGION(ap_var_for_const5);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_WVALID(ap_var_for_const6);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_WREADY(base_ddr_addr_WREADY);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_WDATA(ap_var_for_const8);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_WID(ap_var_for_const1);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_WUSER(ap_var_for_const1);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_WLAST(ap_var_for_const6);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_WSTRB(ap_var_for_const9);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_BVALID(base_ddr_addr_BVALID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_BREADY(ap_var_for_const6);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_BRESP(base_ddr_addr_BRESP);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_BID(base_ddr_addr_BID);
    ddr_to_axis_reader_base_ddr_addr_m_axi_U->I_BUSER(base_ddr_addr_BUSER);
    buffer_U = new ddr_to_axis_reader_buffer("buffer_U");
    buffer_U->clk(ap_clk);
    buffer_U->reset(ap_rst_n_inv);
    buffer_U->address0(buffer_address0);
    buffer_U->ce0(buffer_ce0);
    buffer_U->q0(buffer_q0);
    buffer_U->address1(buffer_address1);
    buffer_U->ce1(buffer_ce1);
    buffer_U->we1(buffer_we1);
    buffer_U->d1(base_ddr_addr_addr_read_reg_666);
    ddr_to_axis_reader_mul_8ns_32ns_40_3_U0 = new ddr_to_axis_reader_mul_8ns_32ns_40_3<1,3,8,32,40>("ddr_to_axis_reader_mul_8ns_32ns_40_3_U0");
    ddr_to_axis_reader_mul_8ns_32ns_40_3_U0->clk(ap_clk);
    ddr_to_axis_reader_mul_8ns_32ns_40_3_U0->reset(ap_rst_n_inv);
    ddr_to_axis_reader_mul_8ns_32ns_40_3_U0->din0(grp_fu_375_p0);
    ddr_to_axis_reader_mul_8ns_32ns_40_3_U0->din1(grp_fu_375_p1);
    ddr_to_axis_reader_mul_8ns_32ns_40_3_U0->ce(ap_var_for_const0);
    ddr_to_axis_reader_mul_8ns_32ns_40_3_U0->dout(grp_fu_375_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( tmp_7_fu_414_p2 );
    sensitive << ( ap_sig_ioackin_base_ddr_addr_ARREADY );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( tmp_7_fu_414_p2 );
    sensitive << ( ap_sig_ioackin_base_ddr_addr_ARREADY );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_116);
    sensitive << ( ap_reg_ppiten_pp1_it2 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_671_pp1_iter1 );

    SC_METHOD(thread_ap_sig_122);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_128);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( tmp_7_fu_414_p2 );

    SC_METHOD(thread_ap_sig_134);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_265);
    sensitive << ( exitcond1_reg_657 );
    sensitive << ( base_ddr_addr_RVALID );

    SC_METHOD(thread_ap_sig_276);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_sig_287);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_298);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_307);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_335);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_367);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_374);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_12);
    sensitive << ( ap_sig_134 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp1_stg0_fsm_13);
    sensitive << ( ap_sig_335 );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_11);
    sensitive << ( ap_sig_374 );

    SC_METHOD(thread_ap_sig_cseq_ST_st19_fsm_14);
    sensitive << ( ap_sig_367 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_32 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_287 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_298 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_307 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_122 );

    SC_METHOD(thread_ap_sig_ioackin_base_ddr_addr_ARREADY);
    sensitive << ( base_ddr_addr_ARREADY );
    sensitive << ( ap_reg_ioackin_base_ddr_addr_ARREADY );

    SC_METHOD(thread_ap_sig_ioackin_outStream_V_TREADY);
    sensitive << ( outStream_V_TREADY );
    sensitive << ( ap_reg_ioackin_outStream_V_TREADY );

    SC_METHOD(thread_base_ddr_addr_ARADDR);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( tmp_7_fu_414_p2 );
    sensitive << ( tmp_8_fu_426_p1 );
    sensitive << ( ap_reg_ioackin_base_ddr_addr_ARREADY );

    SC_METHOD(thread_base_ddr_addr_ARVALID);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( tmp_7_fu_414_p2 );
    sensitive << ( ap_reg_ioackin_base_ddr_addr_ARREADY );

    SC_METHOD(thread_base_ddr_addr_RREADY);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_12 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond1_reg_657 );
    sensitive << ( ap_sig_265 );

    SC_METHOD(thread_base_ddr_addr_blk_n_AR);
    sensitive << ( m_axi_base_ddr_addr_ARREADY );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( tmp_7_fu_414_p2 );

    SC_METHOD(thread_base_ddr_addr_blk_n_R);
    sensitive << ( m_axi_base_ddr_addr_RVALID );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_12 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond1_reg_657 );

    SC_METHOD(thread_buffer_address0);
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_13 );
    sensitive << ( gepindex2_cast_fu_480_p1 );

    SC_METHOD(thread_buffer_address1);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( tmp_10_fu_449_p1 );

    SC_METHOD(thread_buffer_ce0);
    sensitive << ( ap_reg_ppiten_pp1_it2 );
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_671_pp1_iter1 );
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_13 );
    sensitive << ( ap_sig_ioackin_outStream_V_TREADY );

    SC_METHOD(thread_buffer_ce1);
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_sig_265 );

    SC_METHOD(thread_buffer_we1);
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_sig_265 );
    sensitive << ( ap_reg_ppstg_exitcond1_reg_657_pp0_iter1 );

    SC_METHOD(thread_end_pos_fu_492_p2);
    sensitive << ( start_pos_fu_485_p3 );

    SC_METHOD(thread_exitcond1_fu_437_p2);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_12 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_265 );
    sensitive << ( indvar_phi_fu_273_p4 );

    SC_METHOD(thread_exitcond_fu_454_p2);
    sensitive << ( ap_reg_ppiten_pp1_it2 );
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_671_pp1_iter1 );
    sensitive << ( j_reg_281 );
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_13 );
    sensitive << ( ap_sig_ioackin_outStream_V_TREADY );

    SC_METHOD(thread_gepindex2_cast_fu_480_p1);
    sensitive << ( gepindex_cast_fu_470_p4 );

    SC_METHOD(thread_gepindex_cast_fu_470_p4);
    sensitive << ( j_reg_281 );

    SC_METHOD(thread_grp_fu_375_p0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( grp_fu_375_p00 );

    SC_METHOD(thread_grp_fu_375_p00);
    sensitive << ( inner_index_V_1_reg_618 );

    SC_METHOD(thread_grp_fu_375_p1);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( grp_fu_375_p10 );

    SC_METHOD(thread_grp_fu_375_p10);
    sensitive << ( i_op_assign_reg_239 );

    SC_METHOD(thread_i_1_fu_420_p2);
    sensitive << ( i_reg_258 );

    SC_METHOD(thread_indvar_next_fu_443_p2);
    sensitive << ( indvar_phi_fu_273_p4 );

    SC_METHOD(thread_indvar_phi_fu_273_p4);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_12 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond1_reg_657 );
    sensitive << ( indvar_reg_269 );
    sensitive << ( indvar_next_reg_661 );

    SC_METHOD(thread_inner_index_V_1_fu_362_p2);
    sensitive << ( t_V_fu_354_p3 );

    SC_METHOD(thread_j_1_fu_460_p2);
    sensitive << ( j_reg_281 );

    SC_METHOD(thread_offset_1_fu_599_p2);
    sensitive << ( offset1_reg_248 );

    SC_METHOD(thread_offset_fu_391_p2);
    sensitive << ( tmp_s_reg_633 );

    SC_METHOD(thread_outStream_V_TDATA);
    sensitive << ( ap_reg_ppiten_pp1_it2 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_671_pp1_iter1 );
    sensitive << ( tmp_28_fu_589_p2 );

    SC_METHOD(thread_outStream_V_TDATA_blk_n);
    sensitive << ( outStream_V_TREADY );
    sensitive << ( ap_reg_ppiten_pp1_it2 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_671_pp1_iter1 );

    SC_METHOD(thread_outStream_V_TVALID);
    sensitive << ( ap_reg_ppiten_pp1_it2 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_671_pp1_iter1 );
    sensitive << ( ap_reg_ioackin_outStream_V_TREADY );

    SC_METHOD(thread_start_pos_fu_485_p3);
    sensitive << ( tmp_12_reg_680 );

    SC_METHOD(thread_t_V_fu_354_p3);
    sensitive << ( frame_index_V );
    sensitive << ( tmp_4_fu_344_p2 );
    sensitive << ( tmp_fu_350_p1 );

    SC_METHOD(thread_tmp_10_fu_449_p1);
    sensitive << ( ap_reg_ppstg_indvar_reg_269_pp0_iter1 );

    SC_METHOD(thread_tmp_12_fu_466_p1);
    sensitive << ( j_reg_281 );

    SC_METHOD(thread_tmp_13_fu_498_p2);
    sensitive << ( ap_reg_ppiten_pp1_it2 );
    sensitive << ( ap_reg_ppiten_pp1_it1 );
    sensitive << ( exitcond_reg_671 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_671_pp1_iter1 );
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_13 );
    sensitive << ( ap_sig_ioackin_outStream_V_TREADY );
    sensitive << ( start_pos_fu_485_p3 );
    sensitive << ( end_pos_fu_492_p2 );

    SC_METHOD(thread_tmp_14_fu_504_p1);
    sensitive << ( start_pos_fu_485_p3 );

    SC_METHOD(thread_tmp_15_fu_508_p1);
    sensitive << ( end_pos_fu_492_p2 );

    SC_METHOD(thread_tmp_16_fu_512_p4);
    sensitive << ( buffer_q0 );

    SC_METHOD(thread_tmp_17_fu_522_p2);
    sensitive << ( tmp_14_fu_504_p1 );
    sensitive << ( tmp_15_fu_508_p1 );

    SC_METHOD(thread_tmp_18_fu_528_p2);
    sensitive << ( tmp_14_fu_504_p1 );

    SC_METHOD(thread_tmp_19_fu_534_p2);
    sensitive << ( tmp_14_fu_504_p1 );
    sensitive << ( tmp_15_fu_508_p1 );

    SC_METHOD(thread_tmp_1_fu_292_p1);
    sensitive << ( frame_buffer_number );

    SC_METHOD(thread_tmp_20_fu_540_p3);
    sensitive << ( tmp_13_fu_498_p2 );
    sensitive << ( tmp_17_fu_522_p2 );
    sensitive << ( tmp_19_fu_534_p2 );

    SC_METHOD(thread_tmp_21_fu_548_p3);
    sensitive << ( buffer_q0 );
    sensitive << ( tmp_13_fu_498_p2 );
    sensitive << ( tmp_16_fu_512_p4 );

    SC_METHOD(thread_tmp_22_fu_556_p3);
    sensitive << ( tmp_14_fu_504_p1 );
    sensitive << ( tmp_13_fu_498_p2 );
    sensitive << ( tmp_18_fu_528_p2 );

    SC_METHOD(thread_tmp_23_fu_564_p2);
    sensitive << ( tmp_20_fu_540_p3 );

    SC_METHOD(thread_tmp_24_fu_570_p1);
    sensitive << ( tmp_22_fu_556_p3 );

    SC_METHOD(thread_tmp_25_fu_580_p1);
    sensitive << ( tmp_23_reg_690 );

    SC_METHOD(thread_tmp_26_fu_574_p2);
    sensitive << ( tmp_21_fu_548_p3 );
    sensitive << ( tmp_24_fu_570_p1 );

    SC_METHOD(thread_tmp_27_fu_583_p2);
    sensitive << ( tmp_25_fu_580_p1 );

    SC_METHOD(thread_tmp_28_fu_589_p2);
    sensitive << ( tmp_26_reg_695 );
    sensitive << ( tmp_27_fu_583_p2 );

    SC_METHOD(thread_tmp_3_phi_fu_233_p4);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( FRAME_BUFFER_NUMBER_r );
    sensitive << ( tmp_1_fu_292_p1 );
    sensitive << ( update_intr_read_read_fu_154_p2 );

    SC_METHOD(thread_tmp_4_fu_344_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( frame_index_V );

    SC_METHOD(thread_tmp_6_fu_400_p4);
    sensitive << ( FRAME_BUFFER_DIM_r );

    SC_METHOD(thread_tmp_7_fu_414_p2);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( tmp_7_fu_414_p2 );
    sensitive << ( ap_sig_ioackin_base_ddr_addr_ARREADY );
    sensitive << ( i_reg_258 );
    sensitive << ( tmp_9_fu_410_p1 );

    SC_METHOD(thread_tmp_8_fu_426_p1);
    sensitive << ( offset1_reg_248 );

    SC_METHOD(thread_tmp_9_fu_410_p1);
    sensitive << ( tmp_6_fu_400_p4 );

    SC_METHOD(thread_tmp_fu_350_p1);
    sensitive << ( tmp_3_phi_fu_233_p4 );

    SC_METHOD(thread_update_intr_read_read_fu_154_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( update_intr );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp1_it2 );
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( ap_reg_ppiten_pp1_it1 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_671_pp1_iter1 );
    sensitive << ( tmp_7_fu_414_p2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_sig_265 );
    sensitive << ( ap_sig_ioackin_base_ddr_addr_ARREADY );
    sensitive << ( exitcond1_fu_437_p2 );
    sensitive << ( exitcond_fu_454_p2 );
    sensitive << ( ap_sig_ioackin_outStream_V_TREADY );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const9);

    SC_THREAD(thread_ap_var_for_const8);

    ap_CS_fsm = "000000000000001";
    FRAME_OFFSET = "00000000000001001011000000000000";
    FRAME_BUFFER_NUMBER_r = "00000000000000000000000000001000";
    FRAME_BUFFER_DIM_r = "00000000000001001011000000000000";
    ap_reg_ppiten_pp1_it2 = SC_LOGIC_0;
    ap_reg_ppiten_pp1_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp1_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it2 = SC_LOGIC_0;
    ap_reg_ioackin_base_ddr_addr_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_outStream_V_TREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "ddr_to_axis_reader_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, outStream_V_TDATA, "(port)outStream_V_TDATA");
    sc_trace(mVcdFile, outStream_V_TVALID, "(port)outStream_V_TVALID");
    sc_trace(mVcdFile, outStream_V_TREADY, "(port)outStream_V_TREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWVALID, "(port)m_axi_base_ddr_addr_AWVALID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWREADY, "(port)m_axi_base_ddr_addr_AWREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWADDR, "(port)m_axi_base_ddr_addr_AWADDR");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWID, "(port)m_axi_base_ddr_addr_AWID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWLEN, "(port)m_axi_base_ddr_addr_AWLEN");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWSIZE, "(port)m_axi_base_ddr_addr_AWSIZE");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWBURST, "(port)m_axi_base_ddr_addr_AWBURST");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWLOCK, "(port)m_axi_base_ddr_addr_AWLOCK");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWCACHE, "(port)m_axi_base_ddr_addr_AWCACHE");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWPROT, "(port)m_axi_base_ddr_addr_AWPROT");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWQOS, "(port)m_axi_base_ddr_addr_AWQOS");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWREGION, "(port)m_axi_base_ddr_addr_AWREGION");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWUSER, "(port)m_axi_base_ddr_addr_AWUSER");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WVALID, "(port)m_axi_base_ddr_addr_WVALID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WREADY, "(port)m_axi_base_ddr_addr_WREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WDATA, "(port)m_axi_base_ddr_addr_WDATA");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WSTRB, "(port)m_axi_base_ddr_addr_WSTRB");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WLAST, "(port)m_axi_base_ddr_addr_WLAST");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WID, "(port)m_axi_base_ddr_addr_WID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WUSER, "(port)m_axi_base_ddr_addr_WUSER");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARVALID, "(port)m_axi_base_ddr_addr_ARVALID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARREADY, "(port)m_axi_base_ddr_addr_ARREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARADDR, "(port)m_axi_base_ddr_addr_ARADDR");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARID, "(port)m_axi_base_ddr_addr_ARID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARLEN, "(port)m_axi_base_ddr_addr_ARLEN");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARSIZE, "(port)m_axi_base_ddr_addr_ARSIZE");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARBURST, "(port)m_axi_base_ddr_addr_ARBURST");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARLOCK, "(port)m_axi_base_ddr_addr_ARLOCK");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARCACHE, "(port)m_axi_base_ddr_addr_ARCACHE");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARPROT, "(port)m_axi_base_ddr_addr_ARPROT");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARQOS, "(port)m_axi_base_ddr_addr_ARQOS");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARREGION, "(port)m_axi_base_ddr_addr_ARREGION");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARUSER, "(port)m_axi_base_ddr_addr_ARUSER");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RVALID, "(port)m_axi_base_ddr_addr_RVALID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RREADY, "(port)m_axi_base_ddr_addr_RREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RDATA, "(port)m_axi_base_ddr_addr_RDATA");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RLAST, "(port)m_axi_base_ddr_addr_RLAST");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RID, "(port)m_axi_base_ddr_addr_RID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RUSER, "(port)m_axi_base_ddr_addr_RUSER");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RRESP, "(port)m_axi_base_ddr_addr_RRESP");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_BVALID, "(port)m_axi_base_ddr_addr_BVALID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_BREADY, "(port)m_axi_base_ddr_addr_BREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_BRESP, "(port)m_axi_base_ddr_addr_BRESP");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_BID, "(port)m_axi_base_ddr_addr_BID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_BUSER, "(port)m_axi_base_ddr_addr_BUSER");
    sc_trace(mVcdFile, frame_index_V, "(port)frame_index_V");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_32, "ap_sig_32");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, base_address, "base_address");
    sc_trace(mVcdFile, frame_buffer_dim, "frame_buffer_dim");
    sc_trace(mVcdFile, frame_buffer_offset, "frame_buffer_offset");
    sc_trace(mVcdFile, frame_buffer_number, "frame_buffer_number");
    sc_trace(mVcdFile, update_intr, "update_intr");
    sc_trace(mVcdFile, FRAME_OFFSET, "FRAME_OFFSET");
    sc_trace(mVcdFile, FRAME_BUFFER_NUMBER_r, "FRAME_BUFFER_NUMBER_r");
    sc_trace(mVcdFile, FRAME_BUFFER_DIM_r, "FRAME_BUFFER_DIM_r");
    sc_trace(mVcdFile, outStream_V_TDATA_blk_n, "outStream_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_reg_ppiten_pp1_it2, "ap_reg_ppiten_pp1_it2");
    sc_trace(mVcdFile, ap_reg_ppiten_pp1_it0, "ap_reg_ppiten_pp1_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp1_it1, "ap_reg_ppiten_pp1_it1");
    sc_trace(mVcdFile, exitcond_reg_671, "exitcond_reg_671");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_671_pp1_iter1, "ap_reg_ppstg_exitcond_reg_671_pp1_iter1");
    sc_trace(mVcdFile, base_ddr_addr_blk_n_AR, "base_ddr_addr_blk_n_AR");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_122, "ap_sig_122");
    sc_trace(mVcdFile, tmp_7_fu_414_p2, "tmp_7_fu_414_p2");
    sc_trace(mVcdFile, base_ddr_addr_blk_n_R, "base_ddr_addr_blk_n_R");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_12, "ap_sig_cseq_ST_pp0_stg0_fsm_12");
    sc_trace(mVcdFile, ap_sig_134, "ap_sig_134");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it2, "ap_reg_ppiten_pp0_it2");
    sc_trace(mVcdFile, exitcond1_reg_657, "exitcond1_reg_657");
    sc_trace(mVcdFile, base_ddr_addr_AWREADY, "base_ddr_addr_AWREADY");
    sc_trace(mVcdFile, base_ddr_addr_WREADY, "base_ddr_addr_WREADY");
    sc_trace(mVcdFile, base_ddr_addr_ARVALID, "base_ddr_addr_ARVALID");
    sc_trace(mVcdFile, base_ddr_addr_ARREADY, "base_ddr_addr_ARREADY");
    sc_trace(mVcdFile, base_ddr_addr_ARADDR, "base_ddr_addr_ARADDR");
    sc_trace(mVcdFile, base_ddr_addr_RVALID, "base_ddr_addr_RVALID");
    sc_trace(mVcdFile, base_ddr_addr_RREADY, "base_ddr_addr_RREADY");
    sc_trace(mVcdFile, base_ddr_addr_RDATA, "base_ddr_addr_RDATA");
    sc_trace(mVcdFile, base_ddr_addr_RLAST, "base_ddr_addr_RLAST");
    sc_trace(mVcdFile, base_ddr_addr_RID, "base_ddr_addr_RID");
    sc_trace(mVcdFile, base_ddr_addr_RUSER, "base_ddr_addr_RUSER");
    sc_trace(mVcdFile, base_ddr_addr_RRESP, "base_ddr_addr_RRESP");
    sc_trace(mVcdFile, base_ddr_addr_BVALID, "base_ddr_addr_BVALID");
    sc_trace(mVcdFile, base_ddr_addr_BRESP, "base_ddr_addr_BRESP");
    sc_trace(mVcdFile, base_ddr_addr_BID, "base_ddr_addr_BID");
    sc_trace(mVcdFile, base_ddr_addr_BUSER, "base_ddr_addr_BUSER");
    sc_trace(mVcdFile, indvar_reg_269, "indvar_reg_269");
    sc_trace(mVcdFile, ap_reg_ppstg_indvar_reg_269_pp0_iter1, "ap_reg_ppstg_indvar_reg_269_pp0_iter1");
    sc_trace(mVcdFile, ap_sig_265, "ap_sig_265");
    sc_trace(mVcdFile, j_reg_281, "j_reg_281");
    sc_trace(mVcdFile, inner_index_V_1_fu_362_p2, "inner_index_V_1_fu_362_p2");
    sc_trace(mVcdFile, inner_index_V_1_reg_618, "inner_index_V_1_reg_618");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_287, "ap_sig_287");
    sc_trace(mVcdFile, tmp_s_reg_633, "tmp_s_reg_633");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_298, "ap_sig_298");
    sc_trace(mVcdFile, offset_fu_391_p2, "offset_fu_391_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_307, "ap_sig_307");
    sc_trace(mVcdFile, i_1_fu_420_p2, "i_1_fu_420_p2");
    sc_trace(mVcdFile, i_1_reg_646, "i_1_reg_646");
    sc_trace(mVcdFile, ap_sig_ioackin_base_ddr_addr_ARREADY, "ap_sig_ioackin_base_ddr_addr_ARREADY");
    sc_trace(mVcdFile, exitcond1_fu_437_p2, "exitcond1_fu_437_p2");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond1_reg_657_pp0_iter1, "ap_reg_ppstg_exitcond1_reg_657_pp0_iter1");
    sc_trace(mVcdFile, indvar_next_fu_443_p2, "indvar_next_fu_443_p2");
    sc_trace(mVcdFile, indvar_next_reg_661, "indvar_next_reg_661");
    sc_trace(mVcdFile, base_ddr_addr_addr_read_reg_666, "base_ddr_addr_addr_read_reg_666");
    sc_trace(mVcdFile, exitcond_fu_454_p2, "exitcond_fu_454_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp1_stg0_fsm_13, "ap_sig_cseq_ST_pp1_stg0_fsm_13");
    sc_trace(mVcdFile, ap_sig_335, "ap_sig_335");
    sc_trace(mVcdFile, ap_sig_ioackin_outStream_V_TREADY, "ap_sig_ioackin_outStream_V_TREADY");
    sc_trace(mVcdFile, j_1_fu_460_p2, "j_1_fu_460_p2");
    sc_trace(mVcdFile, tmp_12_fu_466_p1, "tmp_12_fu_466_p1");
    sc_trace(mVcdFile, tmp_12_reg_680, "tmp_12_reg_680");
    sc_trace(mVcdFile, tmp_23_fu_564_p2, "tmp_23_fu_564_p2");
    sc_trace(mVcdFile, tmp_23_reg_690, "tmp_23_reg_690");
    sc_trace(mVcdFile, tmp_26_fu_574_p2, "tmp_26_fu_574_p2");
    sc_trace(mVcdFile, tmp_26_reg_695, "tmp_26_reg_695");
    sc_trace(mVcdFile, offset_1_fu_599_p2, "offset_1_fu_599_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st19_fsm_14, "ap_sig_cseq_ST_st19_fsm_14");
    sc_trace(mVcdFile, ap_sig_367, "ap_sig_367");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_11, "ap_sig_cseq_ST_st12_fsm_11");
    sc_trace(mVcdFile, ap_sig_374, "ap_sig_374");
    sc_trace(mVcdFile, buffer_address0, "buffer_address0");
    sc_trace(mVcdFile, buffer_ce0, "buffer_ce0");
    sc_trace(mVcdFile, buffer_q0, "buffer_q0");
    sc_trace(mVcdFile, buffer_address1, "buffer_address1");
    sc_trace(mVcdFile, buffer_ce1, "buffer_ce1");
    sc_trace(mVcdFile, buffer_we1, "buffer_we1");
    sc_trace(mVcdFile, tmp_1_fu_292_p1, "tmp_1_fu_292_p1");
    sc_trace(mVcdFile, tmp_3_phi_fu_233_p4, "tmp_3_phi_fu_233_p4");
    sc_trace(mVcdFile, update_intr_read_read_fu_154_p2, "update_intr_read_read_fu_154_p2");
    sc_trace(mVcdFile, i_op_assign_reg_239, "i_op_assign_reg_239");
    sc_trace(mVcdFile, offset1_reg_248, "offset1_reg_248");
    sc_trace(mVcdFile, i_reg_258, "i_reg_258");
    sc_trace(mVcdFile, indvar_phi_fu_273_p4, "indvar_phi_fu_273_p4");
    sc_trace(mVcdFile, tmp_10_fu_449_p1, "tmp_10_fu_449_p1");
    sc_trace(mVcdFile, gepindex2_cast_fu_480_p1, "gepindex2_cast_fu_480_p1");
    sc_trace(mVcdFile, tmp_8_fu_426_p1, "tmp_8_fu_426_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_base_ddr_addr_ARREADY, "ap_reg_ioackin_base_ddr_addr_ARREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_outStream_V_TREADY, "ap_reg_ioackin_outStream_V_TREADY");
    sc_trace(mVcdFile, tmp_4_fu_344_p2, "tmp_4_fu_344_p2");
    sc_trace(mVcdFile, tmp_fu_350_p1, "tmp_fu_350_p1");
    sc_trace(mVcdFile, t_V_fu_354_p3, "t_V_fu_354_p3");
    sc_trace(mVcdFile, grp_fu_375_p0, "grp_fu_375_p0");
    sc_trace(mVcdFile, grp_fu_375_p1, "grp_fu_375_p1");
    sc_trace(mVcdFile, grp_fu_375_p2, "grp_fu_375_p2");
    sc_trace(mVcdFile, tmp_6_fu_400_p4, "tmp_6_fu_400_p4");
    sc_trace(mVcdFile, tmp_9_fu_410_p1, "tmp_9_fu_410_p1");
    sc_trace(mVcdFile, gepindex_cast_fu_470_p4, "gepindex_cast_fu_470_p4");
    sc_trace(mVcdFile, start_pos_fu_485_p3, "start_pos_fu_485_p3");
    sc_trace(mVcdFile, end_pos_fu_492_p2, "end_pos_fu_492_p2");
    sc_trace(mVcdFile, tmp_14_fu_504_p1, "tmp_14_fu_504_p1");
    sc_trace(mVcdFile, tmp_15_fu_508_p1, "tmp_15_fu_508_p1");
    sc_trace(mVcdFile, tmp_13_fu_498_p2, "tmp_13_fu_498_p2");
    sc_trace(mVcdFile, tmp_17_fu_522_p2, "tmp_17_fu_522_p2");
    sc_trace(mVcdFile, tmp_19_fu_534_p2, "tmp_19_fu_534_p2");
    sc_trace(mVcdFile, tmp_16_fu_512_p4, "tmp_16_fu_512_p4");
    sc_trace(mVcdFile, tmp_18_fu_528_p2, "tmp_18_fu_528_p2");
    sc_trace(mVcdFile, tmp_20_fu_540_p3, "tmp_20_fu_540_p3");
    sc_trace(mVcdFile, tmp_22_fu_556_p3, "tmp_22_fu_556_p3");
    sc_trace(mVcdFile, tmp_21_fu_548_p3, "tmp_21_fu_548_p3");
    sc_trace(mVcdFile, tmp_24_fu_570_p1, "tmp_24_fu_570_p1");
    sc_trace(mVcdFile, tmp_25_fu_580_p1, "tmp_25_fu_580_p1");
    sc_trace(mVcdFile, tmp_27_fu_583_p2, "tmp_27_fu_583_p2");
    sc_trace(mVcdFile, tmp_28_fu_589_p2, "tmp_28_fu_589_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_375_p00, "grp_fu_375_p00");
    sc_trace(mVcdFile, grp_fu_375_p10, "grp_fu_375_p10");
    sc_trace(mVcdFile, ap_sig_128, "ap_sig_128");
    sc_trace(mVcdFile, ap_sig_116, "ap_sig_116");
    sc_trace(mVcdFile, ap_sig_276, "ap_sig_276");
#endif

    }
    mHdltvinHandle.open("ddr_to_axis_reader.hdltvin.dat");
    mHdltvoutHandle.open("ddr_to_axis_reader.hdltvout.dat");
}

ddr_to_axis_reader::~ddr_to_axis_reader() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete ddr_to_axis_reader_AXILiteS_s_axi_U;
    delete ddr_to_axis_reader_base_ddr_addr_m_axi_U;
    delete buffer_U;
    delete ddr_to_axis_reader_mul_8ns_32ns_40_3_U0;
}

void ddr_to_axis_reader::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void ddr_to_axis_reader::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_logic_0;
}

void ddr_to_axis_reader::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv32_0;
}

void ddr_to_axis_reader::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void ddr_to_axis_reader::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_200;
}

void ddr_to_axis_reader::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv3_0;
}

void ddr_to_axis_reader::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv2_0;
}

void ddr_to_axis_reader::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv4_0;
}

void ddr_to_axis_reader::thread_ap_var_for_const9() {
    ap_var_for_const9 = ap_const_lv8_0;
}

void ddr_to_axis_reader::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv64_0;
}

void ddr_to_axis_reader::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_base_ddr_addr_ARREADY = ap_const_logic_0;
    } else {
        if (ap_sig_128.read()) {
            if (!(!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_414_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read()))) {
                ap_reg_ioackin_base_ddr_addr_ARREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, base_ddr_addr_ARREADY.read())) {
                ap_reg_ioackin_base_ddr_addr_ARREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_outStream_V_TREADY = ap_const_logic_0;
    } else {
        if (ap_sig_116.read()) {
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && esl_seteq<1,1,1>(ap_reg_ppstg_exitcond_reg_671_pp1_iter1.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read()))) {
                ap_reg_ioackin_outStream_V_TREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_TREADY.read())) {
                ap_reg_ioackin_outStream_V_TREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_12.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_265.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_437_p2.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_12.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_265.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_437_p2.read()))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_12.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_265.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_437_p2.read())))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_265.read())) {
            ap_reg_ppiten_pp0_it2 = ap_reg_ppiten_pp0_it1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
            ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp1_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_13.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && esl_seteq<1,1,1>(ap_reg_ppstg_exitcond_reg_671_pp1_iter1.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read())) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_454_p2.read()))) {
            ap_reg_ppiten_pp1_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_12.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_265.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_437_p2.read()))) {
            ap_reg_ppiten_pp1_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp1_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_13.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && esl_seteq<1,1,1>(ap_reg_ppstg_exitcond_reg_671_pp1_iter1.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read())) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_454_p2.read()))) {
            ap_reg_ppiten_pp1_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_12.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_265.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_437_p2.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_13.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && esl_seteq<1,1,1>(ap_reg_ppstg_exitcond_reg_671_pp1_iter1.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read())) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_454_p2.read())))) {
            ap_reg_ppiten_pp1_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp1_it2 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && esl_seteq<1,1,1>(ap_reg_ppstg_exitcond_reg_671_pp1_iter1.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read()))) {
            ap_reg_ppiten_pp1_it2 = ap_reg_ppiten_pp1_it1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_12.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_265.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_437_p2.read()))) {
            ap_reg_ppiten_pp1_it2 = ap_const_logic_0;
        }
    }
    if (ap_sig_276.read()) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, update_intr_read_read_fu_154_p2.read())) {
            i_op_assign_reg_239 = FRAME_OFFSET.read();
        } else if (!esl_seteq<1,1,1>(ap_const_lv1_0, update_intr_read_read_fu_154_p2.read())) {
            i_op_assign_reg_239 = frame_buffer_offset.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_14.read())) {
        i_reg_258 = i_1_reg_646.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        i_reg_258 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_657.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_265.read()))) {
        indvar_reg_269 = indvar_next_reg_661.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        indvar_reg_269 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_265.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_437_p2.read()))) {
        j_reg_281 = ap_const_lv13_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_13.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && esl_seteq<1,1,1>(ap_reg_ppstg_exitcond_reg_671_pp1_iter1.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_454_p2.read()))) {
        j_reg_281 = j_1_fu_460_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_14.read())) {
        offset1_reg_248 = offset_1_fu_599_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        offset1_reg_248 = offset_fu_391_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(ap_const_lv1_0, update_intr_read_read_fu_154_p2.read()))) {
        FRAME_BUFFER_DIM_r = frame_buffer_dim.read();
        FRAME_BUFFER_NUMBER_r = tmp_1_fu_292_p1.read();
        FRAME_OFFSET = frame_buffer_offset.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_12.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_265.read()))) {
        ap_reg_ppstg_exitcond1_reg_657_pp0_iter1 = exitcond1_reg_657.read();
        ap_reg_ppstg_indvar_reg_269_pp0_iter1 = indvar_reg_269.read();
        exitcond1_reg_657 = exitcond1_fu_437_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_13.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && esl_seteq<1,1,1>(ap_reg_ppstg_exitcond_reg_671_pp1_iter1.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read())))) {
        ap_reg_ppstg_exitcond_reg_671_pp1_iter1 = exitcond_reg_671.read();
        exitcond_reg_671 = exitcond_fu_454_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_12.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_657.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_265.read()))) {
        base_ddr_addr_addr_read_reg_666 = base_ddr_addr_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && !(!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_414_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read())))) {
        i_1_reg_646 = i_1_fu_420_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_12.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_265.read()))) {
        indvar_next_reg_661 = indvar_next_fu_443_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        inner_index_V_1_reg_618 = inner_index_V_1_fu_362_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_13.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && esl_seteq<1,1,1>(ap_reg_ppstg_exitcond_reg_671_pp1_iter1.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_454_p2.read()))) {
        tmp_12_reg_680 = tmp_12_fu_466_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_13.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && esl_seteq<1,1,1>(ap_reg_ppstg_exitcond_reg_671_pp1_iter1.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read())) && esl_seteq<1,1,1>(exitcond_reg_671.read(), ap_const_lv1_0))) {
        tmp_23_reg_690 = tmp_23_fu_564_p2.read();
        tmp_26_reg_695 = tmp_26_fu_574_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        tmp_s_reg_633 = grp_fu_375_p2.read().range(34, 3);
    }
}

void ddr_to_axis_reader::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_414_p2.read()) && 
         !(!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_414_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_414_p2.read()) && 
         !(!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_414_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void ddr_to_axis_reader::thread_ap_sig_116() {
    ap_sig_116 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && esl_seteq<1,1,1>(ap_reg_ppstg_exitcond_reg_671_pp1_iter1.read(), ap_const_lv1_0));
}

void ddr_to_axis_reader::thread_ap_sig_122() {
    ap_sig_122 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void ddr_to_axis_reader::thread_ap_sig_128() {
    ap_sig_128 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_414_p2.read()));
}

void ddr_to_axis_reader::thread_ap_sig_134() {
    ap_sig_134 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(12, 12));
}

void ddr_to_axis_reader::thread_ap_sig_265() {
    ap_sig_265 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_657.read()) && esl_seteq<1,1,1>(base_ddr_addr_RVALID.read(), ap_const_logic_0));
}

void ddr_to_axis_reader::thread_ap_sig_276() {
    ap_sig_276 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0));
}

void ddr_to_axis_reader::thread_ap_sig_287() {
    ap_sig_287 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void ddr_to_axis_reader::thread_ap_sig_298() {
    ap_sig_298 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void ddr_to_axis_reader::thread_ap_sig_307() {
    ap_sig_307 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void ddr_to_axis_reader::thread_ap_sig_32() {
    ap_sig_32 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void ddr_to_axis_reader::thread_ap_sig_335() {
    ap_sig_335 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(13, 13));
}

void ddr_to_axis_reader::thread_ap_sig_367() {
    ap_sig_367 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(14, 14));
}

void ddr_to_axis_reader::thread_ap_sig_374() {
    ap_sig_374 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void ddr_to_axis_reader::thread_ap_sig_cseq_ST_pp0_stg0_fsm_12() {
    if (ap_sig_134.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_12 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_12 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ap_sig_cseq_ST_pp1_stg0_fsm_13() {
    if (ap_sig_335.read()) {
        ap_sig_cseq_ST_pp1_stg0_fsm_13 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp1_stg0_fsm_13 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ap_sig_cseq_ST_st12_fsm_11() {
    if (ap_sig_374.read()) {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ap_sig_cseq_ST_st19_fsm_14() {
    if (ap_sig_367.read()) {
        ap_sig_cseq_ST_st19_fsm_14 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st19_fsm_14 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_32.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_287.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_298.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_307.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_122.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_ap_sig_ioackin_base_ddr_addr_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_base_ddr_addr_ARREADY.read())) {
        ap_sig_ioackin_base_ddr_addr_ARREADY = base_ddr_addr_ARREADY.read();
    } else {
        ap_sig_ioackin_base_ddr_addr_ARREADY = ap_const_logic_1;
    }
}

void ddr_to_axis_reader::thread_ap_sig_ioackin_outStream_V_TREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_outStream_V_TREADY.read())) {
        ap_sig_ioackin_outStream_V_TREADY = outStream_V_TREADY.read();
    } else {
        ap_sig_ioackin_outStream_V_TREADY = ap_const_logic_1;
    }
}

void ddr_to_axis_reader::thread_base_ddr_addr_ARADDR() {
    base_ddr_addr_ARADDR =  (sc_lv<32>) (tmp_8_fu_426_p1.read());
}

void ddr_to_axis_reader::thread_base_ddr_addr_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_414_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_base_ddr_addr_ARREADY.read()))) {
        base_ddr_addr_ARVALID = ap_const_logic_1;
    } else {
        base_ddr_addr_ARVALID = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_base_ddr_addr_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_657.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_265.read()))) {
        base_ddr_addr_RREADY = ap_const_logic_1;
    } else {
        base_ddr_addr_RREADY = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_base_ddr_addr_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_414_p2.read()))) {
        base_ddr_addr_blk_n_AR = m_axi_base_ddr_addr_ARREADY.read();
    } else {
        base_ddr_addr_blk_n_AR = ap_const_logic_1;
    }
}

void ddr_to_axis_reader::thread_base_ddr_addr_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_657.read()))) {
        base_ddr_addr_blk_n_R = m_axi_base_ddr_addr_RVALID.read();
    } else {
        base_ddr_addr_blk_n_R = ap_const_logic_1;
    }
}

void ddr_to_axis_reader::thread_buffer_address0() {
    buffer_address0 =  (sc_lv<9>) (gepindex2_cast_fu_480_p1.read());
}

void ddr_to_axis_reader::thread_buffer_address1() {
    buffer_address1 =  (sc_lv<9>) (tmp_10_fu_449_p1.read());
}

void ddr_to_axis_reader::thread_buffer_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_13.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && esl_seteq<1,1,1>(ap_reg_ppstg_exitcond_reg_671_pp1_iter1.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read())))) {
        buffer_ce0 = ap_const_logic_1;
    } else {
        buffer_ce0 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_buffer_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_265.read()))) {
        buffer_ce1 = ap_const_logic_1;
    } else {
        buffer_ce1 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_buffer_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_265.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond1_reg_657_pp0_iter1.read())))) {
        buffer_we1 = ap_const_logic_1;
    } else {
        buffer_we1 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_end_pos_fu_492_p2() {
    end_pos_fu_492_p2 = (start_pos_fu_485_p3.read() | ap_const_lv6_7);
}

void ddr_to_axis_reader::thread_exitcond1_fu_437_p2() {
    exitcond1_fu_437_p2 = (!indvar_phi_fu_273_p4.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(indvar_phi_fu_273_p4.read() == ap_const_lv10_200);
}

void ddr_to_axis_reader::thread_exitcond_fu_454_p2() {
    exitcond_fu_454_p2 = (!j_reg_281.read().is_01() || !ap_const_lv13_1000.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_281.read() == ap_const_lv13_1000);
}

void ddr_to_axis_reader::thread_gepindex2_cast_fu_480_p1() {
    gepindex2_cast_fu_480_p1 = esl_zext<64,9>(gepindex_cast_fu_470_p4.read());
}

void ddr_to_axis_reader::thread_gepindex_cast_fu_470_p4() {
    gepindex_cast_fu_470_p4 = j_reg_281.read().range(11, 3);
}

void ddr_to_axis_reader::thread_grp_fu_375_p0() {
    grp_fu_375_p0 =  (sc_lv<8>) (grp_fu_375_p00.read());
}

void ddr_to_axis_reader::thread_grp_fu_375_p00() {
    grp_fu_375_p00 = esl_zext<40,8>(inner_index_V_1_reg_618.read());
}

void ddr_to_axis_reader::thread_grp_fu_375_p1() {
    grp_fu_375_p1 =  (sc_lv<32>) (grp_fu_375_p10.read());
}

void ddr_to_axis_reader::thread_grp_fu_375_p10() {
    grp_fu_375_p10 = esl_zext<40,32>(i_op_assign_reg_239.read());
}

void ddr_to_axis_reader::thread_i_1_fu_420_p2() {
    i_1_fu_420_p2 = (!i_reg_258.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_reg_258.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void ddr_to_axis_reader::thread_indvar_next_fu_443_p2() {
    indvar_next_fu_443_p2 = (!indvar_phi_fu_273_p4.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(indvar_phi_fu_273_p4.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void ddr_to_axis_reader::thread_indvar_phi_fu_273_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_657.read()))) {
        indvar_phi_fu_273_p4 = indvar_next_reg_661.read();
    } else {
        indvar_phi_fu_273_p4 = indvar_reg_269.read();
    }
}

void ddr_to_axis_reader::thread_inner_index_V_1_fu_362_p2() {
    inner_index_V_1_fu_362_p2 = (!ap_const_lv8_FF.is_01() || !t_V_fu_354_p3.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_FF) + sc_biguint<8>(t_V_fu_354_p3.read()));
}

void ddr_to_axis_reader::thread_j_1_fu_460_p2() {
    j_1_fu_460_p2 = (!j_reg_281.read().is_01() || !ap_const_lv13_1.is_01())? sc_lv<13>(): (sc_biguint<13>(j_reg_281.read()) + sc_biguint<13>(ap_const_lv13_1));
}

void ddr_to_axis_reader::thread_offset_1_fu_599_p2() {
    offset_1_fu_599_p2 = (!offset1_reg_248.read().is_01() || !ap_const_lv32_200.is_01())? sc_lv<32>(): (sc_biguint<32>(offset1_reg_248.read()) + sc_biguint<32>(ap_const_lv32_200));
}

void ddr_to_axis_reader::thread_offset_fu_391_p2() {
    offset_fu_391_p2 = (!ap_const_lv32_8000000.is_01() || !tmp_s_reg_633.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_8000000) + sc_biguint<32>(tmp_s_reg_633.read()));
}

void ddr_to_axis_reader::thread_outStream_V_TDATA() {
    outStream_V_TDATA = tmp_28_fu_589_p2.read().range(8-1, 0);
}

void ddr_to_axis_reader::thread_outStream_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && 
         esl_seteq<1,1,1>(ap_reg_ppstg_exitcond_reg_671_pp1_iter1.read(), ap_const_lv1_0))) {
        outStream_V_TDATA_blk_n = outStream_V_TREADY.read();
    } else {
        outStream_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void ddr_to_axis_reader::thread_outStream_V_TVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && 
         esl_seteq<1,1,1>(ap_reg_ppstg_exitcond_reg_671_pp1_iter1.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_outStream_V_TREADY.read()))) {
        outStream_V_TVALID = ap_const_logic_1;
    } else {
        outStream_V_TVALID = ap_const_logic_0;
    }
}

void ddr_to_axis_reader::thread_start_pos_fu_485_p3() {
    start_pos_fu_485_p3 = esl_concat<3,3>(tmp_12_reg_680.read(), ap_const_lv3_0);
}

void ddr_to_axis_reader::thread_t_V_fu_354_p3() {
    t_V_fu_354_p3 = (!tmp_4_fu_344_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_4_fu_344_p2.read()[0].to_bool())? tmp_fu_350_p1.read(): frame_index_V.read());
}

void ddr_to_axis_reader::thread_tmp_10_fu_449_p1() {
    tmp_10_fu_449_p1 = esl_zext<64,10>(ap_reg_ppstg_indvar_reg_269_pp0_iter1.read());
}

void ddr_to_axis_reader::thread_tmp_12_fu_466_p1() {
    tmp_12_fu_466_p1 = j_reg_281.read().range(3-1, 0);
}

void ddr_to_axis_reader::thread_tmp_13_fu_498_p2() {
    tmp_13_fu_498_p2 = (!start_pos_fu_485_p3.read().is_01() || !end_pos_fu_492_p2.read().is_01())? sc_lv<1>(): (sc_biguint<6>(start_pos_fu_485_p3.read()) > sc_biguint<6>(end_pos_fu_492_p2.read()));
}

void ddr_to_axis_reader::thread_tmp_14_fu_504_p1() {
    tmp_14_fu_504_p1 = esl_zext<7,6>(start_pos_fu_485_p3.read());
}

void ddr_to_axis_reader::thread_tmp_15_fu_508_p1() {
    tmp_15_fu_508_p1 = esl_zext<7,6>(end_pos_fu_492_p2.read());
}

void ddr_to_axis_reader::thread_tmp_16_fu_512_p4() {
    tmp_16_fu_512_p4 = buffer_q0.read().range(0, 63);
}

void ddr_to_axis_reader::thread_tmp_17_fu_522_p2() {
    tmp_17_fu_522_p2 = (!tmp_14_fu_504_p1.read().is_01() || !tmp_15_fu_508_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_14_fu_504_p1.read()) - sc_biguint<7>(tmp_15_fu_508_p1.read()));
}

void ddr_to_axis_reader::thread_tmp_18_fu_528_p2() {
    tmp_18_fu_528_p2 = (tmp_14_fu_504_p1.read() ^ ap_const_lv7_3F);
}

void ddr_to_axis_reader::thread_tmp_19_fu_534_p2() {
    tmp_19_fu_534_p2 = (!tmp_15_fu_508_p1.read().is_01() || !tmp_14_fu_504_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_15_fu_508_p1.read()) - sc_biguint<7>(tmp_14_fu_504_p1.read()));
}

void ddr_to_axis_reader::thread_tmp_1_fu_292_p1() {
    tmp_1_fu_292_p1 = esl_zext<32,8>(frame_buffer_number.read());
}

void ddr_to_axis_reader::thread_tmp_20_fu_540_p3() {
    tmp_20_fu_540_p3 = (!tmp_13_fu_498_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_13_fu_498_p2.read()[0].to_bool())? tmp_17_fu_522_p2.read(): tmp_19_fu_534_p2.read());
}

void ddr_to_axis_reader::thread_tmp_21_fu_548_p3() {
    tmp_21_fu_548_p3 = (!tmp_13_fu_498_p2.read()[0].is_01())? sc_lv<64>(): ((tmp_13_fu_498_p2.read()[0].to_bool())? tmp_16_fu_512_p4.read(): buffer_q0.read());
}

void ddr_to_axis_reader::thread_tmp_22_fu_556_p3() {
    tmp_22_fu_556_p3 = (!tmp_13_fu_498_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_13_fu_498_p2.read()[0].to_bool())? tmp_18_fu_528_p2.read(): tmp_14_fu_504_p1.read());
}

void ddr_to_axis_reader::thread_tmp_23_fu_564_p2() {
    tmp_23_fu_564_p2 = (!ap_const_lv7_3F.is_01() || !tmp_20_fu_540_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_3F) - sc_biguint<7>(tmp_20_fu_540_p3.read()));
}

void ddr_to_axis_reader::thread_tmp_24_fu_570_p1() {
    tmp_24_fu_570_p1 = esl_zext<64,7>(tmp_22_fu_556_p3.read());
}

void ddr_to_axis_reader::thread_tmp_25_fu_580_p1() {
    tmp_25_fu_580_p1 = esl_zext<64,7>(tmp_23_reg_690.read());
}

void ddr_to_axis_reader::thread_tmp_26_fu_574_p2() {
    tmp_26_fu_574_p2 = (!tmp_24_fu_570_p1.read().is_01())? sc_lv<64>(): tmp_21_fu_548_p3.read() >> (unsigned short)tmp_24_fu_570_p1.read().to_uint();
}

void ddr_to_axis_reader::thread_tmp_27_fu_583_p2() {
    tmp_27_fu_583_p2 = (!tmp_25_fu_580_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_FFFFFFFFFFFFFFFF >> (unsigned short)tmp_25_fu_580_p1.read().to_uint();
}

void ddr_to_axis_reader::thread_tmp_28_fu_589_p2() {
    tmp_28_fu_589_p2 = (tmp_26_reg_695.read() & tmp_27_fu_583_p2.read());
}

void ddr_to_axis_reader::thread_tmp_3_phi_fu_233_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, update_intr_read_read_fu_154_p2.read())) {
            tmp_3_phi_fu_233_p4 = FRAME_BUFFER_NUMBER_r.read();
        } else if (!esl_seteq<1,1,1>(ap_const_lv1_0, update_intr_read_read_fu_154_p2.read())) {
            tmp_3_phi_fu_233_p4 = tmp_1_fu_292_p1.read();
        } else {
            tmp_3_phi_fu_233_p4 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        tmp_3_phi_fu_233_p4 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void ddr_to_axis_reader::thread_tmp_4_fu_344_p2() {
    tmp_4_fu_344_p2 = (!frame_index_V.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(frame_index_V.read() == ap_const_lv8_0);
}

void ddr_to_axis_reader::thread_tmp_6_fu_400_p4() {
    tmp_6_fu_400_p4 = FRAME_BUFFER_DIM_r.read().range(31, 12);
}

void ddr_to_axis_reader::thread_tmp_7_fu_414_p2() {
    tmp_7_fu_414_p2 = (!i_reg_258.read().is_01() || !tmp_9_fu_410_p1.read().is_01())? sc_lv<1>(): (sc_biguint<32>(i_reg_258.read()) < sc_biguint<32>(tmp_9_fu_410_p1.read()));
}

void ddr_to_axis_reader::thread_tmp_8_fu_426_p1() {
    tmp_8_fu_426_p1 = esl_sext<64,32>(offset1_reg_248.read());
}

void ddr_to_axis_reader::thread_tmp_9_fu_410_p1() {
    tmp_9_fu_410_p1 = esl_zext<32,20>(tmp_6_fu_400_p4.read());
}

void ddr_to_axis_reader::thread_tmp_fu_350_p1() {
    tmp_fu_350_p1 = tmp_3_phi_fu_233_p4.read().range(8-1, 0);
}

void ddr_to_axis_reader::thread_update_intr_read_read_fu_154_p2() {
    update_intr_read_read_fu_154_p2 =  (sc_lv<1>) (update_intr.read());
}

void ddr_to_axis_reader::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_414_p2.read()) && !(!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_414_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read())))) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else if ((!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_414_p2.read()) && !(!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_414_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read())))) {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            } else {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_12;
            break;
        case 4096 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_265.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_265.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_437_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_12;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_265.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_265.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_437_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_13;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_12;
            }
            break;
        case 8192 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && esl_seteq<1,1,1>(ap_reg_ppstg_exitcond_reg_671_pp1_iter1.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read())) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && esl_seteq<1,1,1>(ap_reg_ppstg_exitcond_reg_671_pp1_iter1.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read())) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_454_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read())))) {
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_13;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && esl_seteq<1,1,1>(ap_reg_ppstg_exitcond_reg_671_pp1_iter1.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read())) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && esl_seteq<1,1,1>(ap_reg_ppstg_exitcond_reg_671_pp1_iter1.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_V_TREADY.read())) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_454_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read())))) {
                ap_NS_fsm = ap_ST_st19_fsm_14;
            } else {
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_13;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
            break;
    }
}

void ddr_to_axis_reader::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"outStream_V_TDATA\" :  \"" << outStream_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_TVALID\" :  \"" << outStream_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_V_TREADY\" :  \"" << outStream_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWVALID\" :  \"" << m_axi_base_ddr_addr_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_AWREADY\" :  \"" << m_axi_base_ddr_addr_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWADDR\" :  \"" << m_axi_base_ddr_addr_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWID\" :  \"" << m_axi_base_ddr_addr_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWLEN\" :  \"" << m_axi_base_ddr_addr_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWSIZE\" :  \"" << m_axi_base_ddr_addr_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWBURST\" :  \"" << m_axi_base_ddr_addr_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWLOCK\" :  \"" << m_axi_base_ddr_addr_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWCACHE\" :  \"" << m_axi_base_ddr_addr_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWPROT\" :  \"" << m_axi_base_ddr_addr_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWQOS\" :  \"" << m_axi_base_ddr_addr_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWREGION\" :  \"" << m_axi_base_ddr_addr_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWUSER\" :  \"" << m_axi_base_ddr_addr_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WVALID\" :  \"" << m_axi_base_ddr_addr_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_WREADY\" :  \"" << m_axi_base_ddr_addr_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WDATA\" :  \"" << m_axi_base_ddr_addr_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WSTRB\" :  \"" << m_axi_base_ddr_addr_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WLAST\" :  \"" << m_axi_base_ddr_addr_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WID\" :  \"" << m_axi_base_ddr_addr_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WUSER\" :  \"" << m_axi_base_ddr_addr_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARVALID\" :  \"" << m_axi_base_ddr_addr_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_ARREADY\" :  \"" << m_axi_base_ddr_addr_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARADDR\" :  \"" << m_axi_base_ddr_addr_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARID\" :  \"" << m_axi_base_ddr_addr_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARLEN\" :  \"" << m_axi_base_ddr_addr_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARSIZE\" :  \"" << m_axi_base_ddr_addr_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARBURST\" :  \"" << m_axi_base_ddr_addr_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARLOCK\" :  \"" << m_axi_base_ddr_addr_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARCACHE\" :  \"" << m_axi_base_ddr_addr_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARPROT\" :  \"" << m_axi_base_ddr_addr_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARQOS\" :  \"" << m_axi_base_ddr_addr_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARREGION\" :  \"" << m_axi_base_ddr_addr_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARUSER\" :  \"" << m_axi_base_ddr_addr_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RVALID\" :  \"" << m_axi_base_ddr_addr_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_RREADY\" :  \"" << m_axi_base_ddr_addr_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RDATA\" :  \"" << m_axi_base_ddr_addr_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RLAST\" :  \"" << m_axi_base_ddr_addr_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RID\" :  \"" << m_axi_base_ddr_addr_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RUSER\" :  \"" << m_axi_base_ddr_addr_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RRESP\" :  \"" << m_axi_base_ddr_addr_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_BVALID\" :  \"" << m_axi_base_ddr_addr_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_BREADY\" :  \"" << m_axi_base_ddr_addr_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_BRESP\" :  \"" << m_axi_base_ddr_addr_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_BID\" :  \"" << m_axi_base_ddr_addr_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_BUSER\" :  \"" << m_axi_base_ddr_addr_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"frame_index_V\" :  \"" << frame_index_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

