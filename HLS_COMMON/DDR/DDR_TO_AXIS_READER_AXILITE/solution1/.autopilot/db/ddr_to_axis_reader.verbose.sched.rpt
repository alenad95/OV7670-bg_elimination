

================================================================
== Vivado HLS Report for 'ddr_to_axis_reader'
================================================================
* Date:           Wed Aug 23 16:40:28 2017

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        DDR_TO_AXIS_READER_AXILITE
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   8.00|      7.00|        1.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------------------+------+------+----------+-----------+-----------+------+----------+
        |                                |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |            Loop Name           |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------------------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1                        |     ?|     ?|      4620|          -|          -|     ?|    no    |
        | + memcpy.buffer.base_ddr_addr  |   513|   513|         3|          1|          1|   512|    yes   |
        | + Loop 1.2                     |  4097|  4097|         3|          1|          1|  4096|    yes   |
        +--------------------------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3
  * Pipeline-1: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 19
* Pipeline: 2
  Pipeline-0: II = 1, D = 3, States = { 13 14 15 }
  Pipeline-1: II = 1, D = 3, States = { 16 17 18 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / (tmp_7)
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	16  / (exitcond1)
	14  / (!exitcond1)
14 --> 
	15  / true
15 --> 
	13  / true
16 --> 
	19  / (exitcond)
	17  / (!exitcond)
17 --> 
	18  / true
18 --> 
	16  / true
19 --> 
	6  / true
* FSM state operations: 

 <State 1>: 4.29ns
ST_1: stg_20 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i8* %outStream_V), !map !7

ST_1: stg_21 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i64* %base_ddr_addr), !map !11

ST_1: stg_22 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i8* %frame_index_V), !map !17

ST_1: stg_23 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i32 %base_address), !map !21

ST_1: stg_24 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i32 %frame_buffer_dim), !map !27

ST_1: stg_25 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i32 %frame_buffer_offset), !map !31

ST_1: stg_26 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i8 %frame_buffer_number), !map !35

ST_1: stg_27 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i1 %update_intr), !map !39

ST_1: stg_28 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecTopModule([19 x i8]* @ddr_to_axis_reader_str) nounwind

ST_1: update_intr_read [1/1] 1.00ns
:9  %update_intr_read = call i1 @_ssdm_op_Read.s_axilite.i1(i1 %update_intr)

ST_1: frame_buffer_number_read [1/1] 1.00ns
:10  %frame_buffer_number_read = call i8 @_ssdm_op_Read.s_axilite.i8(i8 %frame_buffer_number)

ST_1: frame_buffer_offset_read [1/1] 1.00ns
:11  %frame_buffer_offset_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %frame_buffer_offset)

ST_1: frame_buffer_dim_read [1/1] 1.00ns
:12  %frame_buffer_dim_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %frame_buffer_dim)

ST_1: base_address_read [1/1] 1.00ns
:13  %base_address_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %base_address)

ST_1: buffer [1/1] 0.00ns
:14  %buffer = alloca [512 x i64], align 16

ST_1: stg_35 [1/1] 0.00ns
:15  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_36 [1/1] 0.00ns
:16  call void (...)* @_ssdm_op_SpecInterface(i32 %base_address, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_37 [1/1] 0.00ns
:17  call void (...)* @_ssdm_op_SpecInterface(i1 %update_intr, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: tmp_1 [1/1] 0.00ns
:18  %tmp_1 = zext i8 %frame_buffer_number_read to i32

ST_1: stg_39 [1/1] 0.00ns
:19  call void (...)* @_ssdm_op_SpecInterface(i8 %frame_buffer_number, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_40 [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecInterface(i32 %frame_buffer_offset, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_41 [1/1] 0.00ns
:21  call void (...)* @_ssdm_op_SpecInterface(i32 %frame_buffer_dim, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_42 [1/1] 0.00ns
:22  call void (...)* @_ssdm_op_SpecInterface(i8* %outStream_V, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_43 [1/1] 0.00ns
:23  call void (...)* @_ssdm_op_SpecInterface(i64* %base_ddr_addr, [6 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 128, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1) nounwind

ST_1: stg_44 [1/1] 0.00ns
:24  call void (...)* @_ssdm_op_SpecInterface(i8* %frame_index_V, [8 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_45 [1/1] 0.00ns
:25  call void (...)* @_ssdm_op_SpecMemCore([512 x i64]* %buffer, [1 x i8]* @p_str1, [12 x i8]* @p_str5, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_46 [1/1] 0.00ns
:26  call void (...)* @_ssdm_op_SpecReset(i32* @FRAME_BUFFER_DIM_r, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: FRAME_OFFSET_load [1/1] 0.00ns
:27  %FRAME_OFFSET_load = load i32* @FRAME_OFFSET, align 4

ST_1: stg_48 [1/1] 0.00ns
:28  call void (...)* @_ssdm_op_SpecReset(i32* @FRAME_OFFSET, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: FRAME_BUFFER_NUMBER_load [1/1] 0.00ns
:29  %FRAME_BUFFER_NUMBER_load = load i32* @FRAME_BUFFER_NUMBER_r, align 4

ST_1: stg_50 [1/1] 0.00ns
:30  call void (...)* @_ssdm_op_SpecReset(i32* @FRAME_BUFFER_NUMBER_r, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_51 [1/1] 0.00ns
:31  call void (...)* @_ssdm_op_SpecReset(i32* @BASE_ADDRESS_r, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_52 [1/1] 1.57ns
:32  br i1 %update_intr_read, label %1, label %._crit_edge

ST_1: stg_53 [1/1] 0.00ns
:0  store i32 %frame_buffer_dim_read, i32* @FRAME_BUFFER_DIM_r, align 4

ST_1: stg_54 [1/1] 0.00ns
:1  store i32 %tmp_1, i32* @FRAME_BUFFER_NUMBER_r, align 4

ST_1: stg_55 [1/1] 0.00ns
:2  store i32 %frame_buffer_offset_read, i32* @FRAME_OFFSET, align 4

ST_1: tmp_2 [1/1] 0.00ns
:3  %tmp_2 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %base_address_read, i32 3, i32 31)

ST_1: tmp_5 [1/1] 0.00ns
:4  %tmp_5 = zext i29 %tmp_2 to i32

ST_1: stg_58 [1/1] 0.00ns
:5  store i32 %tmp_5, i32* @BASE_ADDRESS_r, align 4

ST_1: stg_59 [1/1] 1.57ns
:6  br label %._crit_edge

ST_1: tmp_3 [1/1] 0.00ns (grouped into LUT with out node inner_index_V_1)
._crit_edge:1  %tmp_3 = phi i32 [ %tmp_1, %1 ], [ %FRAME_BUFFER_NUMBER_load, %0 ]

ST_1: t_V_2 [1/1] 0.00ns
._crit_edge:2  %t_V_2 = call i8 @_ssdm_op_Read.ap_none.i8P(i8* %frame_index_V)

ST_1: tmp_4 [1/1] 2.00ns
._crit_edge:3  %tmp_4 = icmp eq i8 %t_V_2, 0

ST_1: tmp [1/1] 0.00ns (grouped into LUT with out node inner_index_V_1)
._crit_edge:4  %tmp = trunc i32 %tmp_3 to i8

ST_1: t_V [1/1] 0.00ns (grouped into LUT with out node inner_index_V_1)
._crit_edge:5  %t_V = select i1 %tmp_4, i8 %tmp, i8 %t_V_2

ST_1: inner_index_V_1 [1/1] 1.72ns (out node of the LUT)
._crit_edge:6  %inner_index_V_1 = add i8 -1, %t_V


 <State 2>: 6.08ns
ST_2: i_op_assign [1/1] 0.00ns
._crit_edge:0  %i_op_assign = phi i32 [ %frame_buffer_offset_read, %1 ], [ %FRAME_OFFSET_load, %0 ]

ST_2: lhs_V [1/1] 0.00ns
._crit_edge:7  %lhs_V = zext i8 %inner_index_V_1 to i40

ST_2: rhs_V [1/1] 0.00ns
._crit_edge:8  %rhs_V = zext i32 %i_op_assign to i40

ST_2: r_V [3/3] 6.08ns
._crit_edge:9  %r_V = mul i40 %lhs_V, %rhs_V


 <State 3>: 6.08ns
ST_3: r_V [2/3] 6.08ns
._crit_edge:9  %r_V = mul i40 %lhs_V, %rhs_V


 <State 4>: 6.08ns
ST_4: r_V [1/3] 6.08ns
._crit_edge:9  %r_V = mul i40 %lhs_V, %rhs_V

ST_4: tmp_s [1/1] 0.00ns
._crit_edge:10  %tmp_s = call i32 @_ssdm_op_PartSelect.i32.i40.i32.i32(i40 %r_V, i32 3, i32 34)


 <State 5>: 4.01ns
ST_5: offset [1/1] 2.44ns
._crit_edge:11  %offset = add i32 134217728, %tmp_s

ST_5: stg_74 [1/1] 1.57ns
._crit_edge:12  br label %2


 <State 6>: 7.00ns
ST_6: offset1 [1/1] 0.00ns
:0  %offset1 = phi i32 [ %offset, %._crit_edge ], [ %offset_1, %5 ]

ST_6: i [1/1] 0.00ns
:1  %i = phi i32 [ 0, %._crit_edge ], [ %i_1, %5 ]

ST_6: FRAME_BUFFER_DIM_load [1/1] 0.00ns
:2  %FRAME_BUFFER_DIM_load = load i32* @FRAME_BUFFER_DIM_r, align 4

ST_6: tmp_6 [1/1] 0.00ns
:3  %tmp_6 = call i20 @_ssdm_op_PartSelect.i20.i32.i32.i32(i32 %FRAME_BUFFER_DIM_load, i32 12, i32 31)

ST_6: tmp_9 [1/1] 0.00ns
:4  %tmp_9 = zext i20 %tmp_6 to i32

ST_6: tmp_7 [1/1] 2.52ns
:5  %tmp_7 = icmp ult i32 %i, %tmp_9

ST_6: i_1 [1/1] 2.44ns
:6  %i_1 = add nsw i32 %i, 1

ST_6: stg_82 [1/1] 0.00ns
:7  br i1 %tmp_7, label %3, label %6

ST_6: tmp_8 [1/1] 0.00ns
:0  %tmp_8 = sext i32 %offset1 to i64

ST_6: base_ddr_addr_addr [1/1] 0.00ns
:1  %base_ddr_addr_addr = getelementptr inbounds i64* %base_ddr_addr, i64 %tmp_8

ST_6: base_ddr_addr_addr_1_rd_req [7/7] 7.00ns
:2  %base_ddr_addr_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)

ST_6: stg_86 [1/1] 0.00ns
:0  ret void


 <State 7>: 7.00ns
ST_7: base_ddr_addr_addr_1_rd_req [6/7] 7.00ns
:2  %base_ddr_addr_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)


 <State 8>: 7.00ns
ST_8: base_ddr_addr_addr_1_rd_req [5/7] 7.00ns
:2  %base_ddr_addr_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)


 <State 9>: 7.00ns
ST_9: base_ddr_addr_addr_1_rd_req [4/7] 7.00ns
:2  %base_ddr_addr_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)


 <State 10>: 7.00ns
ST_10: base_ddr_addr_addr_1_rd_req [3/7] 7.00ns
:2  %base_ddr_addr_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)


 <State 11>: 7.00ns
ST_11: base_ddr_addr_addr_1_rd_req [2/7] 7.00ns
:2  %base_ddr_addr_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)


 <State 12>: 7.00ns
ST_12: base_ddr_addr_addr_1_rd_req [1/7] 7.00ns
:2  %base_ddr_addr_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)

ST_12: stg_93 [1/1] 1.57ns
:3  br label %burst.rd.header


 <State 13>: 3.64ns
ST_13: indvar [1/1] 0.00ns
burst.rd.header:0  %indvar = phi i10 [ 0, %3 ], [ %indvar_next, %burst.rd.body ]

ST_13: exitcond1 [1/1] 2.07ns
burst.rd.header:1  %exitcond1 = icmp eq i10 %indvar, -512

ST_13: indvar_next [1/1] 1.84ns
burst.rd.header:2  %indvar_next = add i10 %indvar, 1

ST_13: stg_97 [1/1] 1.57ns
burst.rd.header:3  br i1 %exitcond1, label %burst.rd.end, label %burst.rd.body


 <State 14>: 7.00ns
ST_14: base_ddr_addr_addr_read [1/1] 7.00ns
burst.rd.body:4  %base_ddr_addr_addr_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %base_ddr_addr_addr)


 <State 15>: 2.71ns
ST_15: empty [1/1] 0.00ns
burst.rd.body:0  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 512, i64 512, i64 512)

ST_15: burstread_rbegin [1/1] 0.00ns
burst.rd.body:1  %burstread_rbegin = call i32 (...)* @_ssdm_op_SpecRegionBegin([17 x i8]* @burstread_OC_region_str) nounwind

ST_15: stg_101 [1/1] 0.00ns
burst.rd.body:2  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str7)

ST_15: empty_11 [1/1] 0.00ns
burst.rd.body:3  %empty_11 = call i32 (...)* @_ssdm_op_SpecLoopName([28 x i8]* @memcpy_OC_buffer_OC_base_ddr_a) nounwind

ST_15: tmp_10 [1/1] 0.00ns
burst.rd.body:5  %tmp_10 = zext i10 %indvar to i64

ST_15: buffer_addr [1/1] 0.00ns
burst.rd.body:6  %buffer_addr = getelementptr [512 x i64]* %buffer, i64 0, i64 %tmp_10

ST_15: stg_105 [1/1] 2.71ns
burst.rd.body:7  store i64 %base_ddr_addr_addr_read, i64* %buffer_addr, align 8

ST_15: burstread_rend [1/1] 0.00ns
burst.rd.body:8  %burstread_rend = call i32 (...)* @_ssdm_op_SpecRegionEnd([17 x i8]* @burstread_OC_region_str, i32 %burstread_rbegin) nounwind

ST_15: stg_107 [1/1] 0.00ns
burst.rd.body:9  br label %burst.rd.header


 <State 16>: 3.55ns
ST_16: j [1/1] 0.00ns
burst.rd.end:0  %j = phi i13 [ %j_1, %4 ], [ 0, %burst.rd.header ]

ST_16: exitcond [1/1] 2.18ns
burst.rd.end:1  %exitcond = icmp eq i13 %j, -4096

ST_16: j_1 [1/1] 1.96ns
burst.rd.end:2  %j_1 = add i13 %j, 1

ST_16: stg_111 [1/1] 0.00ns
burst.rd.end:3  br i1 %exitcond, label %5, label %4

ST_16: tmp_12 [1/1] 0.00ns
:3  %tmp_12 = trunc i13 %j to i3

ST_16: gepindex_cast [1/1] 0.00ns
:4  %gepindex_cast = call i9 @_ssdm_op_PartSelect.i9.i13.i32.i32(i13 %j, i32 3, i32 11)

ST_16: gepindex2_cast [1/1] 0.00ns
:5  %gepindex2_cast = zext i9 %gepindex_cast to i64

ST_16: buffer_addr_1 [1/1] 0.00ns
:6  %buffer_addr_1 = getelementptr [512 x i64]* %buffer, i64 0, i64 %gepindex2_cast

ST_16: buffer_load [2/2] 2.71ns
:7  %buffer_load = load i64* %buffer_addr_1, align 8


 <State 17>: 6.28ns
ST_17: buffer_load [1/2] 2.71ns
:7  %buffer_load = load i64* %buffer_addr_1, align 8

ST_17: start_pos [1/1] 0.00ns
:8  %start_pos = call i6 @_ssdm_op_BitConcatenate.i6.i3.i3(i3 %tmp_12, i3 0)

ST_17: end_pos [1/1] 0.00ns
:9  %end_pos = or i6 %start_pos, 7

ST_17: tmp_13 [1/1] 1.94ns
:10  %tmp_13 = icmp ugt i6 %start_pos, %end_pos

ST_17: tmp_14 [1/1] 0.00ns
:11  %tmp_14 = zext i6 %start_pos to i7

ST_17: tmp_15 [1/1] 0.00ns
:12  %tmp_15 = zext i6 %end_pos to i7

ST_17: tmp_16 [1/1] 0.00ns (grouped into LUT with out node tmp_26)
:13  %tmp_16 = call i64 @llvm.part.select.i64(i64 %buffer_load, i32 63, i32 0)

ST_17: tmp_17 [1/1] 1.72ns
:14  %tmp_17 = sub i7 %tmp_14, %tmp_15

ST_17: tmp_18 [1/1] 0.00ns (grouped into LUT with out node tmp_26)
:15  %tmp_18 = xor i7 %tmp_14, 63

ST_17: tmp_19 [1/1] 1.72ns
:16  %tmp_19 = sub i7 %tmp_15, %tmp_14

ST_17: tmp_20 [1/1] 0.00ns (grouped into LUT with out node tmp_23)
:17  %tmp_20 = select i1 %tmp_13, i7 %tmp_17, i7 %tmp_19

ST_17: tmp_21 [1/1] 0.00ns (grouped into LUT with out node tmp_26)
:18  %tmp_21 = select i1 %tmp_13, i64 %tmp_16, i64 %buffer_load

ST_17: tmp_22 [1/1] 0.00ns (grouped into LUT with out node tmp_26)
:19  %tmp_22 = select i1 %tmp_13, i7 %tmp_18, i7 %tmp_14

ST_17: tmp_23 [1/1] 1.72ns (out node of the LUT)
:20  %tmp_23 = sub i7 63, %tmp_20

ST_17: tmp_24 [1/1] 0.00ns (grouped into LUT with out node tmp_26)
:21  %tmp_24 = zext i7 %tmp_22 to i64

ST_17: tmp_26 [1/1] 3.57ns (out node of the LUT)
:23  %tmp_26 = lshr i64 %tmp_21, %tmp_24


 <State 18>: 1.37ns
ST_18: empty_12 [1/1] 0.00ns
:0  %empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4096, i64 4096, i64 4096)

ST_18: tmp_11 [1/1] 0.00ns
:1  %tmp_11 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6)

ST_18: stg_135 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_18: tmp_25 [1/1] 0.00ns (grouped into LUT with out node tmp_28)
:22  %tmp_25 = zext i7 %tmp_23 to i64

ST_18: tmp_27 [1/1] 0.00ns (grouped into LUT with out node tmp_28)
:24  %tmp_27 = lshr i64 -1, %tmp_25

ST_18: tmp_28 [1/1] 1.37ns (out node of the LUT)
:25  %tmp_28 = and i64 %tmp_26, %tmp_27

ST_18: tmp_29 [1/1] 0.00ns
:26  %tmp_29 = trunc i64 %tmp_28 to i8

ST_18: stg_140 [1/1] 0.00ns
:27  call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outStream_V, i8 %tmp_29)

ST_18: empty_13 [1/1] 0.00ns
:28  %empty_13 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_11)

ST_18: stg_142 [1/1] 0.00ns
:29  br label %burst.rd.end


 <State 19>: 2.44ns
ST_19: offset_1 [1/1] 2.44ns
:0  %offset_1 = add i32 %offset1, 512

ST_19: stg_144 [1/1] 0.00ns
:1  br label %2



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8ns, clock uncertainty: 1ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
