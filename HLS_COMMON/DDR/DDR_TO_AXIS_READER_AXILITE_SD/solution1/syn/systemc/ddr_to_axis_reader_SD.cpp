// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "ddr_to_axis_reader_SD.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic ddr_to_axis_reader_SD::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic ddr_to_axis_reader_SD::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_st1_fsm_0 = "1";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_st2_fsm_1 = "10";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_st3_fsm_2 = "100";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_st4_fsm_3 = "1000";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_st5_fsm_4 = "10000";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_st6_fsm_5 = "100000";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_pp0_stg0_fsm_8 = "100000000";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_st12_fsm_9 = "1000000000";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_pp1_stg0_fsm_10 = "10000000000";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_pp2_stg0_fsm_11 = "100000000000";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_st17_fsm_12 = "1000000000000";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> ddr_to_axis_reader_SD::ap_const_lv1_1 = "1";
const sc_lv<1> ddr_to_axis_reader_SD::ap_const_lv1_0 = "0";
const sc_lv<8> ddr_to_axis_reader_SD::ap_const_lv8_0 = "00000000";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_A = "1010";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_B = "1011";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_1 = "1";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_8 = "1000";
const int ddr_to_axis_reader_SD::C_S_AXI_DATA_WIDTH = "100000";
const int ddr_to_axis_reader_SD::C_M_AXI_DATA_WIDTH = "100000";
const int ddr_to_axis_reader_SD::C_M_AXI_BASE_DDR_ADDR_TARGET_ADDR = "0000000000000000000000000000000000000000000000000000000000000000";
const int ddr_to_axis_reader_SD::C_M_AXI_BASE_DDR_ADDR_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int ddr_to_axis_reader_SD::C_M_AXI_BASE_DDR_ADDR_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int ddr_to_axis_reader_SD::C_M_AXI_BASE_DDR_ADDR_CACHE_VALUE = "11";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_C = "1100";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_7 = "111";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_9 = "1001";
const sc_lv<20> ddr_to_axis_reader_SD::ap_const_lv20_0 = "00000000000000000000";
const sc_lv<10> ddr_to_axis_reader_SD::ap_const_lv10_0 = "0000000000";
const sc_lv<13> ddr_to_axis_reader_SD::ap_const_lv13_0 = "0000000000000";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_200 = "1000000000";
const sc_lv<3> ddr_to_axis_reader_SD::ap_const_lv3_0 = "000";
const sc_lv<2> ddr_to_axis_reader_SD::ap_const_lv2_0 = "00";
const sc_lv<4> ddr_to_axis_reader_SD::ap_const_lv4_0 = "0000";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_3F = "111111";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_3 = "11";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_1F = "11111";
const sc_lv<20> ddr_to_axis_reader_SD::ap_const_lv20_1 = "1";
const sc_lv<10> ddr_to_axis_reader_SD::ap_const_lv10_200 = "1000000000";
const sc_lv<10> ddr_to_axis_reader_SD::ap_const_lv10_1 = "1";
const sc_lv<13> ddr_to_axis_reader_SD::ap_const_lv13_1FFF = "1111111111111";
const sc_lv<14> ddr_to_axis_reader_SD::ap_const_lv14_4 = "100";
const sc_lv<10> ddr_to_axis_reader_SD::ap_const_lv10_3FC = "1111111100";
const sc_lv<14> ddr_to_axis_reader_SD::ap_const_lv14_204 = "1000000100";
const sc_lv<15> ddr_to_axis_reader_SD::ap_const_lv15_7FFC = "111111111111100";
const sc_lv<15> ddr_to_axis_reader_SD::ap_const_lv15_1FF = "111111111";
const sc_lv<13> ddr_to_axis_reader_SD::ap_const_lv13_1 = "1";
const sc_lv<6> ddr_to_axis_reader_SD::ap_const_lv6_7 = "111";
const sc_lv<7> ddr_to_axis_reader_SD::ap_const_lv7_3F = "111111";
const sc_lv<64> ddr_to_axis_reader_SD::ap_const_lv64_FFFFFFFFFFFFFFFF = "1111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_2 = "10";
const sc_lv<13> ddr_to_axis_reader_SD::ap_const_lv13_2 = "10";
const sc_lv<3> ddr_to_axis_reader_SD::ap_const_lv3_1 = "1";
const sc_lv<64> ddr_to_axis_reader_SD::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";

ddr_to_axis_reader_SD::ddr_to_axis_reader_SD(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U = new ddr_to_axis_reader_SD_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("ddr_to_axis_reader_SD_AXILiteS_s_axi_U");
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->ACLK(ap_clk);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->ap_start(ap_start);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->interrupt(interrupt);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->ap_ready(ap_ready);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->ap_done(ap_done);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->ap_idle(ap_idle);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->base_address(base_address);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->frame_buffer_dim(frame_buffer_dim);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->frame_buffer_offset(frame_buffer_offset);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->frame_buffer_number(frame_buffer_number);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->update_intr(update_intr);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->stereo_enabler(stereo_enabler);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U = new ddr_to_axis_reader_SD_base_ddr_addr_m_axi<64,32,5,16,16,16,16,C_M_AXI_BASE_DDR_ADDR_ID_WIDTH,C_M_AXI_BASE_DDR_ADDR_ADDR_WIDTH,C_M_AXI_BASE_DDR_ADDR_DATA_WIDTH,C_M_AXI_BASE_DDR_ADDR_AWUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_ARUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_WUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_RUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_BUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_TARGET_ADDR,C_M_AXI_BASE_DDR_ADDR_USER_VALUE,C_M_AXI_BASE_DDR_ADDR_PROT_VALUE,C_M_AXI_BASE_DDR_ADDR_CACHE_VALUE>("ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U");
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWVALID(m_axi_base_ddr_addr_AWVALID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWREADY(m_axi_base_ddr_addr_AWREADY);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWADDR(m_axi_base_ddr_addr_AWADDR);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWID(m_axi_base_ddr_addr_AWID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWLEN(m_axi_base_ddr_addr_AWLEN);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWSIZE(m_axi_base_ddr_addr_AWSIZE);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWBURST(m_axi_base_ddr_addr_AWBURST);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWLOCK(m_axi_base_ddr_addr_AWLOCK);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWCACHE(m_axi_base_ddr_addr_AWCACHE);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWPROT(m_axi_base_ddr_addr_AWPROT);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWQOS(m_axi_base_ddr_addr_AWQOS);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWREGION(m_axi_base_ddr_addr_AWREGION);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWUSER(m_axi_base_ddr_addr_AWUSER);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->WVALID(m_axi_base_ddr_addr_WVALID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->WREADY(m_axi_base_ddr_addr_WREADY);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->WDATA(m_axi_base_ddr_addr_WDATA);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->WSTRB(m_axi_base_ddr_addr_WSTRB);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->WLAST(m_axi_base_ddr_addr_WLAST);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->WID(m_axi_base_ddr_addr_WID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->WUSER(m_axi_base_ddr_addr_WUSER);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARVALID(m_axi_base_ddr_addr_ARVALID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARREADY(m_axi_base_ddr_addr_ARREADY);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARADDR(m_axi_base_ddr_addr_ARADDR);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARID(m_axi_base_ddr_addr_ARID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARLEN(m_axi_base_ddr_addr_ARLEN);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARSIZE(m_axi_base_ddr_addr_ARSIZE);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARBURST(m_axi_base_ddr_addr_ARBURST);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARLOCK(m_axi_base_ddr_addr_ARLOCK);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARCACHE(m_axi_base_ddr_addr_ARCACHE);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARPROT(m_axi_base_ddr_addr_ARPROT);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARQOS(m_axi_base_ddr_addr_ARQOS);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARREGION(m_axi_base_ddr_addr_ARREGION);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARUSER(m_axi_base_ddr_addr_ARUSER);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->RVALID(m_axi_base_ddr_addr_RVALID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->RREADY(m_axi_base_ddr_addr_RREADY);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->RDATA(m_axi_base_ddr_addr_RDATA);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->RLAST(m_axi_base_ddr_addr_RLAST);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->RID(m_axi_base_ddr_addr_RID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->RUSER(m_axi_base_ddr_addr_RUSER);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->RRESP(m_axi_base_ddr_addr_RRESP);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->BVALID(m_axi_base_ddr_addr_BVALID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->BREADY(m_axi_base_ddr_addr_BREADY);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->BRESP(m_axi_base_ddr_addr_BRESP);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->BID(m_axi_base_ddr_addr_BID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->BUSER(m_axi_base_ddr_addr_BUSER);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ACLK(ap_clk);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARESET(ap_rst_n_inv);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ACLK_EN(ap_var_for_const0);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARVALID(base_ddr_addr_ARVALID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARREADY(base_ddr_addr_ARREADY);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARADDR(base_ddr_addr_ARADDR);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARID(ap_var_for_const1);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARLEN(ap_var_for_const2);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARSIZE(ap_var_for_const3);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARLOCK(ap_var_for_const4);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARCACHE(ap_var_for_const5);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARQOS(ap_var_for_const5);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARPROT(ap_var_for_const3);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARUSER(ap_var_for_const1);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARBURST(ap_var_for_const4);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARREGION(ap_var_for_const5);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_RVALID(base_ddr_addr_RVALID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_RREADY(base_ddr_addr_RREADY);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_RDATA(base_ddr_addr_RDATA);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_RID(base_ddr_addr_RID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_RUSER(base_ddr_addr_RUSER);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_RRESP(base_ddr_addr_RRESP);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_RLAST(base_ddr_addr_RLAST);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWVALID(ap_var_for_const6);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWREADY(base_ddr_addr_AWREADY);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWADDR(ap_var_for_const7);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWID(ap_var_for_const1);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWLEN(ap_var_for_const7);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWSIZE(ap_var_for_const3);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWLOCK(ap_var_for_const4);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWCACHE(ap_var_for_const5);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWQOS(ap_var_for_const5);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWPROT(ap_var_for_const3);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWUSER(ap_var_for_const1);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWBURST(ap_var_for_const4);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWREGION(ap_var_for_const5);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_WVALID(ap_var_for_const6);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_WREADY(base_ddr_addr_WREADY);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_WDATA(ap_var_for_const8);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_WID(ap_var_for_const1);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_WUSER(ap_var_for_const1);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_WLAST(ap_var_for_const6);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_WSTRB(ap_var_for_const9);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_BVALID(base_ddr_addr_BVALID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_BREADY(ap_var_for_const6);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_BRESP(base_ddr_addr_BRESP);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_BID(base_ddr_addr_BID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_BUSER(base_ddr_addr_BUSER);
    buffer_U = new ddr_to_axis_reader_SD_buffer("buffer_U");
    buffer_U->clk(ap_clk);
    buffer_U->reset(ap_rst_n_inv);
    buffer_U->address0(buffer_address0);
    buffer_U->ce0(buffer_ce0);
    buffer_U->q0(buffer_q0);
    buffer_U->address1(buffer_address1);
    buffer_U->ce1(buffer_ce1);
    buffer_U->we1(buffer_we1);
    buffer_U->d1(base_ddr_addr_addr_read_reg_1413);
    buffer_U->q1(buffer_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_BASE_ADDRESS_flag_phi_fu_356_p4);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( guard_variable_for_ddr_to_axis_3_load_fu_498_p1 );

    SC_METHOD(thread_BASE_ADDRESS_loc_phi_fu_367_p4);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( base_address );
    sensitive << ( BASE_ADDRESS_r );
    sensitive << ( guard_variable_for_ddr_to_axis_3_load_fu_498_p1 );

    SC_METHOD(thread_FRAME_BUFFER_DIM_flag_phi_fu_293_p4);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( guard_variable_for_ddr_to_axis_load_fu_453_p1 );

    SC_METHOD(thread_FRAME_BUFFER_DIM_loc_phi_fu_304_p4);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( frame_buffer_dim );
    sensitive << ( FRAME_BUFFER_DIM_r );
    sensitive << ( guard_variable_for_ddr_to_axis_load_fu_453_p1 );

    SC_METHOD(thread_FRAME_BUFFER_NUMBER_flag_phi_fu_335_p4);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( guard_variable_for_ddr_to_axis_2_load_fu_483_p1 );

    SC_METHOD(thread_FRAME_BUFFER_NUMBER_loc_phi_fu_346_p4);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( frame_buffer_number );
    sensitive << ( FRAME_BUFFER_NUMBER_r );
    sensitive << ( guard_variable_for_ddr_to_axis_2_load_fu_483_p1 );

    SC_METHOD(thread_FRAME_OFFSET_flag_phi_fu_314_p4);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( guard_variable_for_ddr_to_axis_1_load_fu_468_p1 );

    SC_METHOD(thread_FRAME_OFFSET_loc_phi_fu_325_p4);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( frame_buffer_offset );
    sensitive << ( FRAME_OFFSET );
    sensitive << ( guard_variable_for_ddr_to_axis_1_load_fu_468_p1 );

    SC_METHOD(thread_addrCmp1_fu_813_p2);
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_10 );
    sensitive << ( ap_reg_ppiten_pp1_it1 );
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( tmp_10_reg_1418 );
    sensitive << ( tmp_18_reg_1422 );
    sensitive << ( tmp_10_fu_717_p3 );
    sensitive << ( ap_sig_ioackin_outStream_channel_1_V_TREADY );
    sensitive << ( tmp_18_fu_729_p2 );
    sensitive << ( mem_index_gep_fu_797_p2 );

    SC_METHOD(thread_addrCmp_fu_807_p2);
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_10 );
    sensitive << ( ap_reg_ppiten_pp1_it1 );
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( tmp_10_reg_1418 );
    sensitive << ( tmp_18_reg_1422 );
    sensitive << ( tmp_10_fu_717_p3 );
    sensitive << ( ap_sig_ioackin_outStream_channel_1_V_TREADY );
    sensitive << ( tmp_18_fu_729_p2 );
    sensitive << ( tmp_53_fu_783_p4 );

    SC_METHOD(thread_adjSize55_cast_fu_803_p1);
    sensitive << ( mem_index_gep_fu_797_p2 );

    SC_METHOD(thread_adjSize_fu_793_p1);
    sensitive << ( tmp_53_fu_783_p4 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond1_fu_655_p2 );
    sensitive << ( ap_sig_ioackin_base_ddr_addr_ARREADY );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond1_fu_655_p2 );
    sensitive << ( ap_sig_ioackin_base_ddr_addr_ARREADY );

    SC_METHOD(thread_ap_reg_phiprechg_j_1_reg_418pp1_it0);

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_118);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_140);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_150);
    sensitive << ( ap_sig_cseq_ST_pp2_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp2_it1 );
    sensitive << ( tmp_reg_1451 );

    SC_METHOD(thread_ap_sig_158);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_163);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond1_fu_655_p2 );

    SC_METHOD(thread_ap_sig_169);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_300);
    sensitive << ( exitcond_reg_1404 );
    sensitive << ( base_ddr_addr_RVALID );

    SC_METHOD(thread_ap_sig_374);
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_10 );
    sensitive << ( ap_reg_ppiten_pp1_it1 );
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( tmp_10_reg_1418 );
    sensitive << ( tmp_18_reg_1422 );
    sensitive << ( tmp_10_fu_717_p3 );
    sensitive << ( ap_sig_ioackin_outStream_channel_1_V_TREADY );

    SC_METHOD(thread_ap_sig_403);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_410);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_422);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_570);
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_10 );
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( tmp_10_fu_717_p3 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_8);
    sensitive << ( ap_sig_169 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp1_stg0_fsm_10);
    sensitive << ( ap_sig_118 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp2_stg0_fsm_11);
    sensitive << ( ap_sig_140 );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_9);
    sensitive << ( ap_sig_422 );

    SC_METHOD(thread_ap_sig_cseq_ST_st17_fsm_12);
    sensitive << ( ap_sig_403 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_30 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_158 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_410 );

    SC_METHOD(thread_ap_sig_ioackin_base_ddr_addr_ARREADY);
    sensitive << ( base_ddr_addr_ARREADY );
    sensitive << ( ap_reg_ioackin_base_ddr_addr_ARREADY );

    SC_METHOD(thread_ap_sig_ioackin_outStream_channel_1_V_TREADY);
    sensitive << ( outStream_channel_1_V_TREADY );
    sensitive << ( ap_reg_ioackin_outStream_channel_1_V_TREADY );

    SC_METHOD(thread_ap_sig_ioackin_outstream_channel_2_V_TREADY);
    sensitive << ( outstream_channel_2_V_TREADY );
    sensitive << ( ap_reg_ioackin_outstream_channel_2_V_TREADY );

    SC_METHOD(thread_base_ddr_addr_ARADDR);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond1_fu_655_p2 );
    sensitive << ( tmp_1_fu_666_p1 );
    sensitive << ( ap_reg_ioackin_base_ddr_addr_ARREADY );

    SC_METHOD(thread_base_ddr_addr_ARVALID);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond1_fu_655_p2 );
    sensitive << ( ap_reg_ioackin_base_ddr_addr_ARREADY );

    SC_METHOD(thread_base_ddr_addr_RREADY);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_8 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_1404 );
    sensitive << ( ap_sig_300 );

    SC_METHOD(thread_base_ddr_addr_blk_n_AR);
    sensitive << ( m_axi_base_ddr_addr_ARREADY );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond1_fu_655_p2 );

    SC_METHOD(thread_base_ddr_addr_blk_n_R);
    sensitive << ( m_axi_base_ddr_addr_RVALID );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_8 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_1404 );

    SC_METHOD(thread_buffer_address0);
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_10 );
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( ap_sig_cseq_ST_pp2_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp2_it0 );
    sensitive << ( tmp_10_fu_717_p3 );
    sensitive << ( tmp_18_fu_729_p2 );
    sensitive << ( gepindex264_cast_fu_761_p1 );
    sensitive << ( gepindex2_cast_fu_841_p1 );
    sensitive << ( gepindex276_cast_fu_1086_p1 );

    SC_METHOD(thread_buffer_address1);
    sensitive << ( ap_sig_cseq_ST_pp2_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp2_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( tmp_6_fu_712_p1 );
    sensitive << ( gepindex276_cast_fu_1086_p1 );

    SC_METHOD(thread_buffer_ce0);
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_10 );
    sensitive << ( ap_reg_ppiten_pp1_it1 );
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( tmp_10_reg_1418 );
    sensitive << ( tmp_18_reg_1422 );
    sensitive << ( ap_sig_cseq_ST_pp2_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp2_it1 );
    sensitive << ( ap_reg_ppiten_pp2_it0 );
    sensitive << ( tmp_reg_1451 );
    sensitive << ( tmp_10_fu_717_p3 );
    sensitive << ( ap_sig_ioackin_outStream_channel_1_V_TREADY );
    sensitive << ( tmp_18_fu_729_p2 );
    sensitive << ( ap_sig_ioackin_outstream_channel_2_V_TREADY );

    SC_METHOD(thread_buffer_ce1);
    sensitive << ( ap_sig_cseq_ST_pp2_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp2_it1 );
    sensitive << ( ap_reg_ppiten_pp2_it0 );
    sensitive << ( tmp_reg_1451 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_sig_300 );
    sensitive << ( ap_sig_ioackin_outStream_channel_1_V_TREADY );
    sensitive << ( ap_sig_ioackin_outstream_channel_2_V_TREADY );

    SC_METHOD(thread_buffer_we1);
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_sig_300 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_1404_pp0_iter1 );

    SC_METHOD(thread_end_pos1_fu_1226_p2);
    sensitive << ( start_pos2_fu_1218_p3 );

    SC_METHOD(thread_end_pos2_fu_965_p2);
    sensitive << ( start_pos_fu_958_p3 );

    SC_METHOD(thread_end_pos3_fu_859_p2);
    sensitive << ( start_pos3_fu_852_p3 );

    SC_METHOD(thread_end_pos_fu_1114_p2);
    sensitive << ( start_pos1_fu_1107_p3 );

    SC_METHOD(thread_exitcond1_fu_655_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond1_fu_655_p2 );
    sensitive << ( tmp_5_reg_1385 );
    sensitive << ( ap_sig_ioackin_base_ddr_addr_ARREADY );
    sensitive << ( i_reg_384 );

    SC_METHOD(thread_exitcond_fu_700_p2);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_8 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_300 );
    sensitive << ( indvar_phi_fu_399_p4 );

    SC_METHOD(thread_frame_buffer_dim_FRAME_BUFFER_s_fu_533_p0);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( update_intr );

    SC_METHOD(thread_frame_buffer_dim_FRAME_BUFFER_s_fu_533_p3);
    sensitive << ( frame_buffer_dim );
    sensitive << ( FRAME_BUFFER_DIM_loc_phi_fu_304_p4 );
    sensitive << ( frame_buffer_dim_FRAME_BUFFER_s_fu_533_p0 );

    SC_METHOD(thread_frame_buffer_offset_FRAME_OFFS_fu_579_p0);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( update_intr );

    SC_METHOD(thread_frame_buffer_offset_FRAME_OFFS_fu_579_p3);
    sensitive << ( frame_buffer_offset );
    sensitive << ( FRAME_OFFSET_loc_phi_fu_325_p4 );
    sensitive << ( frame_buffer_offset_FRAME_OFFS_fu_579_p0 );

    SC_METHOD(thread_gepindex1_fu_825_p3);
    sensitive << ( addrCmp_fu_807_p2 );
    sensitive << ( gepindex_fu_819_p2 );

    SC_METHOD(thread_gepindex264_cast_fu_761_p1);
    sensitive << ( gepindex62_cast_fu_751_p4 );

    SC_METHOD(thread_gepindex276_cast_fu_1086_p1);
    sensitive << ( gepindex74_cast_fu_1076_p4 );

    SC_METHOD(thread_gepindex2_cast_fu_841_p1);
    sensitive << ( gepindex2_fu_833_p3 );

    SC_METHOD(thread_gepindex2_fu_833_p3);
    sensitive << ( addrCmp1_fu_813_p2 );
    sensitive << ( gepindex1_fu_825_p3 );

    SC_METHOD(thread_gepindex62_cast_fu_751_p4);
    sensitive << ( j_reg_407 );

    SC_METHOD(thread_gepindex74_cast_fu_1076_p4);
    sensitive << ( j1_reg_428 );

    SC_METHOD(thread_gepindex_fu_819_p2);
    sensitive << ( adjSize55_cast_fu_803_p1 );

    SC_METHOD(thread_grp_fu_439_p4);
    sensitive << ( buffer_q0 );

    SC_METHOD(thread_guard_variable_for_ddr_to_axis_1_load_fu_468_p1);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( guard_variable_for_ddr_to_axis );

    SC_METHOD(thread_guard_variable_for_ddr_to_axis_2_load_fu_483_p1);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( guard_variable_for_ddr_to_axis_1 );

    SC_METHOD(thread_guard_variable_for_ddr_to_axis_3_load_fu_498_p1);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( guard_variable_for_ddr_to_axis_3 );

    SC_METHOD(thread_guard_variable_for_ddr_to_axis_load_fu_453_p1);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( guard_variable_for_ddr_to_axis_2 );

    SC_METHOD(thread_i_1_fu_660_p2);
    sensitive << ( i_reg_384 );

    SC_METHOD(thread_indvar_next_fu_706_p2);
    sensitive << ( indvar_phi_fu_399_p4 );

    SC_METHOD(thread_indvar_phi_fu_399_p4);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_8 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_1404 );
    sensitive << ( indvar_reg_395 );
    sensitive << ( indvar_next_reg_1408 );

    SC_METHOD(thread_j_1_phi_fu_421_p4);
    sensitive << ( j_reg_407 );
    sensitive << ( tmp_18_fu_729_p2 );
    sensitive << ( j_3_fu_772_p2 );
    sensitive << ( ap_reg_phiprechg_j_1_reg_418pp1_it0 );
    sensitive << ( ap_sig_570 );

    SC_METHOD(thread_j_2_fu_1101_p2);
    sensitive << ( j1_reg_428 );

    SC_METHOD(thread_j_3_fu_772_p2);
    sensitive << ( j_reg_407 );

    SC_METHOD(thread_j_4_fu_846_p2);
    sensitive << ( j_1_phi_fu_421_p4 );

    SC_METHOD(thread_mem_index_gep_fu_797_p2);
    sensitive << ( adjSize_fu_793_p1 );

    SC_METHOD(thread_offset_1_fu_1335_p2);
    sensitive << ( offset1_reg_374 );

    SC_METHOD(thread_offset_fu_615_p2);
    sensitive << ( tmp_9_fu_611_p1 );
    sensitive << ( tmp_7_BASE_ADDRESS_loc_fu_587_p3 );

    SC_METHOD(thread_outStream_channel_1_V_TDATA);
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_10 );
    sensitive << ( ap_reg_ppiten_pp1_it1 );
    sensitive << ( tmp_10_reg_1418 );
    sensitive << ( tmp_18_reg_1422 );
    sensitive << ( ap_sig_cseq_ST_pp2_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp2_it1 );
    sensitive << ( tmp_reg_1451 );
    sensitive << ( tmp_88_fu_953_p1 );
    sensitive << ( tmp_70_fu_1059_p1 );
    sensitive << ( tmp_34_fu_1208_p1 );

    SC_METHOD(thread_outStream_channel_1_V_TDATA_blk_n);
    sensitive << ( outStream_channel_1_V_TREADY );
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_10 );
    sensitive << ( ap_reg_ppiten_pp1_it1 );
    sensitive << ( tmp_10_reg_1418 );
    sensitive << ( tmp_18_reg_1422 );
    sensitive << ( ap_sig_cseq_ST_pp2_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp2_it1 );
    sensitive << ( tmp_reg_1451 );

    SC_METHOD(thread_outStream_channel_1_V_TVALID);
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_10 );
    sensitive << ( ap_reg_ppiten_pp1_it1 );
    sensitive << ( tmp_10_reg_1418 );
    sensitive << ( tmp_18_reg_1422 );
    sensitive << ( ap_sig_cseq_ST_pp2_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp2_it1 );
    sensitive << ( tmp_reg_1451 );
    sensitive << ( ap_reg_ioackin_outStream_channel_1_V_TREADY );

    SC_METHOD(thread_outstream_channel_2_V_TDATA);
    sensitive << ( ap_sig_cseq_ST_pp2_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp2_it1 );
    sensitive << ( tmp_reg_1451 );
    sensitive << ( tmp_50_fu_1324_p2 );

    SC_METHOD(thread_outstream_channel_2_V_TDATA_blk_n);
    sensitive << ( outstream_channel_2_V_TREADY );
    sensitive << ( ap_sig_cseq_ST_pp2_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp2_it1 );
    sensitive << ( tmp_reg_1451 );

    SC_METHOD(thread_outstream_channel_2_V_TVALID);
    sensitive << ( ap_sig_cseq_ST_pp2_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp2_it1 );
    sensitive << ( tmp_reg_1451 );
    sensitive << ( ap_reg_ioackin_outstream_channel_2_V_TREADY );

    SC_METHOD(thread_p_BASE_ADDRESS_flag_fu_565_p1);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( update_intr );

    SC_METHOD(thread_p_BASE_ADDRESS_flag_fu_565_p2);
    sensitive << ( BASE_ADDRESS_flag_phi_fu_356_p4 );
    sensitive << ( p_BASE_ADDRESS_flag_fu_565_p1 );

    SC_METHOD(thread_p_FRAME_BUFFER_DIM_flag_fu_527_p1);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( update_intr );

    SC_METHOD(thread_p_FRAME_BUFFER_DIM_flag_fu_527_p2);
    sensitive << ( FRAME_BUFFER_DIM_flag_phi_fu_293_p4 );
    sensitive << ( p_FRAME_BUFFER_DIM_flag_fu_527_p1 );

    SC_METHOD(thread_p_FRAME_BUFFER_NUMBER_flag_fu_547_p1);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( update_intr );

    SC_METHOD(thread_p_FRAME_BUFFER_NUMBER_flag_fu_547_p2);
    sensitive << ( FRAME_BUFFER_NUMBER_flag_phi_fu_335_p4 );
    sensitive << ( p_FRAME_BUFFER_NUMBER_flag_fu_547_p1 );

    SC_METHOD(thread_p_FRAME_OFFSET_flag_fu_541_p1);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( update_intr );

    SC_METHOD(thread_p_FRAME_OFFSET_flag_fu_541_p2);
    sensitive << ( FRAME_OFFSET_flag_phi_fu_314_p4 );
    sensitive << ( p_FRAME_OFFSET_flag_fu_541_p1 );

    SC_METHOD(thread_start_pos1_fu_1107_p3);
    sensitive << ( tmp_13_reg_1466 );

    SC_METHOD(thread_start_pos2_fu_1218_p3);
    sensitive << ( tmp_14_fu_1213_p2 );

    SC_METHOD(thread_start_pos3_fu_852_p3);
    sensitive << ( tmp_71_reg_1426 );

    SC_METHOD(thread_start_pos_fu_958_p3);
    sensitive << ( tmp_52_reg_1436 );

    SC_METHOD(thread_storemerge_fu_686_p3);
    sensitive << ( tmp_3_fu_677_p2 );
    sensitive << ( tmp_4_fu_681_p2 );

    SC_METHOD(thread_tmp_10_fu_717_p3);
    sensitive << ( j_reg_407 );

    SC_METHOD(thread_tmp_11_fu_1072_p1);
    sensitive << ( j1_reg_428 );

    SC_METHOD(thread_tmp_14_fu_1213_p2);
    sensitive << ( tmp_11_reg_1455 );

    SC_METHOD(thread_tmp_15_fu_1120_p2);
    sensitive << ( ap_sig_cseq_ST_pp2_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp2_it1 );
    sensitive << ( tmp_reg_1451 );
    sensitive << ( ap_sig_ioackin_outStream_channel_1_V_TREADY );
    sensitive << ( ap_sig_ioackin_outstream_channel_2_V_TREADY );
    sensitive << ( start_pos1_fu_1107_p3 );
    sensitive << ( end_pos_fu_1114_p2 );

    SC_METHOD(thread_tmp_17_fu_1126_p1);
    sensitive << ( start_pos1_fu_1107_p3 );

    SC_METHOD(thread_tmp_18_fu_729_p2);
    sensitive << ( luma_chroma_switch );
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_10 );
    sensitive << ( ap_reg_ppiten_pp1_it1 );
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( tmp_10_reg_1418 );
    sensitive << ( tmp_18_reg_1422 );
    sensitive << ( tmp_10_fu_717_p3 );
    sensitive << ( ap_sig_ioackin_outStream_channel_1_V_TREADY );

    SC_METHOD(thread_tmp_19_fu_1130_p1);
    sensitive << ( end_pos_fu_1114_p2 );

    SC_METHOD(thread_tmp_1_FRAME_BUFFER_NUMBER_loc_fu_553_p0);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( update_intr );

    SC_METHOD(thread_tmp_1_FRAME_BUFFER_NUMBER_loc_fu_553_p3);
    sensitive << ( frame_buffer_number );
    sensitive << ( FRAME_BUFFER_NUMBER_loc_phi_fu_346_p4 );
    sensitive << ( tmp_1_FRAME_BUFFER_NUMBER_loc_fu_553_p0 );

    SC_METHOD(thread_tmp_1_FRAME_BUFFER_NUMBER_loc_s_fu_561_p1);
    sensitive << ( tmp_1_FRAME_BUFFER_NUMBER_loc_fu_553_p3 );

    SC_METHOD(thread_tmp_1_fu_666_p1);
    sensitive << ( offset1_reg_374 );

    SC_METHOD(thread_tmp_20_fu_735_p2);
    sensitive << ( luma_chroma_switch );

    SC_METHOD(thread_tmp_22_fu_1134_p2);
    sensitive << ( tmp_17_fu_1126_p1 );
    sensitive << ( tmp_19_fu_1130_p1 );

    SC_METHOD(thread_tmp_23_fu_1140_p2);
    sensitive << ( tmp_17_fu_1126_p1 );

    SC_METHOD(thread_tmp_24_fu_1146_p2);
    sensitive << ( tmp_17_fu_1126_p1 );
    sensitive << ( tmp_19_fu_1130_p1 );

    SC_METHOD(thread_tmp_25_fu_1152_p3);
    sensitive << ( tmp_15_fu_1120_p2 );
    sensitive << ( tmp_22_fu_1134_p2 );
    sensitive << ( tmp_24_fu_1146_p2 );

    SC_METHOD(thread_tmp_26_fu_1160_p3);
    sensitive << ( buffer_q0 );
    sensitive << ( grp_fu_439_p4 );
    sensitive << ( tmp_15_fu_1120_p2 );

    SC_METHOD(thread_tmp_27_fu_1168_p3);
    sensitive << ( tmp_17_fu_1126_p1 );
    sensitive << ( tmp_15_fu_1120_p2 );
    sensitive << ( tmp_23_fu_1140_p2 );

    SC_METHOD(thread_tmp_28_fu_1176_p2);
    sensitive << ( tmp_25_fu_1152_p3 );

    SC_METHOD(thread_tmp_29_fu_1182_p1);
    sensitive << ( tmp_27_fu_1168_p3 );

    SC_METHOD(thread_tmp_2_fu_601_p4);
    sensitive << ( tmp_s_fu_595_p2 );

    SC_METHOD(thread_tmp_30_fu_1186_p1);
    sensitive << ( tmp_28_fu_1176_p2 );

    SC_METHOD(thread_tmp_31_fu_1190_p2);
    sensitive << ( tmp_26_fu_1160_p3 );
    sensitive << ( tmp_29_fu_1182_p1 );

    SC_METHOD(thread_tmp_32_fu_1196_p2);
    sensitive << ( tmp_30_fu_1186_p1 );

    SC_METHOD(thread_tmp_33_fu_1202_p2);
    sensitive << ( tmp_31_fu_1190_p2 );
    sensitive << ( tmp_32_fu_1196_p2 );

    SC_METHOD(thread_tmp_34_fu_1208_p1);
    sensitive << ( tmp_33_fu_1202_p2 );

    SC_METHOD(thread_tmp_35_fu_1232_p2);
    sensitive << ( ap_sig_cseq_ST_pp2_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp2_it1 );
    sensitive << ( tmp_reg_1451 );
    sensitive << ( ap_sig_ioackin_outStream_channel_1_V_TREADY );
    sensitive << ( ap_sig_ioackin_outstream_channel_2_V_TREADY );
    sensitive << ( start_pos2_fu_1218_p3 );
    sensitive << ( end_pos1_fu_1226_p2 );

    SC_METHOD(thread_tmp_36_fu_1238_p1);
    sensitive << ( start_pos2_fu_1218_p3 );

    SC_METHOD(thread_tmp_37_fu_1242_p1);
    sensitive << ( end_pos1_fu_1226_p2 );

    SC_METHOD(thread_tmp_38_fu_1246_p4);
    sensitive << ( buffer_q1 );

    SC_METHOD(thread_tmp_39_fu_1256_p2);
    sensitive << ( tmp_36_fu_1238_p1 );
    sensitive << ( tmp_37_fu_1242_p1 );

    SC_METHOD(thread_tmp_3_fu_677_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond1_fu_655_p2 );
    sensitive << ( inner_index_load_reg_1345 );
    sensitive << ( tmp_1_FRAME_BUFFER_NUMBER_loc_s_reg_1372 );
    sensitive << ( ap_sig_ioackin_base_ddr_addr_ARREADY );

    SC_METHOD(thread_tmp_40_fu_1262_p2);
    sensitive << ( tmp_36_fu_1238_p1 );

    SC_METHOD(thread_tmp_41_fu_1268_p2);
    sensitive << ( tmp_36_fu_1238_p1 );
    sensitive << ( tmp_37_fu_1242_p1 );

    SC_METHOD(thread_tmp_42_fu_1274_p3);
    sensitive << ( tmp_35_fu_1232_p2 );
    sensitive << ( tmp_39_fu_1256_p2 );
    sensitive << ( tmp_41_fu_1268_p2 );

    SC_METHOD(thread_tmp_43_fu_1282_p3);
    sensitive << ( buffer_q1 );
    sensitive << ( tmp_35_fu_1232_p2 );
    sensitive << ( tmp_38_fu_1246_p4 );

    SC_METHOD(thread_tmp_44_fu_1290_p3);
    sensitive << ( tmp_36_fu_1238_p1 );
    sensitive << ( tmp_35_fu_1232_p2 );
    sensitive << ( tmp_40_fu_1262_p2 );

    SC_METHOD(thread_tmp_45_fu_1298_p2);
    sensitive << ( tmp_42_fu_1274_p3 );

    SC_METHOD(thread_tmp_46_fu_1304_p1);
    sensitive << ( tmp_44_fu_1290_p3 );

    SC_METHOD(thread_tmp_47_fu_1308_p1);
    sensitive << ( tmp_45_fu_1298_p2 );

    SC_METHOD(thread_tmp_48_fu_1312_p2);
    sensitive << ( tmp_43_fu_1282_p3 );
    sensitive << ( tmp_46_fu_1304_p1 );

    SC_METHOD(thread_tmp_49_fu_1318_p2);
    sensitive << ( tmp_47_fu_1308_p1 );

    SC_METHOD(thread_tmp_4_fu_681_p2);
    sensitive << ( inner_index_load_reg_1345 );

    SC_METHOD(thread_tmp_50_fu_1324_p2);
    sensitive << ( tmp_48_fu_1312_p2 );
    sensitive << ( tmp_49_fu_1318_p2 );

    SC_METHOD(thread_tmp_52_fu_779_p1);
    sensitive << ( j_3_fu_772_p2 );

    SC_METHOD(thread_tmp_53_fu_783_p4);
    sensitive << ( j_3_fu_772_p2 );

    SC_METHOD(thread_tmp_54_fu_971_p2);
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_10 );
    sensitive << ( ap_reg_ppiten_pp1_it1 );
    sensitive << ( tmp_10_reg_1418 );
    sensitive << ( tmp_18_reg_1422 );
    sensitive << ( ap_sig_ioackin_outStream_channel_1_V_TREADY );
    sensitive << ( start_pos_fu_958_p3 );
    sensitive << ( end_pos2_fu_965_p2 );

    SC_METHOD(thread_tmp_55_fu_977_p1);
    sensitive << ( start_pos_fu_958_p3 );

    SC_METHOD(thread_tmp_56_fu_981_p1);
    sensitive << ( end_pos2_fu_965_p2 );

    SC_METHOD(thread_tmp_58_fu_985_p2);
    sensitive << ( tmp_55_fu_977_p1 );
    sensitive << ( tmp_56_fu_981_p1 );

    SC_METHOD(thread_tmp_59_fu_991_p2);
    sensitive << ( tmp_55_fu_977_p1 );

    SC_METHOD(thread_tmp_60_fu_997_p2);
    sensitive << ( tmp_55_fu_977_p1 );
    sensitive << ( tmp_56_fu_981_p1 );

    SC_METHOD(thread_tmp_61_fu_1003_p3);
    sensitive << ( tmp_54_fu_971_p2 );
    sensitive << ( tmp_58_fu_985_p2 );
    sensitive << ( tmp_60_fu_997_p2 );

    SC_METHOD(thread_tmp_62_fu_1011_p3);
    sensitive << ( buffer_q0 );
    sensitive << ( grp_fu_439_p4 );
    sensitive << ( tmp_54_fu_971_p2 );

    SC_METHOD(thread_tmp_63_fu_1019_p3);
    sensitive << ( tmp_55_fu_977_p1 );
    sensitive << ( tmp_54_fu_971_p2 );
    sensitive << ( tmp_59_fu_991_p2 );

    SC_METHOD(thread_tmp_64_fu_1027_p2);
    sensitive << ( tmp_61_fu_1003_p3 );

    SC_METHOD(thread_tmp_65_fu_1033_p1);
    sensitive << ( tmp_63_fu_1019_p3 );

    SC_METHOD(thread_tmp_66_fu_1037_p1);
    sensitive << ( tmp_64_fu_1027_p2 );

    SC_METHOD(thread_tmp_67_fu_1041_p2);
    sensitive << ( tmp_62_fu_1011_p3 );
    sensitive << ( tmp_65_fu_1033_p1 );

    SC_METHOD(thread_tmp_68_fu_1047_p2);
    sensitive << ( tmp_66_fu_1037_p1 );

    SC_METHOD(thread_tmp_69_fu_1053_p2);
    sensitive << ( tmp_67_fu_1041_p2 );
    sensitive << ( tmp_68_fu_1047_p2 );

    SC_METHOD(thread_tmp_6_fu_712_p1);
    sensitive << ( ap_reg_ppstg_indvar_reg_395_pp0_iter1 );

    SC_METHOD(thread_tmp_70_fu_1059_p1);
    sensitive << ( tmp_69_fu_1053_p2 );

    SC_METHOD(thread_tmp_71_fu_747_p1);
    sensitive << ( j_reg_407 );

    SC_METHOD(thread_tmp_72_fu_865_p2);
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_10 );
    sensitive << ( ap_reg_ppiten_pp1_it1 );
    sensitive << ( tmp_10_reg_1418 );
    sensitive << ( tmp_18_reg_1422 );
    sensitive << ( ap_sig_ioackin_outStream_channel_1_V_TREADY );
    sensitive << ( start_pos3_fu_852_p3 );
    sensitive << ( end_pos3_fu_859_p2 );

    SC_METHOD(thread_tmp_73_fu_871_p1);
    sensitive << ( start_pos3_fu_852_p3 );

    SC_METHOD(thread_tmp_74_fu_875_p1);
    sensitive << ( end_pos3_fu_859_p2 );

    SC_METHOD(thread_tmp_76_fu_879_p2);
    sensitive << ( tmp_73_fu_871_p1 );
    sensitive << ( tmp_74_fu_875_p1 );

    SC_METHOD(thread_tmp_77_fu_885_p2);
    sensitive << ( tmp_73_fu_871_p1 );

    SC_METHOD(thread_tmp_78_fu_891_p2);
    sensitive << ( tmp_73_fu_871_p1 );
    sensitive << ( tmp_74_fu_875_p1 );

    SC_METHOD(thread_tmp_79_fu_897_p3);
    sensitive << ( tmp_72_fu_865_p2 );
    sensitive << ( tmp_76_fu_879_p2 );
    sensitive << ( tmp_78_fu_891_p2 );

    SC_METHOD(thread_tmp_7_BASE_ADDRESS_loc_fu_587_p0);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( update_intr );

    SC_METHOD(thread_tmp_7_BASE_ADDRESS_loc_fu_587_p3);
    sensitive << ( BASE_ADDRESS_loc_phi_fu_367_p4 );
    sensitive << ( tmp_8_fu_523_p1 );
    sensitive << ( tmp_7_BASE_ADDRESS_loc_fu_587_p0 );

    SC_METHOD(thread_tmp_7_base_address_fu_571_p0);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( update_intr );

    SC_METHOD(thread_tmp_7_base_address_fu_571_p3);
    sensitive << ( base_address );
    sensitive << ( tmp_7_base_address_fu_571_p0 );
    sensitive << ( tmp_8_fu_523_p1 );

    SC_METHOD(thread_tmp_7_fu_513_p4);
    sensitive << ( base_address );

    SC_METHOD(thread_tmp_80_fu_905_p3);
    sensitive << ( buffer_q0 );
    sensitive << ( tmp_72_fu_865_p2 );
    sensitive << ( grp_fu_439_p4 );

    SC_METHOD(thread_tmp_81_fu_913_p3);
    sensitive << ( tmp_73_fu_871_p1 );
    sensitive << ( tmp_72_fu_865_p2 );
    sensitive << ( tmp_77_fu_885_p2 );

    SC_METHOD(thread_tmp_82_fu_921_p2);
    sensitive << ( tmp_79_fu_897_p3 );

    SC_METHOD(thread_tmp_83_fu_927_p1);
    sensitive << ( tmp_81_fu_913_p3 );

    SC_METHOD(thread_tmp_84_fu_931_p1);
    sensitive << ( tmp_82_fu_921_p2 );

    SC_METHOD(thread_tmp_85_fu_935_p2);
    sensitive << ( tmp_80_fu_905_p3 );
    sensitive << ( tmp_83_fu_927_p1 );

    SC_METHOD(thread_tmp_86_fu_941_p2);
    sensitive << ( tmp_84_fu_931_p1 );

    SC_METHOD(thread_tmp_87_fu_947_p2);
    sensitive << ( tmp_85_fu_935_p2 );
    sensitive << ( tmp_86_fu_941_p2 );

    SC_METHOD(thread_tmp_88_fu_953_p1);
    sensitive << ( tmp_87_fu_947_p2 );

    SC_METHOD(thread_tmp_8_fu_523_p1);
    sensitive << ( tmp_7_fu_513_p4 );

    SC_METHOD(thread_tmp_9_fu_611_p1);
    sensitive << ( tmp_2_fu_601_p4 );

    SC_METHOD(thread_tmp_fu_1064_p3);
    sensitive << ( j1_reg_428 );

    SC_METHOD(thread_tmp_s_fu_595_p0);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( inner_index );

    SC_METHOD(thread_tmp_s_fu_595_p2);
    sensitive << ( tmp_s_fu_595_p0 );
    sensitive << ( frame_buffer_offset_FRAME_OFFS_fu_579_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp1_it1 );
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( tmp_10_reg_1418 );
    sensitive << ( tmp_18_reg_1422 );
    sensitive << ( ap_reg_ppiten_pp2_it1 );
    sensitive << ( ap_reg_ppiten_pp2_it0 );
    sensitive << ( tmp_reg_1451 );
    sensitive << ( exitcond1_fu_655_p2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_sig_300 );
    sensitive << ( stereo_enabler_read_reg_1341 );
    sensitive << ( ap_sig_ioackin_base_ddr_addr_ARREADY );
    sensitive << ( exitcond_fu_700_p2 );
    sensitive << ( tmp_10_fu_717_p3 );
    sensitive << ( ap_sig_ioackin_outStream_channel_1_V_TREADY );
    sensitive << ( tmp_fu_1064_p3 );
    sensitive << ( ap_sig_ioackin_outstream_channel_2_V_TREADY );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const9);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const8);

    ap_CS_fsm = "0000000000001";
    inner_index = "00000000000000000000000000000000";
    guard_variable_for_ddr_to_axis_2 = "0";
    FRAME_BUFFER_DIM_r = "00000000000000000000000000000000";
    guard_variable_for_ddr_to_axis = "0";
    FRAME_OFFSET = "00000000000000000000000000000000";
    guard_variable_for_ddr_to_axis_1 = "0";
    FRAME_BUFFER_NUMBER_r = "00000000";
    guard_variable_for_ddr_to_axis_3 = "0";
    BASE_ADDRESS_r = "00000000000000000000000000000000";
    luma_chroma_switch = "00000000000000000000000000000000";
    ap_reg_ppiten_pp1_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp1_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp2_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp2_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it2 = SC_LOGIC_0;
    ap_reg_ioackin_base_ddr_addr_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_outStream_channel_1_V_TREADY = SC_LOGIC_0;
    ap_reg_ioackin_outstream_channel_2_V_TREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "ddr_to_axis_reader_SD_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, outStream_channel_1_V_TDATA, "(port)outStream_channel_1_V_TDATA");
    sc_trace(mVcdFile, outStream_channel_1_V_TVALID, "(port)outStream_channel_1_V_TVALID");
    sc_trace(mVcdFile, outStream_channel_1_V_TREADY, "(port)outStream_channel_1_V_TREADY");
    sc_trace(mVcdFile, outstream_channel_2_V_TDATA, "(port)outstream_channel_2_V_TDATA");
    sc_trace(mVcdFile, outstream_channel_2_V_TVALID, "(port)outstream_channel_2_V_TVALID");
    sc_trace(mVcdFile, outstream_channel_2_V_TREADY, "(port)outstream_channel_2_V_TREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWVALID, "(port)m_axi_base_ddr_addr_AWVALID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWREADY, "(port)m_axi_base_ddr_addr_AWREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWADDR, "(port)m_axi_base_ddr_addr_AWADDR");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWID, "(port)m_axi_base_ddr_addr_AWID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWLEN, "(port)m_axi_base_ddr_addr_AWLEN");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWSIZE, "(port)m_axi_base_ddr_addr_AWSIZE");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWBURST, "(port)m_axi_base_ddr_addr_AWBURST");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWLOCK, "(port)m_axi_base_ddr_addr_AWLOCK");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWCACHE, "(port)m_axi_base_ddr_addr_AWCACHE");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWPROT, "(port)m_axi_base_ddr_addr_AWPROT");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWQOS, "(port)m_axi_base_ddr_addr_AWQOS");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWREGION, "(port)m_axi_base_ddr_addr_AWREGION");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWUSER, "(port)m_axi_base_ddr_addr_AWUSER");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WVALID, "(port)m_axi_base_ddr_addr_WVALID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WREADY, "(port)m_axi_base_ddr_addr_WREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WDATA, "(port)m_axi_base_ddr_addr_WDATA");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WSTRB, "(port)m_axi_base_ddr_addr_WSTRB");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WLAST, "(port)m_axi_base_ddr_addr_WLAST");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WID, "(port)m_axi_base_ddr_addr_WID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WUSER, "(port)m_axi_base_ddr_addr_WUSER");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARVALID, "(port)m_axi_base_ddr_addr_ARVALID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARREADY, "(port)m_axi_base_ddr_addr_ARREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARADDR, "(port)m_axi_base_ddr_addr_ARADDR");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARID, "(port)m_axi_base_ddr_addr_ARID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARLEN, "(port)m_axi_base_ddr_addr_ARLEN");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARSIZE, "(port)m_axi_base_ddr_addr_ARSIZE");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARBURST, "(port)m_axi_base_ddr_addr_ARBURST");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARLOCK, "(port)m_axi_base_ddr_addr_ARLOCK");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARCACHE, "(port)m_axi_base_ddr_addr_ARCACHE");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARPROT, "(port)m_axi_base_ddr_addr_ARPROT");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARQOS, "(port)m_axi_base_ddr_addr_ARQOS");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARREGION, "(port)m_axi_base_ddr_addr_ARREGION");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARUSER, "(port)m_axi_base_ddr_addr_ARUSER");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RVALID, "(port)m_axi_base_ddr_addr_RVALID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RREADY, "(port)m_axi_base_ddr_addr_RREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RDATA, "(port)m_axi_base_ddr_addr_RDATA");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RLAST, "(port)m_axi_base_ddr_addr_RLAST");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RID, "(port)m_axi_base_ddr_addr_RID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RUSER, "(port)m_axi_base_ddr_addr_RUSER");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RRESP, "(port)m_axi_base_ddr_addr_RRESP");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_BVALID, "(port)m_axi_base_ddr_addr_BVALID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_BREADY, "(port)m_axi_base_ddr_addr_BREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_BRESP, "(port)m_axi_base_ddr_addr_BRESP");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_BID, "(port)m_axi_base_ddr_addr_BID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_BUSER, "(port)m_axi_base_ddr_addr_BUSER");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_30, "ap_sig_30");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, base_address, "base_address");
    sc_trace(mVcdFile, frame_buffer_dim, "frame_buffer_dim");
    sc_trace(mVcdFile, frame_buffer_offset, "frame_buffer_offset");
    sc_trace(mVcdFile, frame_buffer_number, "frame_buffer_number");
    sc_trace(mVcdFile, update_intr, "update_intr");
    sc_trace(mVcdFile, stereo_enabler, "stereo_enabler");
    sc_trace(mVcdFile, inner_index, "inner_index");
    sc_trace(mVcdFile, guard_variable_for_ddr_to_axis_2, "guard_variable_for_ddr_to_axis_2");
    sc_trace(mVcdFile, FRAME_BUFFER_DIM_r, "FRAME_BUFFER_DIM_r");
    sc_trace(mVcdFile, guard_variable_for_ddr_to_axis, "guard_variable_for_ddr_to_axis");
    sc_trace(mVcdFile, FRAME_OFFSET, "FRAME_OFFSET");
    sc_trace(mVcdFile, guard_variable_for_ddr_to_axis_1, "guard_variable_for_ddr_to_axis_1");
    sc_trace(mVcdFile, FRAME_BUFFER_NUMBER_r, "FRAME_BUFFER_NUMBER_r");
    sc_trace(mVcdFile, guard_variable_for_ddr_to_axis_3, "guard_variable_for_ddr_to_axis_3");
    sc_trace(mVcdFile, BASE_ADDRESS_r, "BASE_ADDRESS_r");
    sc_trace(mVcdFile, luma_chroma_switch, "luma_chroma_switch");
    sc_trace(mVcdFile, outStream_channel_1_V_TDATA_blk_n, "outStream_channel_1_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp1_stg0_fsm_10, "ap_sig_cseq_ST_pp1_stg0_fsm_10");
    sc_trace(mVcdFile, ap_sig_118, "ap_sig_118");
    sc_trace(mVcdFile, ap_reg_ppiten_pp1_it1, "ap_reg_ppiten_pp1_it1");
    sc_trace(mVcdFile, ap_reg_ppiten_pp1_it0, "ap_reg_ppiten_pp1_it0");
    sc_trace(mVcdFile, tmp_10_reg_1418, "tmp_10_reg_1418");
    sc_trace(mVcdFile, tmp_18_reg_1422, "tmp_18_reg_1422");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp2_stg0_fsm_11, "ap_sig_cseq_ST_pp2_stg0_fsm_11");
    sc_trace(mVcdFile, ap_sig_140, "ap_sig_140");
    sc_trace(mVcdFile, ap_reg_ppiten_pp2_it1, "ap_reg_ppiten_pp2_it1");
    sc_trace(mVcdFile, ap_reg_ppiten_pp2_it0, "ap_reg_ppiten_pp2_it0");
    sc_trace(mVcdFile, tmp_reg_1451, "tmp_reg_1451");
    sc_trace(mVcdFile, outstream_channel_2_V_TDATA_blk_n, "outstream_channel_2_V_TDATA_blk_n");
    sc_trace(mVcdFile, base_ddr_addr_blk_n_AR, "base_ddr_addr_blk_n_AR");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_158, "ap_sig_158");
    sc_trace(mVcdFile, exitcond1_fu_655_p2, "exitcond1_fu_655_p2");
    sc_trace(mVcdFile, base_ddr_addr_blk_n_R, "base_ddr_addr_blk_n_R");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_8, "ap_sig_cseq_ST_pp0_stg0_fsm_8");
    sc_trace(mVcdFile, ap_sig_169, "ap_sig_169");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it2, "ap_reg_ppiten_pp0_it2");
    sc_trace(mVcdFile, exitcond_reg_1404, "exitcond_reg_1404");
    sc_trace(mVcdFile, base_ddr_addr_AWREADY, "base_ddr_addr_AWREADY");
    sc_trace(mVcdFile, base_ddr_addr_WREADY, "base_ddr_addr_WREADY");
    sc_trace(mVcdFile, base_ddr_addr_ARVALID, "base_ddr_addr_ARVALID");
    sc_trace(mVcdFile, base_ddr_addr_ARREADY, "base_ddr_addr_ARREADY");
    sc_trace(mVcdFile, base_ddr_addr_ARADDR, "base_ddr_addr_ARADDR");
    sc_trace(mVcdFile, base_ddr_addr_RVALID, "base_ddr_addr_RVALID");
    sc_trace(mVcdFile, base_ddr_addr_RREADY, "base_ddr_addr_RREADY");
    sc_trace(mVcdFile, base_ddr_addr_RDATA, "base_ddr_addr_RDATA");
    sc_trace(mVcdFile, base_ddr_addr_RLAST, "base_ddr_addr_RLAST");
    sc_trace(mVcdFile, base_ddr_addr_RID, "base_ddr_addr_RID");
    sc_trace(mVcdFile, base_ddr_addr_RUSER, "base_ddr_addr_RUSER");
    sc_trace(mVcdFile, base_ddr_addr_RRESP, "base_ddr_addr_RRESP");
    sc_trace(mVcdFile, base_ddr_addr_BVALID, "base_ddr_addr_BVALID");
    sc_trace(mVcdFile, base_ddr_addr_BRESP, "base_ddr_addr_BRESP");
    sc_trace(mVcdFile, base_ddr_addr_BID, "base_ddr_addr_BID");
    sc_trace(mVcdFile, base_ddr_addr_BUSER, "base_ddr_addr_BUSER");
    sc_trace(mVcdFile, indvar_reg_395, "indvar_reg_395");
    sc_trace(mVcdFile, ap_reg_ppstg_indvar_reg_395_pp0_iter1, "ap_reg_ppstg_indvar_reg_395_pp0_iter1");
    sc_trace(mVcdFile, ap_sig_300, "ap_sig_300");
    sc_trace(mVcdFile, j_reg_407, "j_reg_407");
    sc_trace(mVcdFile, j1_reg_428, "j1_reg_428");
    sc_trace(mVcdFile, stereo_enabler_read_reg_1341, "stereo_enabler_read_reg_1341");
    sc_trace(mVcdFile, inner_index_load_reg_1345, "inner_index_load_reg_1345");
    sc_trace(mVcdFile, tmp_1_FRAME_BUFFER_NUMBER_loc_s_fu_561_p1, "tmp_1_FRAME_BUFFER_NUMBER_loc_s_fu_561_p1");
    sc_trace(mVcdFile, tmp_1_FRAME_BUFFER_NUMBER_loc_s_reg_1372, "tmp_1_FRAME_BUFFER_NUMBER_loc_s_reg_1372");
    sc_trace(mVcdFile, offset_fu_615_p2, "offset_fu_615_p2");
    sc_trace(mVcdFile, tmp_5_reg_1385, "tmp_5_reg_1385");
    sc_trace(mVcdFile, i_1_fu_660_p2, "i_1_fu_660_p2");
    sc_trace(mVcdFile, i_1_reg_1393, "i_1_reg_1393");
    sc_trace(mVcdFile, ap_sig_ioackin_base_ddr_addr_ARREADY, "ap_sig_ioackin_base_ddr_addr_ARREADY");
    sc_trace(mVcdFile, exitcond_fu_700_p2, "exitcond_fu_700_p2");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_1404_pp0_iter1, "ap_reg_ppstg_exitcond_reg_1404_pp0_iter1");
    sc_trace(mVcdFile, indvar_next_fu_706_p2, "indvar_next_fu_706_p2");
    sc_trace(mVcdFile, indvar_next_reg_1408, "indvar_next_reg_1408");
    sc_trace(mVcdFile, base_ddr_addr_addr_read_reg_1413, "base_ddr_addr_addr_read_reg_1413");
    sc_trace(mVcdFile, tmp_10_fu_717_p3, "tmp_10_fu_717_p3");
    sc_trace(mVcdFile, ap_sig_ioackin_outStream_channel_1_V_TREADY, "ap_sig_ioackin_outStream_channel_1_V_TREADY");
    sc_trace(mVcdFile, tmp_18_fu_729_p2, "tmp_18_fu_729_p2");
    sc_trace(mVcdFile, tmp_71_fu_747_p1, "tmp_71_fu_747_p1");
    sc_trace(mVcdFile, tmp_71_reg_1426, "tmp_71_reg_1426");
    sc_trace(mVcdFile, tmp_52_fu_779_p1, "tmp_52_fu_779_p1");
    sc_trace(mVcdFile, tmp_52_reg_1436, "tmp_52_reg_1436");
    sc_trace(mVcdFile, j_4_fu_846_p2, "j_4_fu_846_p2");
    sc_trace(mVcdFile, tmp_fu_1064_p3, "tmp_fu_1064_p3");
    sc_trace(mVcdFile, ap_sig_ioackin_outstream_channel_2_V_TREADY, "ap_sig_ioackin_outstream_channel_2_V_TREADY");
    sc_trace(mVcdFile, tmp_11_fu_1072_p1, "tmp_11_fu_1072_p1");
    sc_trace(mVcdFile, tmp_11_reg_1455, "tmp_11_reg_1455");
    sc_trace(mVcdFile, tmp_13_reg_1466, "tmp_13_reg_1466");
    sc_trace(mVcdFile, j_2_fu_1101_p2, "j_2_fu_1101_p2");
    sc_trace(mVcdFile, offset_1_fu_1335_p2, "offset_1_fu_1335_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st17_fsm_12, "ap_sig_cseq_ST_st17_fsm_12");
    sc_trace(mVcdFile, ap_sig_403, "ap_sig_403");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_410, "ap_sig_410");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_9, "ap_sig_cseq_ST_st12_fsm_9");
    sc_trace(mVcdFile, ap_sig_422, "ap_sig_422");
    sc_trace(mVcdFile, buffer_address0, "buffer_address0");
    sc_trace(mVcdFile, buffer_ce0, "buffer_ce0");
    sc_trace(mVcdFile, buffer_q0, "buffer_q0");
    sc_trace(mVcdFile, buffer_address1, "buffer_address1");
    sc_trace(mVcdFile, buffer_ce1, "buffer_ce1");
    sc_trace(mVcdFile, buffer_we1, "buffer_we1");
    sc_trace(mVcdFile, buffer_q1, "buffer_q1");
    sc_trace(mVcdFile, FRAME_BUFFER_DIM_flag_phi_fu_293_p4, "FRAME_BUFFER_DIM_flag_phi_fu_293_p4");
    sc_trace(mVcdFile, guard_variable_for_ddr_to_axis_load_fu_453_p1, "guard_variable_for_ddr_to_axis_load_fu_453_p1");
    sc_trace(mVcdFile, FRAME_BUFFER_DIM_loc_phi_fu_304_p4, "FRAME_BUFFER_DIM_loc_phi_fu_304_p4");
    sc_trace(mVcdFile, FRAME_OFFSET_flag_phi_fu_314_p4, "FRAME_OFFSET_flag_phi_fu_314_p4");
    sc_trace(mVcdFile, guard_variable_for_ddr_to_axis_1_load_fu_468_p1, "guard_variable_for_ddr_to_axis_1_load_fu_468_p1");
    sc_trace(mVcdFile, FRAME_OFFSET_loc_phi_fu_325_p4, "FRAME_OFFSET_loc_phi_fu_325_p4");
    sc_trace(mVcdFile, FRAME_BUFFER_NUMBER_flag_phi_fu_335_p4, "FRAME_BUFFER_NUMBER_flag_phi_fu_335_p4");
    sc_trace(mVcdFile, guard_variable_for_ddr_to_axis_2_load_fu_483_p1, "guard_variable_for_ddr_to_axis_2_load_fu_483_p1");
    sc_trace(mVcdFile, FRAME_BUFFER_NUMBER_loc_phi_fu_346_p4, "FRAME_BUFFER_NUMBER_loc_phi_fu_346_p4");
    sc_trace(mVcdFile, BASE_ADDRESS_flag_phi_fu_356_p4, "BASE_ADDRESS_flag_phi_fu_356_p4");
    sc_trace(mVcdFile, guard_variable_for_ddr_to_axis_3_load_fu_498_p1, "guard_variable_for_ddr_to_axis_3_load_fu_498_p1");
    sc_trace(mVcdFile, BASE_ADDRESS_loc_phi_fu_367_p4, "BASE_ADDRESS_loc_phi_fu_367_p4");
    sc_trace(mVcdFile, offset1_reg_374, "offset1_reg_374");
    sc_trace(mVcdFile, i_reg_384, "i_reg_384");
    sc_trace(mVcdFile, indvar_phi_fu_399_p4, "indvar_phi_fu_399_p4");
    sc_trace(mVcdFile, j_3_fu_772_p2, "j_3_fu_772_p2");
    sc_trace(mVcdFile, ap_reg_phiprechg_j_1_reg_418pp1_it0, "ap_reg_phiprechg_j_1_reg_418pp1_it0");
    sc_trace(mVcdFile, j_1_phi_fu_421_p4, "j_1_phi_fu_421_p4");
    sc_trace(mVcdFile, tmp_6_fu_712_p1, "tmp_6_fu_712_p1");
    sc_trace(mVcdFile, gepindex264_cast_fu_761_p1, "gepindex264_cast_fu_761_p1");
    sc_trace(mVcdFile, gepindex2_cast_fu_841_p1, "gepindex2_cast_fu_841_p1");
    sc_trace(mVcdFile, gepindex276_cast_fu_1086_p1, "gepindex276_cast_fu_1086_p1");
    sc_trace(mVcdFile, tmp_1_fu_666_p1, "tmp_1_fu_666_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_base_ddr_addr_ARREADY, "ap_reg_ioackin_base_ddr_addr_ARREADY");
    sc_trace(mVcdFile, storemerge_fu_686_p3, "storemerge_fu_686_p3");
    sc_trace(mVcdFile, p_FRAME_BUFFER_DIM_flag_fu_527_p2, "p_FRAME_BUFFER_DIM_flag_fu_527_p2");
    sc_trace(mVcdFile, p_FRAME_OFFSET_flag_fu_541_p2, "p_FRAME_OFFSET_flag_fu_541_p2");
    sc_trace(mVcdFile, p_FRAME_BUFFER_NUMBER_flag_fu_547_p2, "p_FRAME_BUFFER_NUMBER_flag_fu_547_p2");
    sc_trace(mVcdFile, tmp_7_base_address_fu_571_p3, "tmp_7_base_address_fu_571_p3");
    sc_trace(mVcdFile, p_BASE_ADDRESS_flag_fu_565_p2, "p_BASE_ADDRESS_flag_fu_565_p2");
    sc_trace(mVcdFile, tmp_20_fu_735_p2, "tmp_20_fu_735_p2");
    sc_trace(mVcdFile, tmp_88_fu_953_p1, "tmp_88_fu_953_p1");
    sc_trace(mVcdFile, tmp_70_fu_1059_p1, "tmp_70_fu_1059_p1");
    sc_trace(mVcdFile, tmp_34_fu_1208_p1, "tmp_34_fu_1208_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_outStream_channel_1_V_TREADY, "ap_reg_ioackin_outStream_channel_1_V_TREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_outstream_channel_2_V_TREADY, "ap_reg_ioackin_outstream_channel_2_V_TREADY");
    sc_trace(mVcdFile, tmp_7_fu_513_p4, "tmp_7_fu_513_p4");
    sc_trace(mVcdFile, p_FRAME_BUFFER_DIM_flag_fu_527_p1, "p_FRAME_BUFFER_DIM_flag_fu_527_p1");
    sc_trace(mVcdFile, frame_buffer_dim_FRAME_BUFFER_s_fu_533_p0, "frame_buffer_dim_FRAME_BUFFER_s_fu_533_p0");
    sc_trace(mVcdFile, p_FRAME_OFFSET_flag_fu_541_p1, "p_FRAME_OFFSET_flag_fu_541_p1");
    sc_trace(mVcdFile, p_FRAME_BUFFER_NUMBER_flag_fu_547_p1, "p_FRAME_BUFFER_NUMBER_flag_fu_547_p1");
    sc_trace(mVcdFile, tmp_1_FRAME_BUFFER_NUMBER_loc_fu_553_p0, "tmp_1_FRAME_BUFFER_NUMBER_loc_fu_553_p0");
    sc_trace(mVcdFile, tmp_1_FRAME_BUFFER_NUMBER_loc_fu_553_p3, "tmp_1_FRAME_BUFFER_NUMBER_loc_fu_553_p3");
    sc_trace(mVcdFile, p_BASE_ADDRESS_flag_fu_565_p1, "p_BASE_ADDRESS_flag_fu_565_p1");
    sc_trace(mVcdFile, tmp_7_base_address_fu_571_p0, "tmp_7_base_address_fu_571_p0");
    sc_trace(mVcdFile, tmp_8_fu_523_p1, "tmp_8_fu_523_p1");
    sc_trace(mVcdFile, frame_buffer_offset_FRAME_OFFS_fu_579_p0, "frame_buffer_offset_FRAME_OFFS_fu_579_p0");
    sc_trace(mVcdFile, tmp_7_BASE_ADDRESS_loc_fu_587_p0, "tmp_7_BASE_ADDRESS_loc_fu_587_p0");
    sc_trace(mVcdFile, tmp_s_fu_595_p0, "tmp_s_fu_595_p0");
    sc_trace(mVcdFile, frame_buffer_offset_FRAME_OFFS_fu_579_p3, "frame_buffer_offset_FRAME_OFFS_fu_579_p3");
    sc_trace(mVcdFile, tmp_s_fu_595_p2, "tmp_s_fu_595_p2");
    sc_trace(mVcdFile, tmp_2_fu_601_p4, "tmp_2_fu_601_p4");
    sc_trace(mVcdFile, tmp_9_fu_611_p1, "tmp_9_fu_611_p1");
    sc_trace(mVcdFile, tmp_7_BASE_ADDRESS_loc_fu_587_p3, "tmp_7_BASE_ADDRESS_loc_fu_587_p3");
    sc_trace(mVcdFile, frame_buffer_dim_FRAME_BUFFER_s_fu_533_p3, "frame_buffer_dim_FRAME_BUFFER_s_fu_533_p3");
    sc_trace(mVcdFile, tmp_3_fu_677_p2, "tmp_3_fu_677_p2");
    sc_trace(mVcdFile, tmp_4_fu_681_p2, "tmp_4_fu_681_p2");
    sc_trace(mVcdFile, gepindex62_cast_fu_751_p4, "gepindex62_cast_fu_751_p4");
    sc_trace(mVcdFile, tmp_53_fu_783_p4, "tmp_53_fu_783_p4");
    sc_trace(mVcdFile, adjSize_fu_793_p1, "adjSize_fu_793_p1");
    sc_trace(mVcdFile, mem_index_gep_fu_797_p2, "mem_index_gep_fu_797_p2");
    sc_trace(mVcdFile, adjSize55_cast_fu_803_p1, "adjSize55_cast_fu_803_p1");
    sc_trace(mVcdFile, addrCmp_fu_807_p2, "addrCmp_fu_807_p2");
    sc_trace(mVcdFile, gepindex_fu_819_p2, "gepindex_fu_819_p2");
    sc_trace(mVcdFile, addrCmp1_fu_813_p2, "addrCmp1_fu_813_p2");
    sc_trace(mVcdFile, gepindex1_fu_825_p3, "gepindex1_fu_825_p3");
    sc_trace(mVcdFile, gepindex2_fu_833_p3, "gepindex2_fu_833_p3");
    sc_trace(mVcdFile, start_pos3_fu_852_p3, "start_pos3_fu_852_p3");
    sc_trace(mVcdFile, end_pos3_fu_859_p2, "end_pos3_fu_859_p2");
    sc_trace(mVcdFile, tmp_73_fu_871_p1, "tmp_73_fu_871_p1");
    sc_trace(mVcdFile, tmp_74_fu_875_p1, "tmp_74_fu_875_p1");
    sc_trace(mVcdFile, tmp_72_fu_865_p2, "tmp_72_fu_865_p2");
    sc_trace(mVcdFile, tmp_76_fu_879_p2, "tmp_76_fu_879_p2");
    sc_trace(mVcdFile, tmp_78_fu_891_p2, "tmp_78_fu_891_p2");
    sc_trace(mVcdFile, grp_fu_439_p4, "grp_fu_439_p4");
    sc_trace(mVcdFile, tmp_77_fu_885_p2, "tmp_77_fu_885_p2");
    sc_trace(mVcdFile, tmp_79_fu_897_p3, "tmp_79_fu_897_p3");
    sc_trace(mVcdFile, tmp_81_fu_913_p3, "tmp_81_fu_913_p3");
    sc_trace(mVcdFile, tmp_82_fu_921_p2, "tmp_82_fu_921_p2");
    sc_trace(mVcdFile, tmp_80_fu_905_p3, "tmp_80_fu_905_p3");
    sc_trace(mVcdFile, tmp_83_fu_927_p1, "tmp_83_fu_927_p1");
    sc_trace(mVcdFile, tmp_84_fu_931_p1, "tmp_84_fu_931_p1");
    sc_trace(mVcdFile, tmp_85_fu_935_p2, "tmp_85_fu_935_p2");
    sc_trace(mVcdFile, tmp_86_fu_941_p2, "tmp_86_fu_941_p2");
    sc_trace(mVcdFile, tmp_87_fu_947_p2, "tmp_87_fu_947_p2");
    sc_trace(mVcdFile, start_pos_fu_958_p3, "start_pos_fu_958_p3");
    sc_trace(mVcdFile, end_pos2_fu_965_p2, "end_pos2_fu_965_p2");
    sc_trace(mVcdFile, tmp_55_fu_977_p1, "tmp_55_fu_977_p1");
    sc_trace(mVcdFile, tmp_56_fu_981_p1, "tmp_56_fu_981_p1");
    sc_trace(mVcdFile, tmp_54_fu_971_p2, "tmp_54_fu_971_p2");
    sc_trace(mVcdFile, tmp_58_fu_985_p2, "tmp_58_fu_985_p2");
    sc_trace(mVcdFile, tmp_60_fu_997_p2, "tmp_60_fu_997_p2");
    sc_trace(mVcdFile, tmp_59_fu_991_p2, "tmp_59_fu_991_p2");
    sc_trace(mVcdFile, tmp_61_fu_1003_p3, "tmp_61_fu_1003_p3");
    sc_trace(mVcdFile, tmp_63_fu_1019_p3, "tmp_63_fu_1019_p3");
    sc_trace(mVcdFile, tmp_64_fu_1027_p2, "tmp_64_fu_1027_p2");
    sc_trace(mVcdFile, tmp_62_fu_1011_p3, "tmp_62_fu_1011_p3");
    sc_trace(mVcdFile, tmp_65_fu_1033_p1, "tmp_65_fu_1033_p1");
    sc_trace(mVcdFile, tmp_66_fu_1037_p1, "tmp_66_fu_1037_p1");
    sc_trace(mVcdFile, tmp_67_fu_1041_p2, "tmp_67_fu_1041_p2");
    sc_trace(mVcdFile, tmp_68_fu_1047_p2, "tmp_68_fu_1047_p2");
    sc_trace(mVcdFile, tmp_69_fu_1053_p2, "tmp_69_fu_1053_p2");
    sc_trace(mVcdFile, gepindex74_cast_fu_1076_p4, "gepindex74_cast_fu_1076_p4");
    sc_trace(mVcdFile, start_pos1_fu_1107_p3, "start_pos1_fu_1107_p3");
    sc_trace(mVcdFile, end_pos_fu_1114_p2, "end_pos_fu_1114_p2");
    sc_trace(mVcdFile, tmp_17_fu_1126_p1, "tmp_17_fu_1126_p1");
    sc_trace(mVcdFile, tmp_19_fu_1130_p1, "tmp_19_fu_1130_p1");
    sc_trace(mVcdFile, tmp_15_fu_1120_p2, "tmp_15_fu_1120_p2");
    sc_trace(mVcdFile, tmp_22_fu_1134_p2, "tmp_22_fu_1134_p2");
    sc_trace(mVcdFile, tmp_24_fu_1146_p2, "tmp_24_fu_1146_p2");
    sc_trace(mVcdFile, tmp_23_fu_1140_p2, "tmp_23_fu_1140_p2");
    sc_trace(mVcdFile, tmp_25_fu_1152_p3, "tmp_25_fu_1152_p3");
    sc_trace(mVcdFile, tmp_27_fu_1168_p3, "tmp_27_fu_1168_p3");
    sc_trace(mVcdFile, tmp_28_fu_1176_p2, "tmp_28_fu_1176_p2");
    sc_trace(mVcdFile, tmp_26_fu_1160_p3, "tmp_26_fu_1160_p3");
    sc_trace(mVcdFile, tmp_29_fu_1182_p1, "tmp_29_fu_1182_p1");
    sc_trace(mVcdFile, tmp_30_fu_1186_p1, "tmp_30_fu_1186_p1");
    sc_trace(mVcdFile, tmp_31_fu_1190_p2, "tmp_31_fu_1190_p2");
    sc_trace(mVcdFile, tmp_32_fu_1196_p2, "tmp_32_fu_1196_p2");
    sc_trace(mVcdFile, tmp_33_fu_1202_p2, "tmp_33_fu_1202_p2");
    sc_trace(mVcdFile, tmp_14_fu_1213_p2, "tmp_14_fu_1213_p2");
    sc_trace(mVcdFile, start_pos2_fu_1218_p3, "start_pos2_fu_1218_p3");
    sc_trace(mVcdFile, end_pos1_fu_1226_p2, "end_pos1_fu_1226_p2");
    sc_trace(mVcdFile, tmp_36_fu_1238_p1, "tmp_36_fu_1238_p1");
    sc_trace(mVcdFile, tmp_37_fu_1242_p1, "tmp_37_fu_1242_p1");
    sc_trace(mVcdFile, tmp_35_fu_1232_p2, "tmp_35_fu_1232_p2");
    sc_trace(mVcdFile, tmp_39_fu_1256_p2, "tmp_39_fu_1256_p2");
    sc_trace(mVcdFile, tmp_41_fu_1268_p2, "tmp_41_fu_1268_p2");
    sc_trace(mVcdFile, tmp_38_fu_1246_p4, "tmp_38_fu_1246_p4");
    sc_trace(mVcdFile, tmp_40_fu_1262_p2, "tmp_40_fu_1262_p2");
    sc_trace(mVcdFile, tmp_42_fu_1274_p3, "tmp_42_fu_1274_p3");
    sc_trace(mVcdFile, tmp_44_fu_1290_p3, "tmp_44_fu_1290_p3");
    sc_trace(mVcdFile, tmp_45_fu_1298_p2, "tmp_45_fu_1298_p2");
    sc_trace(mVcdFile, tmp_43_fu_1282_p3, "tmp_43_fu_1282_p3");
    sc_trace(mVcdFile, tmp_46_fu_1304_p1, "tmp_46_fu_1304_p1");
    sc_trace(mVcdFile, tmp_47_fu_1308_p1, "tmp_47_fu_1308_p1");
    sc_trace(mVcdFile, tmp_48_fu_1312_p2, "tmp_48_fu_1312_p2");
    sc_trace(mVcdFile, tmp_49_fu_1318_p2, "tmp_49_fu_1318_p2");
    sc_trace(mVcdFile, tmp_50_fu_1324_p2, "tmp_50_fu_1324_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_sig_163, "ap_sig_163");
    sc_trace(mVcdFile, ap_sig_150, "ap_sig_150");
    sc_trace(mVcdFile, ap_sig_570, "ap_sig_570");
    sc_trace(mVcdFile, ap_sig_374, "ap_sig_374");
#endif

    }
    mHdltvinHandle.open("ddr_to_axis_reader_SD.hdltvin.dat");
    mHdltvoutHandle.open("ddr_to_axis_reader_SD.hdltvout.dat");
}

ddr_to_axis_reader_SD::~ddr_to_axis_reader_SD() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete ddr_to_axis_reader_SD_AXILiteS_s_axi_U;
    delete ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U;
    delete buffer_U;
}

void ddr_to_axis_reader_SD::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void ddr_to_axis_reader_SD::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_logic_0;
}

void ddr_to_axis_reader_SD::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv32_0;
}

void ddr_to_axis_reader_SD::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void ddr_to_axis_reader_SD::thread_ap_var_for_const9() {
    ap_var_for_const9 = ap_const_lv8_0;
}

void ddr_to_axis_reader_SD::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_200;
}

void ddr_to_axis_reader_SD::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv3_0;
}

void ddr_to_axis_reader_SD::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv2_0;
}

void ddr_to_axis_reader_SD::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv4_0;
}

void ddr_to_axis_reader_SD::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv64_0;
}

void ddr_to_axis_reader_SD::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        BASE_ADDRESS_r = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
             !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, p_BASE_ADDRESS_flag_fu_565_p2.read()))) {
            BASE_ADDRESS_r = tmp_7_base_address_fu_571_p3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        FRAME_BUFFER_DIM_r = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
             !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, p_FRAME_BUFFER_DIM_flag_fu_527_p2.read()))) {
            FRAME_BUFFER_DIM_r = frame_buffer_dim.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        FRAME_BUFFER_NUMBER_r = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
             !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, p_FRAME_BUFFER_NUMBER_flag_fu_547_p2.read()))) {
            FRAME_BUFFER_NUMBER_r = frame_buffer_number.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        FRAME_OFFSET = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
             !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, p_FRAME_OFFSET_flag_fu_541_p2.read()))) {
            FRAME_OFFSET = frame_buffer_offset.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_base_ddr_addr_ARREADY = ap_const_logic_0;
    } else {
        if (ap_sig_163.read()) {
            if (!(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_655_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read()))) {
                ap_reg_ioackin_base_ddr_addr_ARREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, base_ddr_addr_ARREADY.read())) {
                ap_reg_ioackin_base_ddr_addr_ARREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_outStream_channel_1_V_TREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
              !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read()))))) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
              !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
              !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read()))))) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_11.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it1.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
              !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outstream_channel_2_V_TREADY.read()))))))) {
            ap_reg_ioackin_outStream_channel_1_V_TREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, outStream_channel_1_V_TREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, outStream_channel_1_V_TREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_11.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it1.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, outStream_channel_1_V_TREADY.read())))) {
            ap_reg_ioackin_outStream_channel_1_V_TREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_outstream_channel_2_V_TREADY = ap_const_logic_0;
    } else {
        if (ap_sig_150.read()) {
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outstream_channel_2_V_TREADY.read()))))) {
                ap_reg_ioackin_outstream_channel_2_V_TREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, outstream_channel_2_V_TREADY.read())) {
                ap_reg_ioackin_outstream_channel_2_V_TREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_8.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_300.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_700_p2.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_8.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_300.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_700_p2.read()))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_8.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_300.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_700_p2.read())))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_300.read())) {
            ap_reg_ppiten_pp0_it2 = ap_reg_ppiten_pp0_it1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
            ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp1_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())))) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_717_p3.read()))) {
            ap_reg_ppiten_pp1_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_9.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, stereo_enabler_read_reg_1341.read()))) {
            ap_reg_ppiten_pp1_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp1_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())))) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_717_p3.read()))) {
            ap_reg_ppiten_pp1_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_9.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, stereo_enabler_read_reg_1341.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())))) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_717_p3.read())))) {
            ap_reg_ppiten_pp1_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp2_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_11.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outstream_channel_2_V_TREADY.read())))) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_1064_p3.read()))) {
            ap_reg_ppiten_pp2_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_9.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, stereo_enabler_read_reg_1341.read()))) {
            ap_reg_ppiten_pp2_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp2_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_11.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outstream_channel_2_V_TREADY.read())))) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_1064_p3.read()))) {
            ap_reg_ppiten_pp2_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_9.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, stereo_enabler_read_reg_1341.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_11.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outstream_channel_2_V_TREADY.read())))) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_1064_p3.read())))) {
            ap_reg_ppiten_pp2_it1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_12.read())) {
        i_reg_384 = i_1_reg_1393.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_384 = ap_const_lv20_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_1404.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_300.read()))) {
        indvar_reg_395 = indvar_next_reg_1408.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        indvar_reg_395 = ap_const_lv10_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inner_index = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_655_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read())) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_655_p2.read()))) {
            inner_index = storemerge_fu_686_p3.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_9.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, stereo_enabler_read_reg_1341.read()))) {
        j1_reg_428 = ap_const_lv13_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_11.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it0.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outstream_channel_2_V_TREADY.read())))) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_1064_p3.read()))) {
        j1_reg_428 = j_2_fu_1101_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, stereo_enabler_read_reg_1341.read()))) {
        j_reg_407 = ap_const_lv13_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())))) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_717_p3.read()))) {
        j_reg_407 = j_4_fu_846_p2.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        luma_chroma_switch = ap_const_lv32_0;
    } else {
        if (ap_sig_374.read()) {
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_fu_729_p2.read())) {
                luma_chroma_switch = ap_const_lv32_0;
            } else if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_fu_729_p2.read())) {
                luma_chroma_switch = tmp_20_fu_735_p2.read();
            }
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_12.read())) {
        offset1_reg_374 = offset_1_fu_1335_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        offset1_reg_374 = offset_fu_615_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_8.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_300.read()))) {
        ap_reg_ppstg_exitcond_reg_1404_pp0_iter1 = exitcond_reg_1404.read();
        ap_reg_ppstg_indvar_reg_395_pp0_iter1 = indvar_reg_395.read();
        exitcond_reg_1404 = exitcond_fu_700_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_1404.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_300.read()))) {
        base_ddr_addr_addr_read_reg_1413 = base_ddr_addr_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_ddr_to_axis_1_load_fu_468_p1.read()))) {
        guard_variable_for_ddr_to_axis = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_ddr_to_axis_2_load_fu_483_p1.read()))) {
        guard_variable_for_ddr_to_axis_1 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_ddr_to_axis_load_fu_453_p1.read()))) {
        guard_variable_for_ddr_to_axis_2 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_ddr_to_axis_3_load_fu_498_p1.read()))) {
        guard_variable_for_ddr_to_axis_3 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_655_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read())))) {
        i_1_reg_1393 = i_1_fu_660_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_8.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_300.read()))) {
        indvar_next_reg_1408 = indvar_next_fu_706_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        inner_index_load_reg_1345 = inner_index.read();
        stereo_enabler_read_reg_1341 =  (sc_lv<1>) (stereo_enabler.read());
        tmp_1_FRAME_BUFFER_NUMBER_loc_s_reg_1372 = tmp_1_FRAME_BUFFER_NUMBER_loc_s_fu_561_p1.read();
        tmp_5_reg_1385 = frame_buffer_dim_FRAME_BUFFER_s_fu_533_p3.read().range(31, 12);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())))))) {
        tmp_10_reg_1418 = j_reg_407.read().range(12, 12);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_11.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outstream_channel_2_V_TREADY.read())))) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_1064_p3.read()))) {
        tmp_11_reg_1455 = tmp_11_fu_1072_p1.read();
        tmp_13_reg_1466 = j1_reg_428.read().range(2, 1);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())))) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_717_p3.read()))) {
        tmp_18_reg_1422 = tmp_18_fu_729_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())))) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_717_p3.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_fu_729_p2.read()))) {
        tmp_52_reg_1436 = tmp_52_fu_779_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())))) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_717_p3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_fu_729_p2.read()))) {
        tmp_71_reg_1426 = tmp_71_fu_747_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_11.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outstream_channel_2_V_TREADY.read())))))) {
        tmp_reg_1451 = j1_reg_428.read().range(12, 12);
    }
}

void ddr_to_axis_reader_SD::thread_BASE_ADDRESS_flag_phi_fu_356_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        if (!esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_ddr_to_axis_3_load_fu_498_p1.read())) {
            BASE_ADDRESS_flag_phi_fu_356_p4 = ap_const_lv1_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_ddr_to_axis_3_load_fu_498_p1.read())) {
            BASE_ADDRESS_flag_phi_fu_356_p4 = ap_const_lv1_1;
        } else {
            BASE_ADDRESS_flag_phi_fu_356_p4 = "X";
        }
    } else {
        BASE_ADDRESS_flag_phi_fu_356_p4 = "X";
    }
}

void ddr_to_axis_reader_SD::thread_BASE_ADDRESS_loc_phi_fu_367_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        if (!esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_ddr_to_axis_3_load_fu_498_p1.read())) {
            BASE_ADDRESS_loc_phi_fu_367_p4 = BASE_ADDRESS_r.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_ddr_to_axis_3_load_fu_498_p1.read())) {
            BASE_ADDRESS_loc_phi_fu_367_p4 = base_address.read();
        } else {
            BASE_ADDRESS_loc_phi_fu_367_p4 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        BASE_ADDRESS_loc_phi_fu_367_p4 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void ddr_to_axis_reader_SD::thread_FRAME_BUFFER_DIM_flag_phi_fu_293_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        if (!esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_ddr_to_axis_load_fu_453_p1.read())) {
            FRAME_BUFFER_DIM_flag_phi_fu_293_p4 = ap_const_lv1_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_ddr_to_axis_load_fu_453_p1.read())) {
            FRAME_BUFFER_DIM_flag_phi_fu_293_p4 = ap_const_lv1_1;
        } else {
            FRAME_BUFFER_DIM_flag_phi_fu_293_p4 = "X";
        }
    } else {
        FRAME_BUFFER_DIM_flag_phi_fu_293_p4 = "X";
    }
}

void ddr_to_axis_reader_SD::thread_FRAME_BUFFER_DIM_loc_phi_fu_304_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        if (!esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_ddr_to_axis_load_fu_453_p1.read())) {
            FRAME_BUFFER_DIM_loc_phi_fu_304_p4 = FRAME_BUFFER_DIM_r.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_ddr_to_axis_load_fu_453_p1.read())) {
            FRAME_BUFFER_DIM_loc_phi_fu_304_p4 = frame_buffer_dim.read();
        } else {
            FRAME_BUFFER_DIM_loc_phi_fu_304_p4 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        FRAME_BUFFER_DIM_loc_phi_fu_304_p4 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void ddr_to_axis_reader_SD::thread_FRAME_BUFFER_NUMBER_flag_phi_fu_335_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        if (!esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_ddr_to_axis_2_load_fu_483_p1.read())) {
            FRAME_BUFFER_NUMBER_flag_phi_fu_335_p4 = ap_const_lv1_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_ddr_to_axis_2_load_fu_483_p1.read())) {
            FRAME_BUFFER_NUMBER_flag_phi_fu_335_p4 = ap_const_lv1_1;
        } else {
            FRAME_BUFFER_NUMBER_flag_phi_fu_335_p4 = "X";
        }
    } else {
        FRAME_BUFFER_NUMBER_flag_phi_fu_335_p4 = "X";
    }
}

void ddr_to_axis_reader_SD::thread_FRAME_BUFFER_NUMBER_loc_phi_fu_346_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        if (!esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_ddr_to_axis_2_load_fu_483_p1.read())) {
            FRAME_BUFFER_NUMBER_loc_phi_fu_346_p4 = FRAME_BUFFER_NUMBER_r.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_ddr_to_axis_2_load_fu_483_p1.read())) {
            FRAME_BUFFER_NUMBER_loc_phi_fu_346_p4 = frame_buffer_number.read();
        } else {
            FRAME_BUFFER_NUMBER_loc_phi_fu_346_p4 =  (sc_lv<8>) ("XXXXXXXX");
        }
    } else {
        FRAME_BUFFER_NUMBER_loc_phi_fu_346_p4 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void ddr_to_axis_reader_SD::thread_FRAME_OFFSET_flag_phi_fu_314_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        if (!esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_ddr_to_axis_1_load_fu_468_p1.read())) {
            FRAME_OFFSET_flag_phi_fu_314_p4 = ap_const_lv1_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_ddr_to_axis_1_load_fu_468_p1.read())) {
            FRAME_OFFSET_flag_phi_fu_314_p4 = ap_const_lv1_1;
        } else {
            FRAME_OFFSET_flag_phi_fu_314_p4 = "X";
        }
    } else {
        FRAME_OFFSET_flag_phi_fu_314_p4 = "X";
    }
}

void ddr_to_axis_reader_SD::thread_FRAME_OFFSET_loc_phi_fu_325_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        if (!esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_ddr_to_axis_1_load_fu_468_p1.read())) {
            FRAME_OFFSET_loc_phi_fu_325_p4 = FRAME_OFFSET.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_ddr_to_axis_1_load_fu_468_p1.read())) {
            FRAME_OFFSET_loc_phi_fu_325_p4 = frame_buffer_offset.read();
        } else {
            FRAME_OFFSET_loc_phi_fu_325_p4 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        FRAME_OFFSET_loc_phi_fu_325_p4 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void ddr_to_axis_reader_SD::thread_addrCmp1_fu_813_p2() {
    addrCmp1_fu_813_p2 = (!mem_index_gep_fu_797_p2.read().is_01() || !ap_const_lv14_204.is_01())? sc_lv<1>(): (sc_biguint<14>(mem_index_gep_fu_797_p2.read()) < sc_biguint<14>(ap_const_lv14_204));
}

void ddr_to_axis_reader_SD::thread_addrCmp_fu_807_p2() {
    addrCmp_fu_807_p2 = (!tmp_53_fu_783_p4.read().is_01() || !ap_const_lv10_3FC.is_01())? sc_lv<1>(): (sc_biguint<10>(tmp_53_fu_783_p4.read()) < sc_biguint<10>(ap_const_lv10_3FC));
}

void ddr_to_axis_reader_SD::thread_adjSize55_cast_fu_803_p1() {
    adjSize55_cast_fu_803_p1 = esl_zext<15,14>(mem_index_gep_fu_797_p2.read());
}

void ddr_to_axis_reader_SD::thread_adjSize_fu_793_p1() {
    adjSize_fu_793_p1 = esl_sext<14,10>(tmp_53_fu_783_p4.read());
}

void ddr_to_axis_reader_SD::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_655_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read())) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_655_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_655_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read())) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_655_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_ap_reg_phiprechg_j_1_reg_418pp1_it0() {
    ap_reg_phiprechg_j_1_reg_418pp1_it0 =  (sc_lv<13>) ("XXXXXXXXXXXXX");
}

void ddr_to_axis_reader_SD::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void ddr_to_axis_reader_SD::thread_ap_sig_118() {
    ap_sig_118 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void ddr_to_axis_reader_SD::thread_ap_sig_140() {
    ap_sig_140 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void ddr_to_axis_reader_SD::thread_ap_sig_150() {
    ap_sig_150 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_11.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()));
}

void ddr_to_axis_reader_SD::thread_ap_sig_158() {
    ap_sig_158 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void ddr_to_axis_reader_SD::thread_ap_sig_163() {
    ap_sig_163 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_655_p2.read()));
}

void ddr_to_axis_reader_SD::thread_ap_sig_169() {
    ap_sig_169 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void ddr_to_axis_reader_SD::thread_ap_sig_30() {
    ap_sig_30 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void ddr_to_axis_reader_SD::thread_ap_sig_300() {
    ap_sig_300 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_1404.read()) && esl_seteq<1,1,1>(base_ddr_addr_RVALID.read(), ap_const_logic_0));
}

void ddr_to_axis_reader_SD::thread_ap_sig_374() {
    ap_sig_374 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())))) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_717_p3.read()));
}

void ddr_to_axis_reader_SD::thread_ap_sig_403() {
    ap_sig_403 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(12, 12));
}

void ddr_to_axis_reader_SD::thread_ap_sig_410() {
    ap_sig_410 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void ddr_to_axis_reader_SD::thread_ap_sig_422() {
    ap_sig_422 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void ddr_to_axis_reader_SD::thread_ap_sig_570() {
    ap_sig_570 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_717_p3.read()));
}

void ddr_to_axis_reader_SD::thread_ap_sig_cseq_ST_pp0_stg0_fsm_8() {
    if (ap_sig_169.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_8 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_ap_sig_cseq_ST_pp1_stg0_fsm_10() {
    if (ap_sig_118.read()) {
        ap_sig_cseq_ST_pp1_stg0_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp1_stg0_fsm_10 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_ap_sig_cseq_ST_pp2_stg0_fsm_11() {
    if (ap_sig_140.read()) {
        ap_sig_cseq_ST_pp2_stg0_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp2_stg0_fsm_11 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_ap_sig_cseq_ST_st12_fsm_9() {
    if (ap_sig_422.read()) {
        ap_sig_cseq_ST_st12_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_9 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_ap_sig_cseq_ST_st17_fsm_12() {
    if (ap_sig_403.read()) {
        ap_sig_cseq_ST_st17_fsm_12 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st17_fsm_12 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_30.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_158.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_410.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_ap_sig_ioackin_base_ddr_addr_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_base_ddr_addr_ARREADY.read())) {
        ap_sig_ioackin_base_ddr_addr_ARREADY = base_ddr_addr_ARREADY.read();
    } else {
        ap_sig_ioackin_base_ddr_addr_ARREADY = ap_const_logic_1;
    }
}

void ddr_to_axis_reader_SD::thread_ap_sig_ioackin_outStream_channel_1_V_TREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_outStream_channel_1_V_TREADY.read())) {
        ap_sig_ioackin_outStream_channel_1_V_TREADY = outStream_channel_1_V_TREADY.read();
    } else {
        ap_sig_ioackin_outStream_channel_1_V_TREADY = ap_const_logic_1;
    }
}

void ddr_to_axis_reader_SD::thread_ap_sig_ioackin_outstream_channel_2_V_TREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_outstream_channel_2_V_TREADY.read())) {
        ap_sig_ioackin_outstream_channel_2_V_TREADY = outstream_channel_2_V_TREADY.read();
    } else {
        ap_sig_ioackin_outstream_channel_2_V_TREADY = ap_const_logic_1;
    }
}

void ddr_to_axis_reader_SD::thread_base_ddr_addr_ARADDR() {
    base_ddr_addr_ARADDR =  (sc_lv<32>) (tmp_1_fu_666_p1.read());
}

void ddr_to_axis_reader_SD::thread_base_ddr_addr_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_655_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_base_ddr_addr_ARREADY.read()))) {
        base_ddr_addr_ARVALID = ap_const_logic_1;
    } else {
        base_ddr_addr_ARVALID = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_base_ddr_addr_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_1404.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_300.read()))) {
        base_ddr_addr_RREADY = ap_const_logic_1;
    } else {
        base_ddr_addr_RREADY = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_base_ddr_addr_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_655_p2.read()))) {
        base_ddr_addr_blk_n_AR = m_axi_base_ddr_addr_ARREADY.read();
    } else {
        base_ddr_addr_blk_n_AR = ap_const_logic_1;
    }
}

void ddr_to_axis_reader_SD::thread_base_ddr_addr_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_1404.read()))) {
        base_ddr_addr_blk_n_R = m_axi_base_ddr_addr_RVALID.read();
    } else {
        base_ddr_addr_blk_n_R = ap_const_logic_1;
    }
}

void ddr_to_axis_reader_SD::thread_buffer_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it0.read()))) {
        buffer_address0 =  (sc_lv<9>) (gepindex276_cast_fu_1086_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_717_p3.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_fu_729_p2.read()))) {
        buffer_address0 =  (sc_lv<9>) (gepindex2_cast_fu_841_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_717_p3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_fu_729_p2.read()))) {
        buffer_address0 =  (sc_lv<9>) (gepindex264_cast_fu_761_p1.read());
    } else {
        buffer_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void ddr_to_axis_reader_SD::thread_buffer_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read())) {
        buffer_address1 =  (sc_lv<9>) (tmp_6_fu_712_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_11.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it0.read()))) {
        buffer_address1 =  (sc_lv<9>) (gepindex276_cast_fu_1086_p1.read());
    } else {
        buffer_address1 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void ddr_to_axis_reader_SD::thread_buffer_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_11.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it0.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outstream_channel_2_V_TREADY.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())))) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_717_p3.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_fu_729_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())))) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_717_p3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_fu_729_p2.read())))) {
        buffer_ce0 = ap_const_logic_1;
    } else {
        buffer_ce0 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_buffer_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_11.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it0.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outstream_channel_2_V_TREADY.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_300.read())))) {
        buffer_ce1 = ap_const_logic_1;
    } else {
        buffer_ce1 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_buffer_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_300.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_1404_pp0_iter1.read())))) {
        buffer_we1 = ap_const_logic_1;
    } else {
        buffer_we1 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_end_pos1_fu_1226_p2() {
    end_pos1_fu_1226_p2 = (start_pos2_fu_1218_p3.read() | ap_const_lv6_7);
}

void ddr_to_axis_reader_SD::thread_end_pos2_fu_965_p2() {
    end_pos2_fu_965_p2 = (start_pos_fu_958_p3.read() | ap_const_lv6_7);
}

void ddr_to_axis_reader_SD::thread_end_pos3_fu_859_p2() {
    end_pos3_fu_859_p2 = (start_pos3_fu_852_p3.read() | ap_const_lv6_7);
}

void ddr_to_axis_reader_SD::thread_end_pos_fu_1114_p2() {
    end_pos_fu_1114_p2 = (start_pos1_fu_1107_p3.read() | ap_const_lv6_7);
}

void ddr_to_axis_reader_SD::thread_exitcond1_fu_655_p2() {
    exitcond1_fu_655_p2 = (!i_reg_384.read().is_01() || !tmp_5_reg_1385.read().is_01())? sc_lv<1>(): sc_lv<1>(i_reg_384.read() == tmp_5_reg_1385.read());
}

void ddr_to_axis_reader_SD::thread_exitcond_fu_700_p2() {
    exitcond_fu_700_p2 = (!indvar_phi_fu_399_p4.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(indvar_phi_fu_399_p4.read() == ap_const_lv10_200);
}

void ddr_to_axis_reader_SD::thread_frame_buffer_dim_FRAME_BUFFER_s_fu_533_p0() {
    frame_buffer_dim_FRAME_BUFFER_s_fu_533_p0 =  (sc_lv<1>) (update_intr.read());
}

void ddr_to_axis_reader_SD::thread_frame_buffer_dim_FRAME_BUFFER_s_fu_533_p3() {
    frame_buffer_dim_FRAME_BUFFER_s_fu_533_p3 = (!frame_buffer_dim_FRAME_BUFFER_s_fu_533_p0.read()[0].is_01())? sc_lv<32>(): ((frame_buffer_dim_FRAME_BUFFER_s_fu_533_p0.read()[0].to_bool())? frame_buffer_dim.read(): FRAME_BUFFER_DIM_loc_phi_fu_304_p4.read());
}

void ddr_to_axis_reader_SD::thread_frame_buffer_offset_FRAME_OFFS_fu_579_p0() {
    frame_buffer_offset_FRAME_OFFS_fu_579_p0 =  (sc_lv<1>) (update_intr.read());
}

void ddr_to_axis_reader_SD::thread_frame_buffer_offset_FRAME_OFFS_fu_579_p3() {
    frame_buffer_offset_FRAME_OFFS_fu_579_p3 = (!frame_buffer_offset_FRAME_OFFS_fu_579_p0.read()[0].is_01())? sc_lv<32>(): ((frame_buffer_offset_FRAME_OFFS_fu_579_p0.read()[0].to_bool())? frame_buffer_offset.read(): FRAME_OFFSET_loc_phi_fu_325_p4.read());
}

void ddr_to_axis_reader_SD::thread_gepindex1_fu_825_p3() {
    gepindex1_fu_825_p3 = (!addrCmp_fu_807_p2.read()[0].is_01())? sc_lv<15>(): ((addrCmp_fu_807_p2.read()[0].to_bool())? gepindex_fu_819_p2.read(): ap_const_lv15_1FF);
}

void ddr_to_axis_reader_SD::thread_gepindex264_cast_fu_761_p1() {
    gepindex264_cast_fu_761_p1 = esl_zext<64,9>(gepindex62_cast_fu_751_p4.read());
}

void ddr_to_axis_reader_SD::thread_gepindex276_cast_fu_1086_p1() {
    gepindex276_cast_fu_1086_p1 = esl_zext<64,9>(gepindex74_cast_fu_1076_p4.read());
}

void ddr_to_axis_reader_SD::thread_gepindex2_cast_fu_841_p1() {
    gepindex2_cast_fu_841_p1 = esl_sext<64,15>(gepindex2_fu_833_p3.read());
}

void ddr_to_axis_reader_SD::thread_gepindex2_fu_833_p3() {
    gepindex2_fu_833_p3 = (!addrCmp1_fu_813_p2.read()[0].is_01())? sc_lv<15>(): ((addrCmp1_fu_813_p2.read()[0].to_bool())? gepindex1_fu_825_p3.read(): ap_const_lv15_1FF);
}

void ddr_to_axis_reader_SD::thread_gepindex62_cast_fu_751_p4() {
    gepindex62_cast_fu_751_p4 = j_reg_407.read().range(11, 3);
}

void ddr_to_axis_reader_SD::thread_gepindex74_cast_fu_1076_p4() {
    gepindex74_cast_fu_1076_p4 = j1_reg_428.read().range(11, 3);
}

void ddr_to_axis_reader_SD::thread_gepindex_fu_819_p2() {
    gepindex_fu_819_p2 = (!ap_const_lv15_7FFC.is_01() || !adjSize55_cast_fu_803_p1.read().is_01())? sc_lv<15>(): (sc_bigint<15>(ap_const_lv15_7FFC) + sc_biguint<15>(adjSize55_cast_fu_803_p1.read()));
}

void ddr_to_axis_reader_SD::thread_grp_fu_439_p4() {
    grp_fu_439_p4 = buffer_q0.read().range(0, 63);
}

void ddr_to_axis_reader_SD::thread_guard_variable_for_ddr_to_axis_1_load_fu_468_p1() {
    guard_variable_for_ddr_to_axis_1_load_fu_468_p1 = guard_variable_for_ddr_to_axis.read();
}

void ddr_to_axis_reader_SD::thread_guard_variable_for_ddr_to_axis_2_load_fu_483_p1() {
    guard_variable_for_ddr_to_axis_2_load_fu_483_p1 = guard_variable_for_ddr_to_axis_1.read();
}

void ddr_to_axis_reader_SD::thread_guard_variable_for_ddr_to_axis_3_load_fu_498_p1() {
    guard_variable_for_ddr_to_axis_3_load_fu_498_p1 = guard_variable_for_ddr_to_axis_3.read();
}

void ddr_to_axis_reader_SD::thread_guard_variable_for_ddr_to_axis_load_fu_453_p1() {
    guard_variable_for_ddr_to_axis_load_fu_453_p1 = guard_variable_for_ddr_to_axis_2.read();
}

void ddr_to_axis_reader_SD::thread_i_1_fu_660_p2() {
    i_1_fu_660_p2 = (!i_reg_384.read().is_01() || !ap_const_lv20_1.is_01())? sc_lv<20>(): (sc_biguint<20>(i_reg_384.read()) + sc_biguint<20>(ap_const_lv20_1));
}

void ddr_to_axis_reader_SD::thread_indvar_next_fu_706_p2() {
    indvar_next_fu_706_p2 = (!indvar_phi_fu_399_p4.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(indvar_phi_fu_399_p4.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void ddr_to_axis_reader_SD::thread_indvar_phi_fu_399_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_1404.read()))) {
        indvar_phi_fu_399_p4 = indvar_next_reg_1408.read();
    } else {
        indvar_phi_fu_399_p4 = indvar_reg_395.read();
    }
}

void ddr_to_axis_reader_SD::thread_j_1_phi_fu_421_p4() {
    if (ap_sig_570.read()) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_fu_729_p2.read())) {
            j_1_phi_fu_421_p4 = j_reg_407.read();
        } else if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_fu_729_p2.read())) {
            j_1_phi_fu_421_p4 = j_3_fu_772_p2.read();
        } else {
            j_1_phi_fu_421_p4 = ap_reg_phiprechg_j_1_reg_418pp1_it0.read();
        }
    } else {
        j_1_phi_fu_421_p4 = ap_reg_phiprechg_j_1_reg_418pp1_it0.read();
    }
}

void ddr_to_axis_reader_SD::thread_j_2_fu_1101_p2() {
    j_2_fu_1101_p2 = (!ap_const_lv13_2.is_01() || !j1_reg_428.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_2) + sc_biguint<13>(j1_reg_428.read()));
}

void ddr_to_axis_reader_SD::thread_j_3_fu_772_p2() {
    j_3_fu_772_p2 = (!ap_const_lv13_1FFF.is_01() || !j_reg_407.read().is_01())? sc_lv<13>(): (sc_bigint<13>(ap_const_lv13_1FFF) + sc_biguint<13>(j_reg_407.read()));
}

void ddr_to_axis_reader_SD::thread_j_4_fu_846_p2() {
    j_4_fu_846_p2 = (!j_1_phi_fu_421_p4.read().is_01() || !ap_const_lv13_1.is_01())? sc_lv<13>(): (sc_biguint<13>(j_1_phi_fu_421_p4.read()) + sc_biguint<13>(ap_const_lv13_1));
}

void ddr_to_axis_reader_SD::thread_mem_index_gep_fu_797_p2() {
    mem_index_gep_fu_797_p2 = (!ap_const_lv14_4.is_01() || !adjSize_fu_793_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(ap_const_lv14_4) + sc_bigint<14>(adjSize_fu_793_p1.read()));
}

void ddr_to_axis_reader_SD::thread_offset_1_fu_1335_p2() {
    offset_1_fu_1335_p2 = (!offset1_reg_374.read().is_01() || !ap_const_lv32_200.is_01())? sc_lv<32>(): (sc_biguint<32>(offset1_reg_374.read()) + sc_biguint<32>(ap_const_lv32_200));
}

void ddr_to_axis_reader_SD::thread_offset_fu_615_p2() {
    offset_fu_615_p2 = (!tmp_9_fu_611_p1.read().is_01() || !tmp_7_BASE_ADDRESS_loc_fu_587_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_9_fu_611_p1.read()) + sc_biguint<32>(tmp_7_BASE_ADDRESS_loc_fu_587_p3.read()));
}

void ddr_to_axis_reader_SD::thread_outStream_channel_1_V_TDATA() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()))) {
        outStream_channel_1_V_TDATA = tmp_34_fu_1208_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()))) {
        outStream_channel_1_V_TDATA = tmp_70_fu_1059_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()))) {
        outStream_channel_1_V_TDATA = tmp_88_fu_953_p1.read();
    } else {
        outStream_channel_1_V_TDATA =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void ddr_to_axis_reader_SD::thread_outStream_channel_1_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_11.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read())))) {
        outStream_channel_1_V_TDATA_blk_n = outStream_channel_1_V_TREADY.read();
    } else {
        outStream_channel_1_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void ddr_to_axis_reader_SD::thread_outStream_channel_1_V_TVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_outStream_channel_1_V_TREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_outStream_channel_1_V_TREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_11.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_outStream_channel_1_V_TREADY.read())))) {
        outStream_channel_1_V_TVALID = ap_const_logic_1;
    } else {
        outStream_channel_1_V_TVALID = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_outstream_channel_2_V_TDATA() {
    outstream_channel_2_V_TDATA = tmp_50_fu_1324_p2.read().range(8-1, 0);
}

void ddr_to_axis_reader_SD::thread_outstream_channel_2_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()))) {
        outstream_channel_2_V_TDATA_blk_n = outstream_channel_2_V_TREADY.read();
    } else {
        outstream_channel_2_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void ddr_to_axis_reader_SD::thread_outstream_channel_2_V_TVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_outstream_channel_2_V_TREADY.read()))) {
        outstream_channel_2_V_TVALID = ap_const_logic_1;
    } else {
        outstream_channel_2_V_TVALID = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_p_BASE_ADDRESS_flag_fu_565_p1() {
    p_BASE_ADDRESS_flag_fu_565_p1 =  (sc_lv<1>) (update_intr.read());
}

void ddr_to_axis_reader_SD::thread_p_BASE_ADDRESS_flag_fu_565_p2() {
    p_BASE_ADDRESS_flag_fu_565_p2 = (BASE_ADDRESS_flag_phi_fu_356_p4.read() | p_BASE_ADDRESS_flag_fu_565_p1.read());
}

void ddr_to_axis_reader_SD::thread_p_FRAME_BUFFER_DIM_flag_fu_527_p1() {
    p_FRAME_BUFFER_DIM_flag_fu_527_p1 =  (sc_lv<1>) (update_intr.read());
}

void ddr_to_axis_reader_SD::thread_p_FRAME_BUFFER_DIM_flag_fu_527_p2() {
    p_FRAME_BUFFER_DIM_flag_fu_527_p2 = (FRAME_BUFFER_DIM_flag_phi_fu_293_p4.read() | p_FRAME_BUFFER_DIM_flag_fu_527_p1.read());
}

void ddr_to_axis_reader_SD::thread_p_FRAME_BUFFER_NUMBER_flag_fu_547_p1() {
    p_FRAME_BUFFER_NUMBER_flag_fu_547_p1 =  (sc_lv<1>) (update_intr.read());
}

void ddr_to_axis_reader_SD::thread_p_FRAME_BUFFER_NUMBER_flag_fu_547_p2() {
    p_FRAME_BUFFER_NUMBER_flag_fu_547_p2 = (FRAME_BUFFER_NUMBER_flag_phi_fu_335_p4.read() | p_FRAME_BUFFER_NUMBER_flag_fu_547_p1.read());
}

void ddr_to_axis_reader_SD::thread_p_FRAME_OFFSET_flag_fu_541_p1() {
    p_FRAME_OFFSET_flag_fu_541_p1 =  (sc_lv<1>) (update_intr.read());
}

void ddr_to_axis_reader_SD::thread_p_FRAME_OFFSET_flag_fu_541_p2() {
    p_FRAME_OFFSET_flag_fu_541_p2 = (FRAME_OFFSET_flag_phi_fu_314_p4.read() | p_FRAME_OFFSET_flag_fu_541_p1.read());
}

void ddr_to_axis_reader_SD::thread_start_pos1_fu_1107_p3() {
    start_pos1_fu_1107_p3 = esl_concat<2,4>(tmp_13_reg_1466.read(), ap_const_lv4_0);
}

void ddr_to_axis_reader_SD::thread_start_pos2_fu_1218_p3() {
    start_pos2_fu_1218_p3 = esl_concat<3,3>(tmp_14_fu_1213_p2.read(), ap_const_lv3_0);
}

void ddr_to_axis_reader_SD::thread_start_pos3_fu_852_p3() {
    start_pos3_fu_852_p3 = esl_concat<3,3>(tmp_71_reg_1426.read(), ap_const_lv3_0);
}

void ddr_to_axis_reader_SD::thread_start_pos_fu_958_p3() {
    start_pos_fu_958_p3 = esl_concat<3,3>(tmp_52_reg_1436.read(), ap_const_lv3_0);
}

void ddr_to_axis_reader_SD::thread_storemerge_fu_686_p3() {
    storemerge_fu_686_p3 = (!tmp_3_fu_677_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_3_fu_677_p2.read()[0].to_bool())? ap_const_lv32_0: tmp_4_fu_681_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_10_fu_717_p3() {
    tmp_10_fu_717_p3 = j_reg_407.read().range(12, 12);
}

void ddr_to_axis_reader_SD::thread_tmp_11_fu_1072_p1() {
    tmp_11_fu_1072_p1 = j1_reg_428.read().range(3-1, 0);
}

void ddr_to_axis_reader_SD::thread_tmp_14_fu_1213_p2() {
    tmp_14_fu_1213_p2 = (tmp_11_reg_1455.read() | ap_const_lv3_1);
}

void ddr_to_axis_reader_SD::thread_tmp_15_fu_1120_p2() {
    tmp_15_fu_1120_p2 = (!start_pos1_fu_1107_p3.read().is_01() || !end_pos_fu_1114_p2.read().is_01())? sc_lv<1>(): (sc_biguint<6>(start_pos1_fu_1107_p3.read()) > sc_biguint<6>(end_pos_fu_1114_p2.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_17_fu_1126_p1() {
    tmp_17_fu_1126_p1 = esl_zext<7,6>(start_pos1_fu_1107_p3.read());
}

void ddr_to_axis_reader_SD::thread_tmp_18_fu_729_p2() {
    tmp_18_fu_729_p2 = (!luma_chroma_switch.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<1>(): sc_lv<1>(luma_chroma_switch.read() == ap_const_lv32_1);
}

void ddr_to_axis_reader_SD::thread_tmp_19_fu_1130_p1() {
    tmp_19_fu_1130_p1 = esl_zext<7,6>(end_pos_fu_1114_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_1_FRAME_BUFFER_NUMBER_loc_fu_553_p0() {
    tmp_1_FRAME_BUFFER_NUMBER_loc_fu_553_p0 =  (sc_lv<1>) (update_intr.read());
}

void ddr_to_axis_reader_SD::thread_tmp_1_FRAME_BUFFER_NUMBER_loc_fu_553_p3() {
    tmp_1_FRAME_BUFFER_NUMBER_loc_fu_553_p3 = (!tmp_1_FRAME_BUFFER_NUMBER_loc_fu_553_p0.read()[0].is_01())? sc_lv<8>(): ((tmp_1_FRAME_BUFFER_NUMBER_loc_fu_553_p0.read()[0].to_bool())? frame_buffer_number.read(): FRAME_BUFFER_NUMBER_loc_phi_fu_346_p4.read());
}

void ddr_to_axis_reader_SD::thread_tmp_1_FRAME_BUFFER_NUMBER_loc_s_fu_561_p1() {
    tmp_1_FRAME_BUFFER_NUMBER_loc_s_fu_561_p1 = esl_zext<32,8>(tmp_1_FRAME_BUFFER_NUMBER_loc_fu_553_p3.read());
}

void ddr_to_axis_reader_SD::thread_tmp_1_fu_666_p1() {
    tmp_1_fu_666_p1 = esl_sext<64,32>(offset1_reg_374.read());
}

void ddr_to_axis_reader_SD::thread_tmp_20_fu_735_p2() {
    tmp_20_fu_735_p2 = (!ap_const_lv32_1.is_01() || !luma_chroma_switch.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(luma_chroma_switch.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_22_fu_1134_p2() {
    tmp_22_fu_1134_p2 = (!tmp_17_fu_1126_p1.read().is_01() || !tmp_19_fu_1130_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_17_fu_1126_p1.read()) - sc_biguint<7>(tmp_19_fu_1130_p1.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_23_fu_1140_p2() {
    tmp_23_fu_1140_p2 = (tmp_17_fu_1126_p1.read() ^ ap_const_lv7_3F);
}

void ddr_to_axis_reader_SD::thread_tmp_24_fu_1146_p2() {
    tmp_24_fu_1146_p2 = (!tmp_19_fu_1130_p1.read().is_01() || !tmp_17_fu_1126_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_19_fu_1130_p1.read()) - sc_biguint<7>(tmp_17_fu_1126_p1.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_25_fu_1152_p3() {
    tmp_25_fu_1152_p3 = (!tmp_15_fu_1120_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_15_fu_1120_p2.read()[0].to_bool())? tmp_22_fu_1134_p2.read(): tmp_24_fu_1146_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_26_fu_1160_p3() {
    tmp_26_fu_1160_p3 = (!tmp_15_fu_1120_p2.read()[0].is_01())? sc_lv<64>(): ((tmp_15_fu_1120_p2.read()[0].to_bool())? grp_fu_439_p4.read(): buffer_q0.read());
}

void ddr_to_axis_reader_SD::thread_tmp_27_fu_1168_p3() {
    tmp_27_fu_1168_p3 = (!tmp_15_fu_1120_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_15_fu_1120_p2.read()[0].to_bool())? tmp_23_fu_1140_p2.read(): tmp_17_fu_1126_p1.read());
}

void ddr_to_axis_reader_SD::thread_tmp_28_fu_1176_p2() {
    tmp_28_fu_1176_p2 = (!ap_const_lv7_3F.is_01() || !tmp_25_fu_1152_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_3F) - sc_biguint<7>(tmp_25_fu_1152_p3.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_29_fu_1182_p1() {
    tmp_29_fu_1182_p1 = esl_zext<64,7>(tmp_27_fu_1168_p3.read());
}

void ddr_to_axis_reader_SD::thread_tmp_2_fu_601_p4() {
    tmp_2_fu_601_p4 = tmp_s_fu_595_p2.read().range(31, 3);
}

void ddr_to_axis_reader_SD::thread_tmp_30_fu_1186_p1() {
    tmp_30_fu_1186_p1 = esl_zext<64,7>(tmp_28_fu_1176_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_31_fu_1190_p2() {
    tmp_31_fu_1190_p2 = (!tmp_29_fu_1182_p1.read().is_01())? sc_lv<64>(): tmp_26_fu_1160_p3.read() >> (unsigned short)tmp_29_fu_1182_p1.read().to_uint();
}

void ddr_to_axis_reader_SD::thread_tmp_32_fu_1196_p2() {
    tmp_32_fu_1196_p2 = (!tmp_30_fu_1186_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_FFFFFFFFFFFFFFFF >> (unsigned short)tmp_30_fu_1186_p1.read().to_uint();
}

void ddr_to_axis_reader_SD::thread_tmp_33_fu_1202_p2() {
    tmp_33_fu_1202_p2 = (tmp_31_fu_1190_p2.read() & tmp_32_fu_1196_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_34_fu_1208_p1() {
    tmp_34_fu_1208_p1 = tmp_33_fu_1202_p2.read().range(8-1, 0);
}

void ddr_to_axis_reader_SD::thread_tmp_35_fu_1232_p2() {
    tmp_35_fu_1232_p2 = (!start_pos2_fu_1218_p3.read().is_01() || !end_pos1_fu_1226_p2.read().is_01())? sc_lv<1>(): (sc_biguint<6>(start_pos2_fu_1218_p3.read()) > sc_biguint<6>(end_pos1_fu_1226_p2.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_36_fu_1238_p1() {
    tmp_36_fu_1238_p1 = esl_zext<7,6>(start_pos2_fu_1218_p3.read());
}

void ddr_to_axis_reader_SD::thread_tmp_37_fu_1242_p1() {
    tmp_37_fu_1242_p1 = esl_zext<7,6>(end_pos1_fu_1226_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_38_fu_1246_p4() {
    tmp_38_fu_1246_p4 = buffer_q1.read().range(0, 63);
}

void ddr_to_axis_reader_SD::thread_tmp_39_fu_1256_p2() {
    tmp_39_fu_1256_p2 = (!tmp_36_fu_1238_p1.read().is_01() || !tmp_37_fu_1242_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_36_fu_1238_p1.read()) - sc_biguint<7>(tmp_37_fu_1242_p1.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_3_fu_677_p2() {
    tmp_3_fu_677_p2 = (!inner_index_load_reg_1345.read().is_01() || !tmp_1_FRAME_BUFFER_NUMBER_loc_s_reg_1372.read().is_01())? sc_lv<1>(): sc_lv<1>(inner_index_load_reg_1345.read() == tmp_1_FRAME_BUFFER_NUMBER_loc_s_reg_1372.read());
}

void ddr_to_axis_reader_SD::thread_tmp_40_fu_1262_p2() {
    tmp_40_fu_1262_p2 = (tmp_36_fu_1238_p1.read() ^ ap_const_lv7_3F);
}

void ddr_to_axis_reader_SD::thread_tmp_41_fu_1268_p2() {
    tmp_41_fu_1268_p2 = (!tmp_37_fu_1242_p1.read().is_01() || !tmp_36_fu_1238_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_37_fu_1242_p1.read()) - sc_biguint<7>(tmp_36_fu_1238_p1.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_42_fu_1274_p3() {
    tmp_42_fu_1274_p3 = (!tmp_35_fu_1232_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_35_fu_1232_p2.read()[0].to_bool())? tmp_39_fu_1256_p2.read(): tmp_41_fu_1268_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_43_fu_1282_p3() {
    tmp_43_fu_1282_p3 = (!tmp_35_fu_1232_p2.read()[0].is_01())? sc_lv<64>(): ((tmp_35_fu_1232_p2.read()[0].to_bool())? tmp_38_fu_1246_p4.read(): buffer_q1.read());
}

void ddr_to_axis_reader_SD::thread_tmp_44_fu_1290_p3() {
    tmp_44_fu_1290_p3 = (!tmp_35_fu_1232_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_35_fu_1232_p2.read()[0].to_bool())? tmp_40_fu_1262_p2.read(): tmp_36_fu_1238_p1.read());
}

void ddr_to_axis_reader_SD::thread_tmp_45_fu_1298_p2() {
    tmp_45_fu_1298_p2 = (!ap_const_lv7_3F.is_01() || !tmp_42_fu_1274_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_3F) - sc_biguint<7>(tmp_42_fu_1274_p3.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_46_fu_1304_p1() {
    tmp_46_fu_1304_p1 = esl_zext<64,7>(tmp_44_fu_1290_p3.read());
}

void ddr_to_axis_reader_SD::thread_tmp_47_fu_1308_p1() {
    tmp_47_fu_1308_p1 = esl_zext<64,7>(tmp_45_fu_1298_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_48_fu_1312_p2() {
    tmp_48_fu_1312_p2 = (!tmp_46_fu_1304_p1.read().is_01())? sc_lv<64>(): tmp_43_fu_1282_p3.read() >> (unsigned short)tmp_46_fu_1304_p1.read().to_uint();
}

void ddr_to_axis_reader_SD::thread_tmp_49_fu_1318_p2() {
    tmp_49_fu_1318_p2 = (!tmp_47_fu_1308_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_FFFFFFFFFFFFFFFF >> (unsigned short)tmp_47_fu_1308_p1.read().to_uint();
}

void ddr_to_axis_reader_SD::thread_tmp_4_fu_681_p2() {
    tmp_4_fu_681_p2 = (!inner_index_load_reg_1345.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(inner_index_load_reg_1345.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void ddr_to_axis_reader_SD::thread_tmp_50_fu_1324_p2() {
    tmp_50_fu_1324_p2 = (tmp_48_fu_1312_p2.read() & tmp_49_fu_1318_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_52_fu_779_p1() {
    tmp_52_fu_779_p1 = j_3_fu_772_p2.read().range(3-1, 0);
}

void ddr_to_axis_reader_SD::thread_tmp_53_fu_783_p4() {
    tmp_53_fu_783_p4 = j_3_fu_772_p2.read().range(12, 3);
}

void ddr_to_axis_reader_SD::thread_tmp_54_fu_971_p2() {
    tmp_54_fu_971_p2 = (!start_pos_fu_958_p3.read().is_01() || !end_pos2_fu_965_p2.read().is_01())? sc_lv<1>(): (sc_biguint<6>(start_pos_fu_958_p3.read()) > sc_biguint<6>(end_pos2_fu_965_p2.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_55_fu_977_p1() {
    tmp_55_fu_977_p1 = esl_zext<7,6>(start_pos_fu_958_p3.read());
}

void ddr_to_axis_reader_SD::thread_tmp_56_fu_981_p1() {
    tmp_56_fu_981_p1 = esl_zext<7,6>(end_pos2_fu_965_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_58_fu_985_p2() {
    tmp_58_fu_985_p2 = (!tmp_55_fu_977_p1.read().is_01() || !tmp_56_fu_981_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_55_fu_977_p1.read()) - sc_biguint<7>(tmp_56_fu_981_p1.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_59_fu_991_p2() {
    tmp_59_fu_991_p2 = (tmp_55_fu_977_p1.read() ^ ap_const_lv7_3F);
}

void ddr_to_axis_reader_SD::thread_tmp_60_fu_997_p2() {
    tmp_60_fu_997_p2 = (!tmp_56_fu_981_p1.read().is_01() || !tmp_55_fu_977_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_56_fu_981_p1.read()) - sc_biguint<7>(tmp_55_fu_977_p1.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_61_fu_1003_p3() {
    tmp_61_fu_1003_p3 = (!tmp_54_fu_971_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_54_fu_971_p2.read()[0].to_bool())? tmp_58_fu_985_p2.read(): tmp_60_fu_997_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_62_fu_1011_p3() {
    tmp_62_fu_1011_p3 = (!tmp_54_fu_971_p2.read()[0].is_01())? sc_lv<64>(): ((tmp_54_fu_971_p2.read()[0].to_bool())? grp_fu_439_p4.read(): buffer_q0.read());
}

void ddr_to_axis_reader_SD::thread_tmp_63_fu_1019_p3() {
    tmp_63_fu_1019_p3 = (!tmp_54_fu_971_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_54_fu_971_p2.read()[0].to_bool())? tmp_59_fu_991_p2.read(): tmp_55_fu_977_p1.read());
}

void ddr_to_axis_reader_SD::thread_tmp_64_fu_1027_p2() {
    tmp_64_fu_1027_p2 = (!ap_const_lv7_3F.is_01() || !tmp_61_fu_1003_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_3F) - sc_biguint<7>(tmp_61_fu_1003_p3.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_65_fu_1033_p1() {
    tmp_65_fu_1033_p1 = esl_zext<64,7>(tmp_63_fu_1019_p3.read());
}

void ddr_to_axis_reader_SD::thread_tmp_66_fu_1037_p1() {
    tmp_66_fu_1037_p1 = esl_zext<64,7>(tmp_64_fu_1027_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_67_fu_1041_p2() {
    tmp_67_fu_1041_p2 = (!tmp_65_fu_1033_p1.read().is_01())? sc_lv<64>(): tmp_62_fu_1011_p3.read() >> (unsigned short)tmp_65_fu_1033_p1.read().to_uint();
}

void ddr_to_axis_reader_SD::thread_tmp_68_fu_1047_p2() {
    tmp_68_fu_1047_p2 = (!tmp_66_fu_1037_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_FFFFFFFFFFFFFFFF >> (unsigned short)tmp_66_fu_1037_p1.read().to_uint();
}

void ddr_to_axis_reader_SD::thread_tmp_69_fu_1053_p2() {
    tmp_69_fu_1053_p2 = (tmp_67_fu_1041_p2.read() & tmp_68_fu_1047_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_6_fu_712_p1() {
    tmp_6_fu_712_p1 = esl_zext<64,10>(ap_reg_ppstg_indvar_reg_395_pp0_iter1.read());
}

void ddr_to_axis_reader_SD::thread_tmp_70_fu_1059_p1() {
    tmp_70_fu_1059_p1 = tmp_69_fu_1053_p2.read().range(8-1, 0);
}

void ddr_to_axis_reader_SD::thread_tmp_71_fu_747_p1() {
    tmp_71_fu_747_p1 = j_reg_407.read().range(3-1, 0);
}

void ddr_to_axis_reader_SD::thread_tmp_72_fu_865_p2() {
    tmp_72_fu_865_p2 = (!start_pos3_fu_852_p3.read().is_01() || !end_pos3_fu_859_p2.read().is_01())? sc_lv<1>(): (sc_biguint<6>(start_pos3_fu_852_p3.read()) > sc_biguint<6>(end_pos3_fu_859_p2.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_73_fu_871_p1() {
    tmp_73_fu_871_p1 = esl_zext<7,6>(start_pos3_fu_852_p3.read());
}

void ddr_to_axis_reader_SD::thread_tmp_74_fu_875_p1() {
    tmp_74_fu_875_p1 = esl_zext<7,6>(end_pos3_fu_859_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_76_fu_879_p2() {
    tmp_76_fu_879_p2 = (!tmp_73_fu_871_p1.read().is_01() || !tmp_74_fu_875_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_73_fu_871_p1.read()) - sc_biguint<7>(tmp_74_fu_875_p1.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_77_fu_885_p2() {
    tmp_77_fu_885_p2 = (tmp_73_fu_871_p1.read() ^ ap_const_lv7_3F);
}

void ddr_to_axis_reader_SD::thread_tmp_78_fu_891_p2() {
    tmp_78_fu_891_p2 = (!tmp_74_fu_875_p1.read().is_01() || !tmp_73_fu_871_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_74_fu_875_p1.read()) - sc_biguint<7>(tmp_73_fu_871_p1.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_79_fu_897_p3() {
    tmp_79_fu_897_p3 = (!tmp_72_fu_865_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_72_fu_865_p2.read()[0].to_bool())? tmp_76_fu_879_p2.read(): tmp_78_fu_891_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_7_BASE_ADDRESS_loc_fu_587_p0() {
    tmp_7_BASE_ADDRESS_loc_fu_587_p0 =  (sc_lv<1>) (update_intr.read());
}

void ddr_to_axis_reader_SD::thread_tmp_7_BASE_ADDRESS_loc_fu_587_p3() {
    tmp_7_BASE_ADDRESS_loc_fu_587_p3 = (!tmp_7_BASE_ADDRESS_loc_fu_587_p0.read()[0].is_01())? sc_lv<32>(): ((tmp_7_BASE_ADDRESS_loc_fu_587_p0.read()[0].to_bool())? tmp_8_fu_523_p1.read(): BASE_ADDRESS_loc_phi_fu_367_p4.read());
}

void ddr_to_axis_reader_SD::thread_tmp_7_base_address_fu_571_p0() {
    tmp_7_base_address_fu_571_p0 =  (sc_lv<1>) (update_intr.read());
}

void ddr_to_axis_reader_SD::thread_tmp_7_base_address_fu_571_p3() {
    tmp_7_base_address_fu_571_p3 = (!tmp_7_base_address_fu_571_p0.read()[0].is_01())? sc_lv<32>(): ((tmp_7_base_address_fu_571_p0.read()[0].to_bool())? tmp_8_fu_523_p1.read(): base_address.read());
}

void ddr_to_axis_reader_SD::thread_tmp_7_fu_513_p4() {
    tmp_7_fu_513_p4 = base_address.read().range(31, 3);
}

void ddr_to_axis_reader_SD::thread_tmp_80_fu_905_p3() {
    tmp_80_fu_905_p3 = (!tmp_72_fu_865_p2.read()[0].is_01())? sc_lv<64>(): ((tmp_72_fu_865_p2.read()[0].to_bool())? grp_fu_439_p4.read(): buffer_q0.read());
}

void ddr_to_axis_reader_SD::thread_tmp_81_fu_913_p3() {
    tmp_81_fu_913_p3 = (!tmp_72_fu_865_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_72_fu_865_p2.read()[0].to_bool())? tmp_77_fu_885_p2.read(): tmp_73_fu_871_p1.read());
}

void ddr_to_axis_reader_SD::thread_tmp_82_fu_921_p2() {
    tmp_82_fu_921_p2 = (!ap_const_lv7_3F.is_01() || !tmp_79_fu_897_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_3F) - sc_biguint<7>(tmp_79_fu_897_p3.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_83_fu_927_p1() {
    tmp_83_fu_927_p1 = esl_zext<64,7>(tmp_81_fu_913_p3.read());
}

void ddr_to_axis_reader_SD::thread_tmp_84_fu_931_p1() {
    tmp_84_fu_931_p1 = esl_zext<64,7>(tmp_82_fu_921_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_85_fu_935_p2() {
    tmp_85_fu_935_p2 = (!tmp_83_fu_927_p1.read().is_01())? sc_lv<64>(): tmp_80_fu_905_p3.read() >> (unsigned short)tmp_83_fu_927_p1.read().to_uint();
}

void ddr_to_axis_reader_SD::thread_tmp_86_fu_941_p2() {
    tmp_86_fu_941_p2 = (!tmp_84_fu_931_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_FFFFFFFFFFFFFFFF >> (unsigned short)tmp_84_fu_931_p1.read().to_uint();
}

void ddr_to_axis_reader_SD::thread_tmp_87_fu_947_p2() {
    tmp_87_fu_947_p2 = (tmp_85_fu_935_p2.read() & tmp_86_fu_941_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_88_fu_953_p1() {
    tmp_88_fu_953_p1 = tmp_87_fu_947_p2.read().range(8-1, 0);
}

void ddr_to_axis_reader_SD::thread_tmp_8_fu_523_p1() {
    tmp_8_fu_523_p1 = esl_zext<32,29>(tmp_7_fu_513_p4.read());
}

void ddr_to_axis_reader_SD::thread_tmp_9_fu_611_p1() {
    tmp_9_fu_611_p1 = esl_zext<32,29>(tmp_2_fu_601_p4.read());
}

void ddr_to_axis_reader_SD::thread_tmp_fu_1064_p3() {
    tmp_fu_1064_p3 = j1_reg_428.read().range(12, 12);
}

void ddr_to_axis_reader_SD::thread_tmp_s_fu_595_p0() {
    tmp_s_fu_595_p0 = inner_index.read();
}

void ddr_to_axis_reader_SD::thread_tmp_s_fu_595_p2() {
    tmp_s_fu_595_p2 = (!tmp_s_fu_595_p0.read().is_01() || !frame_buffer_offset_FRAME_OFFS_fu_579_p3.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_s_fu_595_p0.read()) * sc_bigint<32>(frame_buffer_offset_FRAME_OFFS_fu_579_p3.read());
}

void ddr_to_axis_reader_SD::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_655_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read())) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_655_p2.read()))) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_655_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_655_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read())))) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_8;
            break;
        case 256 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_300.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_300.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_700_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_8;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_300.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_300.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_700_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_st12_fsm_9;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_8;
            }
            break;
        case 512 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, stereo_enabler_read_reg_1341.read())) {
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_11;
            } else {
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_10;
            }
            break;
        case 1024 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())))) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_717_p3.read()))) {
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_10;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1418.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_1422.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())))) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_717_p3.read()))) {
                ap_NS_fsm = ap_ST_st17_fsm_12;
            } else {
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_10;
            }
            break;
        case 2048 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outstream_channel_2_V_TREADY.read())))) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_1064_p3.read()))) {
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_11;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outStream_channel_1_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1451.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outstream_channel_2_V_TREADY.read())))) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_1064_p3.read()))) {
                ap_NS_fsm = ap_ST_st17_fsm_12;
            } else {
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_11;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<13>) ("XXXXXXXXXXXXX");
            break;
    }
}

void ddr_to_axis_reader_SD::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"outStream_channel_1_V_TDATA\" :  \"" << outStream_channel_1_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_channel_1_V_TVALID\" :  \"" << outStream_channel_1_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_channel_1_V_TREADY\" :  \"" << outStream_channel_1_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outstream_channel_2_V_TDATA\" :  \"" << outstream_channel_2_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outstream_channel_2_V_TVALID\" :  \"" << outstream_channel_2_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outstream_channel_2_V_TREADY\" :  \"" << outstream_channel_2_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWVALID\" :  \"" << m_axi_base_ddr_addr_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_AWREADY\" :  \"" << m_axi_base_ddr_addr_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWADDR\" :  \"" << m_axi_base_ddr_addr_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWID\" :  \"" << m_axi_base_ddr_addr_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWLEN\" :  \"" << m_axi_base_ddr_addr_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWSIZE\" :  \"" << m_axi_base_ddr_addr_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWBURST\" :  \"" << m_axi_base_ddr_addr_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWLOCK\" :  \"" << m_axi_base_ddr_addr_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWCACHE\" :  \"" << m_axi_base_ddr_addr_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWPROT\" :  \"" << m_axi_base_ddr_addr_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWQOS\" :  \"" << m_axi_base_ddr_addr_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWREGION\" :  \"" << m_axi_base_ddr_addr_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWUSER\" :  \"" << m_axi_base_ddr_addr_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WVALID\" :  \"" << m_axi_base_ddr_addr_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_WREADY\" :  \"" << m_axi_base_ddr_addr_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WDATA\" :  \"" << m_axi_base_ddr_addr_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WSTRB\" :  \"" << m_axi_base_ddr_addr_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WLAST\" :  \"" << m_axi_base_ddr_addr_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WID\" :  \"" << m_axi_base_ddr_addr_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WUSER\" :  \"" << m_axi_base_ddr_addr_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARVALID\" :  \"" << m_axi_base_ddr_addr_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_ARREADY\" :  \"" << m_axi_base_ddr_addr_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARADDR\" :  \"" << m_axi_base_ddr_addr_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARID\" :  \"" << m_axi_base_ddr_addr_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARLEN\" :  \"" << m_axi_base_ddr_addr_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARSIZE\" :  \"" << m_axi_base_ddr_addr_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARBURST\" :  \"" << m_axi_base_ddr_addr_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARLOCK\" :  \"" << m_axi_base_ddr_addr_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARCACHE\" :  \"" << m_axi_base_ddr_addr_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARPROT\" :  \"" << m_axi_base_ddr_addr_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARQOS\" :  \"" << m_axi_base_ddr_addr_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARREGION\" :  \"" << m_axi_base_ddr_addr_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARUSER\" :  \"" << m_axi_base_ddr_addr_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RVALID\" :  \"" << m_axi_base_ddr_addr_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_RREADY\" :  \"" << m_axi_base_ddr_addr_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RDATA\" :  \"" << m_axi_base_ddr_addr_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RLAST\" :  \"" << m_axi_base_ddr_addr_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RID\" :  \"" << m_axi_base_ddr_addr_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RUSER\" :  \"" << m_axi_base_ddr_addr_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RRESP\" :  \"" << m_axi_base_ddr_addr_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_BVALID\" :  \"" << m_axi_base_ddr_addr_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_BREADY\" :  \"" << m_axi_base_ddr_addr_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_BRESP\" :  \"" << m_axi_base_ddr_addr_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_BID\" :  \"" << m_axi_base_ddr_addr_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_BUSER\" :  \"" << m_axi_base_ddr_addr_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

