

================================================================
== Vivado HLS Report for 'ddr_to_axis_reader_SD'
================================================================
* Date:           Mon Sep 25 18:28:00 2017

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        DDR_TO_AXIS_READER_AXILITE_SD
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  42.00|     41.00|        1.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------------------+------+------+----------+-----------+-----------+-------------+----------+
        |                                |   Latency   | Iteration|  Initiation Interval  |     Trip    |          |
        |            Loop Name           |  min |  max |  Latency |  achieved |   target  |    Count    | Pipelined|
        +--------------------------------+------+------+----------+-----------+-----------+-------------+----------+
        |- Loop 1                        |     ?|     ?|         ?|          -|          -| 0 ~ 1048575 |    no    |
        | + memcpy.buffer.base_ddr_addr  |   513|   513|         3|          1|          1|          512|    yes   |
        | + Loop 1.2                     |     ?|     ?|         2|          1|          1|            ?|    yes   |
        | + Loop 1.3                     |  2048|  2048|         2|          1|          1|         2048|    yes   |
        +--------------------------------+------+------+----------+-----------+-----------+-------------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3
  * Pipeline-1: initiation interval (II) = 1, depth = 2
  * Pipeline-2: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 17
* Pipeline: 3
  Pipeline-0: II = 1, D = 3, States = { 9 10 11 }
  Pipeline-1: II = 1, D = 2, States = { 13 14 }
  Pipeline-2: II = 1, D = 2, States = { 15 16 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond1)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	12  / (exitcond)
	10  / (!exitcond)
10 --> 
	11  / true
11 --> 
	9  / true
12 --> 
	13  / (!stereo_enabler_read)
	15  / (stereo_enabler_read)
13 --> 
	17  / (tmp_10)
	14  / (!tmp_10)
14 --> 
	13  / true
15 --> 
	17  / (tmp)
	16  / (!tmp)
16 --> 
	15  / true
17 --> 
	2  / true
* FSM state operations: 

 <State 1>: 19.76ns
ST_1: stg_18 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i8* %outStream_channel_1_V), !map !7

ST_1: stg_19 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i8* %outstream_channel_2_V), !map !11

ST_1: stg_20 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i64* %base_ddr_addr), !map !15

ST_1: stg_21 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i32 %base_address), !map !21

ST_1: stg_22 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i32 %frame_buffer_dim), !map !27

ST_1: stg_23 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i32 %frame_buffer_offset), !map !31

ST_1: stg_24 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i8 %frame_buffer_number), !map !35

ST_1: stg_25 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i1 %update_intr), !map !39

ST_1: stg_26 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(i1 %stereo_enabler), !map !43

ST_1: stg_27 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecTopModule([22 x i8]* @ddr_to_axis_reader_SD_str) nounwind

ST_1: stereo_enabler_read [1/1] 1.00ns
:10  %stereo_enabler_read = call i1 @_ssdm_op_Read.s_axilite.i1(i1 %stereo_enabler)

ST_1: update_intr_read [1/1] 1.00ns
:11  %update_intr_read = call i1 @_ssdm_op_Read.s_axilite.i1(i1 %update_intr)

ST_1: frame_buffer_number_read [1/1] 1.00ns
:12  %frame_buffer_number_read = call i8 @_ssdm_op_Read.s_axilite.i8(i8 %frame_buffer_number)

ST_1: frame_buffer_offset_read [1/1] 1.00ns
:13  %frame_buffer_offset_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %frame_buffer_offset)

ST_1: frame_buffer_dim_read [1/1] 1.00ns
:14  %frame_buffer_dim_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %frame_buffer_dim)

ST_1: base_address_read [1/1] 1.00ns
:15  %base_address_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %base_address)

ST_1: buffer [1/1] 0.00ns
:16  %buffer = alloca [512 x i64], align 16

ST_1: stg_35 [1/1] 0.00ns
:17  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_36 [1/1] 0.00ns
:18  call void (...)* @_ssdm_op_SpecInterface(i32 %base_address, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_37 [1/1] 0.00ns
:19  call void (...)* @_ssdm_op_SpecInterface(i1 %update_intr, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_38 [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecInterface(i8 %frame_buffer_number, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_39 [1/1] 0.00ns
:21  call void (...)* @_ssdm_op_SpecInterface(i32 %frame_buffer_offset, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_40 [1/1] 0.00ns
:22  call void (...)* @_ssdm_op_SpecInterface(i32 %frame_buffer_dim, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_41 [1/1] 0.00ns
:23  call void (...)* @_ssdm_op_SpecInterface(i1 %stereo_enabler, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_42 [1/1] 0.00ns
:24  call void (...)* @_ssdm_op_SpecInterface(i8* %outStream_channel_1_V, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_43 [1/1] 0.00ns
:25  call void (...)* @_ssdm_op_SpecInterface(i8* %outstream_channel_2_V, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_44 [1/1] 0.00ns
:26  call void (...)* @_ssdm_op_SpecInterface(i64* %base_ddr_addr, [6 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 128, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1) nounwind

ST_1: stg_45 [1/1] 0.00ns
:27  call void (...)* @_ssdm_op_SpecMemCore([512 x i64]* %buffer, [1 x i8]* @p_str1, [12 x i8]* @p_str4, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: inner_index_load [1/1] 0.00ns
:28  %inner_index_load = load i32* @inner_index, align 4

ST_1: stg_47 [1/1] 0.00ns
:29  call void (...)* @_ssdm_op_SpecReset(i32* @inner_index, i32 1, [1 x i8]* @p_str1) nounwind

ST_1: stg_48 [1/1] 0.00ns
:30  call void (...)* @_ssdm_op_SpecReset(i32* @luma_chroma_switch, i32 1, [1 x i8]* @p_str1) nounwind

ST_1: guard_variable_for_ddr_to_axis [1/1] 0.00ns
:31  %guard_variable_for_ddr_to_axis = load i1* @guard_variable_for_ddr_to_axis_2, align 1

ST_1: FRAME_BUFFER_DIM_load [1/1] 0.00ns
:32  %FRAME_BUFFER_DIM_load = load i32* @FRAME_BUFFER_DIM_r, align 4

ST_1: stg_51 [1/1] 1.57ns
:33  br i1 %guard_variable_for_ddr_to_axis, label %._crit_edge, label %codeRepl1

ST_1: stg_52 [1/1] 0.00ns
codeRepl1:0  store i1 true, i1* @guard_variable_for_ddr_to_axis_2, align 1

ST_1: stg_53 [1/1] 1.57ns
codeRepl1:1  br label %._crit_edge

ST_1: FRAME_BUFFER_DIM_flag [1/1] 0.00ns
._crit_edge:0  %FRAME_BUFFER_DIM_flag = phi i1 [ true, %codeRepl1 ], [ false, %0 ]

ST_1: FRAME_BUFFER_DIM_loc [1/1] 0.00ns
._crit_edge:1  %FRAME_BUFFER_DIM_loc = phi i32 [ %frame_buffer_dim_read, %codeRepl1 ], [ %FRAME_BUFFER_DIM_load, %0 ]

ST_1: stg_56 [1/1] 0.00ns
._crit_edge:2  call void (...)* @_ssdm_op_SpecReset(i32* @FRAME_BUFFER_DIM_r, i32 1, [1 x i8]* @p_str1) nounwind

ST_1: guard_variable_for_ddr_to_axis_1 [1/1] 0.00ns
._crit_edge:3  %guard_variable_for_ddr_to_axis_1 = load i1* @guard_variable_for_ddr_to_axis, align 1

ST_1: FRAME_OFFSET_load [1/1] 0.00ns
._crit_edge:4  %FRAME_OFFSET_load = load i32* @FRAME_OFFSET, align 4

ST_1: stg_59 [1/1] 1.57ns
._crit_edge:5  br i1 %guard_variable_for_ddr_to_axis_1, label %._crit_edge14, label %codeRepl

ST_1: stg_60 [1/1] 0.00ns
codeRepl:0  store i1 true, i1* @guard_variable_for_ddr_to_axis, align 1

ST_1: stg_61 [1/1] 1.57ns
codeRepl:1  br label %._crit_edge14

ST_1: FRAME_OFFSET_flag [1/1] 0.00ns
._crit_edge14:0  %FRAME_OFFSET_flag = phi i1 [ true, %codeRepl ], [ false, %._crit_edge ]

ST_1: FRAME_OFFSET_loc [1/1] 0.00ns
._crit_edge14:1  %FRAME_OFFSET_loc = phi i32 [ %frame_buffer_offset_read, %codeRepl ], [ %FRAME_OFFSET_load, %._crit_edge ]

ST_1: stg_64 [1/1] 0.00ns
._crit_edge14:2  call void (...)* @_ssdm_op_SpecReset(i32* @FRAME_OFFSET, i32 1, [1 x i8]* @p_str1) nounwind

ST_1: guard_variable_for_ddr_to_axis_2 [1/1] 0.00ns
._crit_edge14:3  %guard_variable_for_ddr_to_axis_2 = load i1* @guard_variable_for_ddr_to_axis_1, align 1

ST_1: FRAME_BUFFER_NUMBER_load [1/1] 0.00ns
._crit_edge14:4  %FRAME_BUFFER_NUMBER_load = load i8* @FRAME_BUFFER_NUMBER_r, align 1

ST_1: stg_67 [1/1] 1.57ns
._crit_edge14:5  br i1 %guard_variable_for_ddr_to_axis_2, label %._crit_edge15, label %codeRepl2

ST_1: stg_68 [1/1] 0.00ns
codeRepl2:0  store i1 true, i1* @guard_variable_for_ddr_to_axis_1, align 1

ST_1: stg_69 [1/1] 1.57ns
codeRepl2:1  br label %._crit_edge15

ST_1: FRAME_BUFFER_NUMBER_flag [1/1] 0.00ns
._crit_edge15:0  %FRAME_BUFFER_NUMBER_flag = phi i1 [ true, %codeRepl2 ], [ false, %._crit_edge14 ]

ST_1: FRAME_BUFFER_NUMBER_loc [1/1] 0.00ns
._crit_edge15:1  %FRAME_BUFFER_NUMBER_loc = phi i8 [ %frame_buffer_number_read, %codeRepl2 ], [ %FRAME_BUFFER_NUMBER_load, %._crit_edge14 ]

ST_1: stg_72 [1/1] 0.00ns
._crit_edge15:2  call void (...)* @_ssdm_op_SpecReset(i8* @FRAME_BUFFER_NUMBER_r, i32 1, [1 x i8]* @p_str1) nounwind

ST_1: guard_variable_for_ddr_to_axis_3 [1/1] 0.00ns
._crit_edge15:3  %guard_variable_for_ddr_to_axis_3 = load i1* @guard_variable_for_ddr_to_axis_3, align 1

ST_1: BASE_ADDRESS_load [1/1] 0.00ns
._crit_edge15:4  %BASE_ADDRESS_load = load i32* @BASE_ADDRESS_r, align 4

ST_1: stg_75 [1/1] 1.57ns
._crit_edge15:5  br i1 %guard_variable_for_ddr_to_axis_3, label %._crit_edge16, label %codeRepl3

ST_1: stg_76 [1/1] 0.00ns
codeRepl3:0  store i1 true, i1* @guard_variable_for_ddr_to_axis_3, align 1

ST_1: stg_77 [1/1] 1.57ns
codeRepl3:1  br label %._crit_edge16

ST_1: BASE_ADDRESS_flag [1/1] 0.00ns (grouped into LUT with out node p_BASE_ADDRESS_flag)
._crit_edge16:0  %BASE_ADDRESS_flag = phi i1 [ true, %codeRepl3 ], [ false, %._crit_edge15 ]

ST_1: BASE_ADDRESS_loc [1/1] 0.00ns (grouped into LUT with out node offset)
._crit_edge16:1  %BASE_ADDRESS_loc = phi i32 [ %base_address_read, %codeRepl3 ], [ %BASE_ADDRESS_load, %._crit_edge15 ]

ST_1: stg_80 [1/1] 0.00ns
._crit_edge16:2  call void (...)* @_ssdm_op_SpecReset(i32* @BASE_ADDRESS_r, i32 1, [1 x i8]* @p_str1) nounwind

ST_1: tmp_7 [1/1] 0.00ns
._crit_edge16:3  %tmp_7 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %base_address_read, i32 3, i32 31)

ST_1: tmp_8 [1/1] 0.00ns
._crit_edge16:4  %tmp_8 = zext i29 %tmp_7 to i32

ST_1: p_FRAME_BUFFER_DIM_flag [1/1] 1.37ns
._crit_edge16:5  %p_FRAME_BUFFER_DIM_flag = or i1 %FRAME_BUFFER_DIM_flag, %update_intr_read

ST_1: frame_buffer_dim_FRAME_BUFFER_s [1/1] 1.37ns
._crit_edge16:6  %frame_buffer_dim_FRAME_BUFFER_s = select i1 %update_intr_read, i32 %frame_buffer_dim_read, i32 %FRAME_BUFFER_DIM_loc

ST_1: p_FRAME_OFFSET_flag [1/1] 1.37ns
._crit_edge16:7  %p_FRAME_OFFSET_flag = or i1 %FRAME_OFFSET_flag, %update_intr_read

ST_1: p_FRAME_BUFFER_NUMBER_flag [1/1] 1.37ns
._crit_edge16:8  %p_FRAME_BUFFER_NUMBER_flag = or i1 %FRAME_BUFFER_NUMBER_flag, %update_intr_read

ST_1: tmp_1_FRAME_BUFFER_NUMBER_loc [1/1] 1.37ns
._crit_edge16:9  %tmp_1_FRAME_BUFFER_NUMBER_loc = select i1 %update_intr_read, i8 %frame_buffer_number_read, i8 %FRAME_BUFFER_NUMBER_loc

ST_1: tmp_1_FRAME_BUFFER_NUMBER_loc_s [1/1] 0.00ns
._crit_edge16:10  %tmp_1_FRAME_BUFFER_NUMBER_loc_s = zext i8 %tmp_1_FRAME_BUFFER_NUMBER_loc to i32

ST_1: p_BASE_ADDRESS_flag [1/1] 1.37ns (out node of the LUT)
._crit_edge16:11  %p_BASE_ADDRESS_flag = or i1 %BASE_ADDRESS_flag, %update_intr_read

ST_1: tmp_7_base_address [1/1] 1.37ns
._crit_edge16:12  %tmp_7_base_address = select i1 %update_intr_read, i32 %tmp_8, i32 %base_address_read

ST_1: frame_buffer_offset_FRAME_OFFS [1/1] 0.00ns (grouped into LUT with out node tmp_s)
._crit_edge16:13  %frame_buffer_offset_FRAME_OFFS = select i1 %update_intr_read, i32 %frame_buffer_offset_read, i32 %FRAME_OFFSET_loc

ST_1: tmp_7_BASE_ADDRESS_loc [1/1] 0.00ns (grouped into LUT with out node offset)
._crit_edge16:14  %tmp_7_BASE_ADDRESS_loc = select i1 %update_intr_read, i32 %tmp_8, i32 %BASE_ADDRESS_loc

ST_1: tmp_s [1/1] 13.18ns (out node of the LUT)
._crit_edge16:15  %tmp_s = mul i32 %inner_index_load, %frame_buffer_offset_FRAME_OFFS

ST_1: tmp_2 [1/1] 0.00ns (grouped into LUT with out node offset)
._crit_edge16:16  %tmp_2 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %tmp_s, i32 3, i32 31)

ST_1: tmp_9 [1/1] 0.00ns (grouped into LUT with out node offset)
._crit_edge16:17  %tmp_9 = zext i29 %tmp_2 to i32

ST_1: offset [1/1] 2.44ns (out node of the LUT)
._crit_edge16:18  %offset = add i32 %tmp_9, %tmp_7_BASE_ADDRESS_loc

ST_1: stg_97 [1/1] 0.00ns
._crit_edge16:19  br i1 %p_BASE_ADDRESS_flag, label %mergeST21, label %._crit_edge17.new22

ST_1: stg_98 [1/1] 0.00ns
mergeST21:0  store i32 %tmp_7_base_address, i32* @BASE_ADDRESS_r, align 4

ST_1: stg_99 [1/1] 0.00ns
mergeST21:1  br label %._crit_edge17.new22

ST_1: stg_100 [1/1] 0.00ns
._crit_edge17.new22:0  br i1 %p_FRAME_BUFFER_NUMBER_flag, label %mergeST19, label %._crit_edge17.new20

ST_1: stg_101 [1/1] 0.00ns
mergeST19:0  store i8 %frame_buffer_number_read, i8* @FRAME_BUFFER_NUMBER_r, align 1

ST_1: stg_102 [1/1] 0.00ns
mergeST19:1  br label %._crit_edge17.new20

ST_1: stg_103 [1/1] 0.00ns
._crit_edge17.new20:0  br i1 %p_FRAME_OFFSET_flag, label %mergeST17, label %._crit_edge17.new18

ST_1: stg_104 [1/1] 0.00ns
mergeST17:0  store i32 %frame_buffer_offset_read, i32* @FRAME_OFFSET, align 4

ST_1: stg_105 [1/1] 0.00ns
mergeST17:1  br label %._crit_edge17.new18

ST_1: stg_106 [1/1] 0.00ns
._crit_edge17.new18:0  br i1 %p_FRAME_BUFFER_DIM_flag, label %mergeST, label %._crit_edge17.new

ST_1: stg_107 [1/1] 0.00ns
mergeST:0  store i32 %frame_buffer_dim_read, i32* @FRAME_BUFFER_DIM_r, align 4

ST_1: stg_108 [1/1] 0.00ns
mergeST:1  br label %._crit_edge17.new

ST_1: tmp_5 [1/1] 0.00ns
._crit_edge17.new:0  %tmp_5 = call i20 @_ssdm_op_PartSelect.i20.i32.i32.i32(i32 %frame_buffer_dim_FRAME_BUFFER_s, i32 12, i32 31)

ST_1: stg_110 [1/1] 1.57ns
._crit_edge17.new:1  br label %1


 <State 2>: 41.00ns
ST_2: offset1 [1/1] 0.00ns
:0  %offset1 = phi i32 [ %offset, %._crit_edge17.new ], [ %offset_1, %.loopexit ]

ST_2: i [1/1] 0.00ns
:1  %i = phi i20 [ 0, %._crit_edge17.new ], [ %i_1, %.loopexit ]

ST_2: exitcond1 [1/1] 2.34ns
:2  %exitcond1 = icmp eq i20 %i, %tmp_5

ST_2: i_1 [1/1] 2.08ns
:3  %i_1 = add i20 %i, 1

ST_2: stg_115 [1/1] 0.00ns
:4  br i1 %exitcond1, label %._crit_edge18, label %2

ST_2: tmp_1 [1/1] 0.00ns
:1  %tmp_1 = sext i32 %offset1 to i64

ST_2: base_ddr_addr_addr [1/1] 0.00ns
:2  %base_ddr_addr_addr = getelementptr inbounds i64* %base_ddr_addr, i64 %tmp_1

ST_2: base_ddr_addr_addr_1_rd_req [7/7] 41.00ns
:3  %base_ddr_addr_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)

ST_2: tmp_3 [1/1] 2.52ns
._crit_edge18:0  %tmp_3 = icmp eq i32 %inner_index_load, %tmp_1_FRAME_BUFFER_NUMBER_loc_s

ST_2: tmp_4 [1/1] 2.44ns
._crit_edge18:1  %tmp_4 = add nsw i32 %inner_index_load, 1

ST_2: storemerge [1/1] 1.37ns
._crit_edge18:2  %storemerge = select i1 %tmp_3, i32 0, i32 %tmp_4

ST_2: stg_122 [1/1] 0.00ns
._crit_edge18:3  store i32 %storemerge, i32* @inner_index, align 4

ST_2: stg_123 [1/1] 0.00ns
._crit_edge18:4  ret void


 <State 3>: 41.00ns
ST_3: base_ddr_addr_addr_1_rd_req [6/7] 41.00ns
:3  %base_ddr_addr_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)


 <State 4>: 41.00ns
ST_4: base_ddr_addr_addr_1_rd_req [5/7] 41.00ns
:3  %base_ddr_addr_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)


 <State 5>: 41.00ns
ST_5: base_ddr_addr_addr_1_rd_req [4/7] 41.00ns
:3  %base_ddr_addr_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)


 <State 6>: 41.00ns
ST_6: base_ddr_addr_addr_1_rd_req [3/7] 41.00ns
:3  %base_ddr_addr_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)


 <State 7>: 41.00ns
ST_7: base_ddr_addr_addr_1_rd_req [2/7] 41.00ns
:3  %base_ddr_addr_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)


 <State 8>: 41.00ns
ST_8: empty [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 1048575, i64 0)

ST_8: base_ddr_addr_addr_1_rd_req [1/7] 41.00ns
:3  %base_ddr_addr_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)

ST_8: stg_131 [1/1] 1.57ns
:4  br label %burst.rd.header


 <State 9>: 2.07ns
ST_9: indvar [1/1] 0.00ns
burst.rd.header:0  %indvar = phi i10 [ 0, %2 ], [ %indvar_next, %burst.rd.body ]

ST_9: exitcond [1/1] 2.07ns
burst.rd.header:1  %exitcond = icmp eq i10 %indvar, -512

ST_9: indvar_next [1/1] 1.84ns
burst.rd.header:2  %indvar_next = add i10 %indvar, 1

ST_9: stg_135 [1/1] 0.00ns
burst.rd.header:3  br i1 %exitcond, label %burst.rd.end, label %burst.rd.body


 <State 10>: 41.00ns
ST_10: base_ddr_addr_addr_read [1/1] 41.00ns
burst.rd.body:4  %base_ddr_addr_addr_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %base_ddr_addr_addr)


 <State 11>: 2.71ns
ST_11: empty_9 [1/1] 0.00ns
burst.rd.body:0  %empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 512, i64 512, i64 512)

ST_11: burstread_rbegin [1/1] 0.00ns
burst.rd.body:1  %burstread_rbegin = call i32 (...)* @_ssdm_op_SpecRegionBegin([17 x i8]* @burstread_OC_region_str) nounwind

ST_11: stg_139 [1/1] 0.00ns
burst.rd.body:2  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str7)

ST_11: empty_10 [1/1] 0.00ns
burst.rd.body:3  %empty_10 = call i32 (...)* @_ssdm_op_SpecLoopName([28 x i8]* @memcpy_OC_buffer_OC_base_ddr_a) nounwind

ST_11: tmp_6 [1/1] 0.00ns
burst.rd.body:5  %tmp_6 = zext i10 %indvar to i64

ST_11: buffer_addr [1/1] 0.00ns
burst.rd.body:6  %buffer_addr = getelementptr [512 x i64]* %buffer, i64 0, i64 %tmp_6

ST_11: stg_143 [1/1] 2.71ns
burst.rd.body:7  store i64 %base_ddr_addr_addr_read, i64* %buffer_addr, align 8

ST_11: burstread_rend [1/1] 0.00ns
burst.rd.body:8  %burstread_rend = call i32 (...)* @_ssdm_op_SpecRegionEnd([17 x i8]* @burstread_OC_region_str, i32 %burstread_rbegin) nounwind

ST_11: stg_145 [1/1] 0.00ns
burst.rd.body:9  br label %burst.rd.header


 <State 12>: 1.57ns
ST_12: stg_146 [1/1] 1.57ns
burst.rd.end:0  br i1 %stereo_enabler_read, label %.preheader, label %.preheader9


 <State 13>: 9.99ns
ST_13: j [1/1] 0.00ns
.preheader9:0  %j = phi i13 [ %j_4, %6 ], [ 0, %burst.rd.end ]

ST_13: tmp_10 [1/1] 0.00ns
.preheader9:1  %tmp_10 = call i1 @_ssdm_op_BitSelect.i1.i13.i32(i13 %j, i32 12)

ST_13: stg_149 [1/1] 0.00ns
.preheader9:2  br i1 %tmp_10, label %.loopexit, label %3

ST_13: tmp_16 [1/1] 0.00ns
:0  %tmp_16 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5)

ST_13: stg_151 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_13: luma_chroma_switch_load [1/1] 0.00ns
:2  %luma_chroma_switch_load = load i32* @luma_chroma_switch, align 4

ST_13: tmp_18 [1/1] 2.52ns
:3  %tmp_18 = icmp eq i32 %luma_chroma_switch_load, 1

ST_13: stg_154 [1/1] 0.00ns
:4  br i1 %tmp_18, label %4, label %5

ST_13: tmp_20 [1/1] 2.44ns
:0  %tmp_20 = add nsw i32 1, %luma_chroma_switch_load

ST_13: stg_156 [1/1] 1.57ns
:1  store i32 %tmp_20, i32* @luma_chroma_switch, align 4

ST_13: tmp_71 [1/1] 0.00ns
:2  %tmp_71 = trunc i13 %j to i3

ST_13: gepindex62_cast [1/1] 0.00ns
:3  %gepindex62_cast = call i9 @_ssdm_op_PartSelect.i9.i13.i32.i32(i13 %j, i32 3, i32 11)

ST_13: gepindex264_cast [1/1] 0.00ns
:4  %gepindex264_cast = zext i9 %gepindex62_cast to i64

ST_13: buffer_addr_3 [1/1] 0.00ns
:5  %buffer_addr_3 = getelementptr [512 x i64]* %buffer, i64 0, i64 %gepindex264_cast

ST_13: buffer_load_3 [2/2] 2.71ns
:6  %buffer_load_3 = load i64* %buffer_addr_3, align 8

ST_13: stg_162 [1/1] 1.57ns
:27  br label %6

ST_13: stg_163 [1/1] 1.57ns
:0  store i32 0, i32* @luma_chroma_switch, align 4

ST_13: j_3 [1/1] 1.96ns
:1  %j_3 = add i13 -1, %j

ST_13: tmp_52 [1/1] 0.00ns
:2  %tmp_52 = trunc i13 %j_3 to i3

ST_13: tmp_53 [1/1] 0.00ns
:3  %tmp_53 = call i10 @_ssdm_op_PartSelect.i10.i13.i32.i32(i13 %j_3, i32 3, i32 12)

ST_13: adjSize [1/1] 0.00ns
:4  %adjSize = sext i10 %tmp_53 to i14

ST_13: mem_index_gep [1/1] 1.84ns
:5  %mem_index_gep = add i14 4, %adjSize

ST_13: adjSize55_cast [1/1] 0.00ns
:6  %adjSize55_cast = zext i14 %mem_index_gep to i15

ST_13: addrCmp [1/1] 2.07ns
:7  %addrCmp = icmp ult i10 %tmp_53, -4

ST_13: addrCmp1 [1/1] 2.11ns
:8  %addrCmp1 = icmp ult i14 %mem_index_gep, 516

ST_13: gepindex [1/1] 1.84ns
:9  %gepindex = add i15 -4, %adjSize55_cast

ST_13: gepindex1 [1/1] 0.00ns (grouped into LUT with out node gepindex2)
:10  %gepindex1 = select i1 %addrCmp, i15 %gepindex, i15 511

ST_13: gepindex2 [1/1] 1.37ns (out node of the LUT)
:11  %gepindex2 = select i1 %addrCmp1, i15 %gepindex1, i15 511

ST_13: gepindex2_cast [1/1] 0.00ns
:12  %gepindex2_cast = sext i15 %gepindex2 to i64

ST_13: buffer_addr_2 [1/1] 0.00ns
:13  %buffer_addr_2 = getelementptr [512 x i64]* %buffer, i64 0, i64 %gepindex2_cast

ST_13: buffer_load_2 [2/2] 2.71ns
:14  %buffer_load_2 = load i64* %buffer_addr_2, align 8

ST_13: stg_178 [1/1] 1.57ns
:35  br label %6

ST_13: j_1 [1/1] 0.00ns (grouped into LUT with out node j_4)
:0  %j_1 = phi i13 [ %j_3, %4 ], [ %j, %5 ]

ST_13: empty_11 [1/1] 0.00ns
:1  %empty_11 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp_16)

ST_13: j_4 [1/1] 1.96ns (out node of the LUT)
:2  %j_4 = add i13 %j_1, 1

ST_13: stg_182 [1/1] 0.00ns
:3  br label %.preheader9


 <State 14>: 7.65ns
ST_14: buffer_load_3 [1/2] 2.71ns
:6  %buffer_load_3 = load i64* %buffer_addr_3, align 8

ST_14: start_pos3 [1/1] 0.00ns
:7  %start_pos3 = call i6 @_ssdm_op_BitConcatenate.i6.i3.i3(i3 %tmp_71, i3 0)

ST_14: end_pos3 [1/1] 0.00ns
:8  %end_pos3 = or i6 %start_pos3, 7

ST_14: tmp_72 [1/1] 1.94ns
:9  %tmp_72 = icmp ugt i6 %start_pos3, %end_pos3

ST_14: tmp_73 [1/1] 0.00ns
:10  %tmp_73 = zext i6 %start_pos3 to i7

ST_14: tmp_74 [1/1] 0.00ns
:11  %tmp_74 = zext i6 %end_pos3 to i7

ST_14: tmp_75 [1/1] 0.00ns (grouped into LUT with out node tmp_85)
:12  %tmp_75 = call i64 @llvm.part.select.i64(i64 %buffer_load_3, i32 63, i32 0)

ST_14: tmp_76 [1/1] 1.72ns
:13  %tmp_76 = sub i7 %tmp_73, %tmp_74

ST_14: tmp_77 [1/1] 0.00ns (grouped into LUT with out node tmp_85)
:14  %tmp_77 = xor i7 %tmp_73, 63

ST_14: tmp_78 [1/1] 1.72ns
:15  %tmp_78 = sub i7 %tmp_74, %tmp_73

ST_14: tmp_79 [1/1] 0.00ns (grouped into LUT with out node tmp_82)
:16  %tmp_79 = select i1 %tmp_72, i7 %tmp_76, i7 %tmp_78

ST_14: tmp_80 [1/1] 0.00ns (grouped into LUT with out node tmp_85)
:17  %tmp_80 = select i1 %tmp_72, i64 %tmp_75, i64 %buffer_load_3

ST_14: tmp_81 [1/1] 0.00ns (grouped into LUT with out node tmp_85)
:18  %tmp_81 = select i1 %tmp_72, i7 %tmp_77, i7 %tmp_73

ST_14: tmp_82 [1/1] 1.72ns (out node of the LUT)
:19  %tmp_82 = sub i7 63, %tmp_79

ST_14: tmp_83 [1/1] 0.00ns (grouped into LUT with out node tmp_85)
:20  %tmp_83 = zext i7 %tmp_81 to i64

ST_14: tmp_84 [1/1] 0.00ns (grouped into LUT with out node tmp_87)
:21  %tmp_84 = zext i7 %tmp_82 to i64

ST_14: tmp_85 [1/1] 3.57ns (out node of the LUT)
:22  %tmp_85 = lshr i64 %tmp_80, %tmp_83

ST_14: tmp_86 [1/1] 0.00ns (grouped into LUT with out node tmp_87)
:23  %tmp_86 = lshr i64 -1, %tmp_84

ST_14: tmp_87 [1/1] 1.37ns (out node of the LUT)
:24  %tmp_87 = and i64 %tmp_85, %tmp_86

ST_14: tmp_88 [1/1] 0.00ns
:25  %tmp_88 = trunc i64 %tmp_87 to i8

ST_14: stg_203 [1/1] 0.00ns
:26  call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outStream_channel_1_V, i8 %tmp_88)

ST_14: buffer_load_2 [1/2] 2.71ns
:14  %buffer_load_2 = load i64* %buffer_addr_2, align 8

ST_14: start_pos [1/1] 0.00ns
:15  %start_pos = call i6 @_ssdm_op_BitConcatenate.i6.i3.i3(i3 %tmp_52, i3 0)

ST_14: end_pos2 [1/1] 0.00ns
:16  %end_pos2 = or i6 %start_pos, 7

ST_14: tmp_54 [1/1] 1.94ns
:17  %tmp_54 = icmp ugt i6 %start_pos, %end_pos2

ST_14: tmp_55 [1/1] 0.00ns
:18  %tmp_55 = zext i6 %start_pos to i7

ST_14: tmp_56 [1/1] 0.00ns
:19  %tmp_56 = zext i6 %end_pos2 to i7

ST_14: tmp_57 [1/1] 0.00ns (grouped into LUT with out node tmp_67)
:20  %tmp_57 = call i64 @llvm.part.select.i64(i64 %buffer_load_2, i32 63, i32 0)

ST_14: tmp_58 [1/1] 1.72ns
:21  %tmp_58 = sub i7 %tmp_55, %tmp_56

ST_14: tmp_59 [1/1] 0.00ns (grouped into LUT with out node tmp_67)
:22  %tmp_59 = xor i7 %tmp_55, 63

ST_14: tmp_60 [1/1] 1.72ns
:23  %tmp_60 = sub i7 %tmp_56, %tmp_55

ST_14: tmp_61 [1/1] 0.00ns (grouped into LUT with out node tmp_64)
:24  %tmp_61 = select i1 %tmp_54, i7 %tmp_58, i7 %tmp_60

ST_14: tmp_62 [1/1] 0.00ns (grouped into LUT with out node tmp_67)
:25  %tmp_62 = select i1 %tmp_54, i64 %tmp_57, i64 %buffer_load_2

ST_14: tmp_63 [1/1] 0.00ns (grouped into LUT with out node tmp_67)
:26  %tmp_63 = select i1 %tmp_54, i7 %tmp_59, i7 %tmp_55

ST_14: tmp_64 [1/1] 1.72ns (out node of the LUT)
:27  %tmp_64 = sub i7 63, %tmp_61

ST_14: tmp_65 [1/1] 0.00ns (grouped into LUT with out node tmp_67)
:28  %tmp_65 = zext i7 %tmp_63 to i64

ST_14: tmp_66 [1/1] 0.00ns (grouped into LUT with out node tmp_69)
:29  %tmp_66 = zext i7 %tmp_64 to i64

ST_14: tmp_67 [1/1] 3.57ns (out node of the LUT)
:30  %tmp_67 = lshr i64 %tmp_62, %tmp_65

ST_14: tmp_68 [1/1] 0.00ns (grouped into LUT with out node tmp_69)
:31  %tmp_68 = lshr i64 -1, %tmp_66

ST_14: tmp_69 [1/1] 1.37ns (out node of the LUT)
:32  %tmp_69 = and i64 %tmp_67, %tmp_68

ST_14: tmp_70 [1/1] 0.00ns
:33  %tmp_70 = trunc i64 %tmp_69 to i8

ST_14: stg_224 [1/1] 0.00ns
:34  call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outStream_channel_1_V, i8 %tmp_70)


 <State 15>: 2.71ns
ST_15: j1 [1/1] 0.00ns
.preheader:0  %j1 = phi i13 [ %j_2, %7 ], [ 0, %burst.rd.end ]

ST_15: tmp [1/1] 0.00ns
.preheader:1  %tmp = call i1 @_ssdm_op_BitSelect.i1.i13.i32(i13 %j1, i32 12)

ST_15: stg_227 [1/1] 0.00ns
.preheader:2  br i1 %tmp, label %.loopexit, label %7

ST_15: tmp_11 [1/1] 0.00ns
:0  %tmp_11 = trunc i13 %j1 to i3

ST_15: gepindex74_cast [1/1] 0.00ns
:4  %gepindex74_cast = call i9 @_ssdm_op_PartSelect.i9.i13.i32.i32(i13 %j1, i32 3, i32 11)

ST_15: gepindex276_cast [1/1] 0.00ns
:5  %gepindex276_cast = zext i9 %gepindex74_cast to i64

ST_15: buffer_addr_1 [1/1] 0.00ns
:6  %buffer_addr_1 = getelementptr [512 x i64]* %buffer, i64 0, i64 %gepindex276_cast

ST_15: buffer_load [2/2] 2.71ns
:7  %buffer_load = load i64* %buffer_addr_1, align 8

ST_15: tmp_13 [1/1] 0.00ns
:8  %tmp_13 = call i2 @_ssdm_op_PartSelect.i2.i13.i32.i32(i13 %j1, i32 1, i32 2)

ST_15: buffer_load_1 [2/2] 2.71ns
:30  %buffer_load_1 = load i64* %buffer_addr_1, align 8

ST_15: j_2 [1/1] 1.96ns
:52  %j_2 = add i13 2, %j1


 <State 16>: 7.65ns
ST_16: empty_12 [1/1] 0.00ns
:1  %empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2048, i64 2048, i64 2048)

ST_16: tmp_12 [1/1] 0.00ns
:2  %tmp_12 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6)

ST_16: stg_238 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_16: buffer_load [1/2] 2.71ns
:7  %buffer_load = load i64* %buffer_addr_1, align 8

ST_16: start_pos1 [1/1] 0.00ns
:9  %start_pos1 = call i6 @_ssdm_op_BitConcatenate.i6.i2.i4(i2 %tmp_13, i4 0)

ST_16: end_pos [1/1] 0.00ns
:10  %end_pos = or i6 %start_pos1, 7

ST_16: tmp_15 [1/1] 1.94ns
:11  %tmp_15 = icmp ugt i6 %start_pos1, %end_pos

ST_16: tmp_17 [1/1] 0.00ns
:12  %tmp_17 = zext i6 %start_pos1 to i7

ST_16: tmp_19 [1/1] 0.00ns
:13  %tmp_19 = zext i6 %end_pos to i7

ST_16: tmp_21 [1/1] 0.00ns (grouped into LUT with out node tmp_31)
:14  %tmp_21 = call i64 @llvm.part.select.i64(i64 %buffer_load, i32 63, i32 0)

ST_16: tmp_22 [1/1] 1.72ns
:15  %tmp_22 = sub i7 %tmp_17, %tmp_19

ST_16: tmp_23 [1/1] 0.00ns (grouped into LUT with out node tmp_31)
:16  %tmp_23 = xor i7 %tmp_17, 63

ST_16: tmp_24 [1/1] 1.72ns
:17  %tmp_24 = sub i7 %tmp_19, %tmp_17

ST_16: tmp_25 [1/1] 0.00ns (grouped into LUT with out node tmp_28)
:18  %tmp_25 = select i1 %tmp_15, i7 %tmp_22, i7 %tmp_24

ST_16: tmp_26 [1/1] 0.00ns (grouped into LUT with out node tmp_31)
:19  %tmp_26 = select i1 %tmp_15, i64 %tmp_21, i64 %buffer_load

ST_16: tmp_27 [1/1] 0.00ns (grouped into LUT with out node tmp_31)
:20  %tmp_27 = select i1 %tmp_15, i7 %tmp_23, i7 %tmp_17

ST_16: tmp_28 [1/1] 1.72ns (out node of the LUT)
:21  %tmp_28 = sub i7 63, %tmp_25

ST_16: tmp_29 [1/1] 0.00ns (grouped into LUT with out node tmp_31)
:22  %tmp_29 = zext i7 %tmp_27 to i64

ST_16: tmp_30 [1/1] 0.00ns (grouped into LUT with out node tmp_33)
:23  %tmp_30 = zext i7 %tmp_28 to i64

ST_16: tmp_31 [1/1] 3.57ns (out node of the LUT)
:24  %tmp_31 = lshr i64 %tmp_26, %tmp_29

ST_16: tmp_32 [1/1] 0.00ns (grouped into LUT with out node tmp_33)
:25  %tmp_32 = lshr i64 -1, %tmp_30

ST_16: tmp_33 [1/1] 1.37ns (out node of the LUT)
:26  %tmp_33 = and i64 %tmp_31, %tmp_32

ST_16: tmp_34 [1/1] 0.00ns
:27  %tmp_34 = trunc i64 %tmp_33 to i8

ST_16: stg_259 [1/1] 0.00ns
:28  call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outStream_channel_1_V, i8 %tmp_34)

ST_16: tmp_14 [1/1] 0.00ns
:29  %tmp_14 = or i3 %tmp_11, 1

ST_16: buffer_load_1 [1/2] 2.71ns
:30  %buffer_load_1 = load i64* %buffer_addr_1, align 8

ST_16: start_pos2 [1/1] 0.00ns
:31  %start_pos2 = call i6 @_ssdm_op_BitConcatenate.i6.i3.i3(i3 %tmp_14, i3 0)

ST_16: end_pos1 [1/1] 0.00ns
:32  %end_pos1 = or i6 %start_pos2, 7

ST_16: tmp_35 [1/1] 1.94ns
:33  %tmp_35 = icmp ugt i6 %start_pos2, %end_pos1

ST_16: tmp_36 [1/1] 0.00ns
:34  %tmp_36 = zext i6 %start_pos2 to i7

ST_16: tmp_37 [1/1] 0.00ns
:35  %tmp_37 = zext i6 %end_pos1 to i7

ST_16: tmp_38 [1/1] 0.00ns (grouped into LUT with out node tmp_48)
:36  %tmp_38 = call i64 @llvm.part.select.i64(i64 %buffer_load_1, i32 63, i32 0)

ST_16: tmp_39 [1/1] 1.72ns
:37  %tmp_39 = sub i7 %tmp_36, %tmp_37

ST_16: tmp_40 [1/1] 0.00ns (grouped into LUT with out node tmp_48)
:38  %tmp_40 = xor i7 %tmp_36, 63

ST_16: tmp_41 [1/1] 1.72ns
:39  %tmp_41 = sub i7 %tmp_37, %tmp_36

ST_16: tmp_42 [1/1] 0.00ns (grouped into LUT with out node tmp_45)
:40  %tmp_42 = select i1 %tmp_35, i7 %tmp_39, i7 %tmp_41

ST_16: tmp_43 [1/1] 0.00ns (grouped into LUT with out node tmp_48)
:41  %tmp_43 = select i1 %tmp_35, i64 %tmp_38, i64 %buffer_load_1

ST_16: tmp_44 [1/1] 0.00ns (grouped into LUT with out node tmp_48)
:42  %tmp_44 = select i1 %tmp_35, i7 %tmp_40, i7 %tmp_36

ST_16: tmp_45 [1/1] 1.72ns (out node of the LUT)
:43  %tmp_45 = sub i7 63, %tmp_42

ST_16: tmp_46 [1/1] 0.00ns (grouped into LUT with out node tmp_48)
:44  %tmp_46 = zext i7 %tmp_44 to i64

ST_16: tmp_47 [1/1] 0.00ns (grouped into LUT with out node tmp_50)
:45  %tmp_47 = zext i7 %tmp_45 to i64

ST_16: tmp_48 [1/1] 3.57ns (out node of the LUT)
:46  %tmp_48 = lshr i64 %tmp_43, %tmp_46

ST_16: tmp_49 [1/1] 0.00ns (grouped into LUT with out node tmp_50)
:47  %tmp_49 = lshr i64 -1, %tmp_47

ST_16: tmp_50 [1/1] 1.37ns (out node of the LUT)
:48  %tmp_50 = and i64 %tmp_48, %tmp_49

ST_16: tmp_51 [1/1] 0.00ns
:49  %tmp_51 = trunc i64 %tmp_50 to i8

ST_16: stg_281 [1/1] 0.00ns
:50  call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outstream_channel_2_V, i8 %tmp_51)

ST_16: empty_13 [1/1] 0.00ns
:51  %empty_13 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_12)

ST_16: stg_283 [1/1] 0.00ns
:53  br label %.preheader


 <State 17>: 2.44ns
ST_17: offset_1 [1/1] 2.44ns
.loopexit:0  %offset_1 = add i32 %offset1, 512

ST_17: stg_285 [1/1] 0.00ns
.loopexit:1  br label %1



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 42ns, clock uncertainty: 1ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
