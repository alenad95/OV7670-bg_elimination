// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Background_subtractor_HH_
#define _Background_subtractor_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Background_subtractor : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > stream_new_V_TDATA;
    sc_in< sc_logic > stream_new_V_TVALID;
    sc_out< sc_logic > stream_new_V_TREADY;
    sc_in< sc_lv<8> > stream_ref_V_TDATA;
    sc_in< sc_logic > stream_ref_V_TVALID;
    sc_out< sc_logic > stream_ref_V_TREADY;
    sc_in< sc_logic > enable;
    sc_in< sc_lv<8> > threshold_V;
    sc_out< sc_logic > pixel_done;
    sc_out< sc_lv<8> > stream_out_V_TDATA;
    sc_out< sc_logic > stream_out_V_TVALID;
    sc_in< sc_logic > stream_out_V_TREADY;


    // Module declarations
    Background_subtractor(sc_module_name name);
    SC_HAS_PROCESS(Background_subtractor);

    ~Background_subtractor();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > stream_new_V_0_data_out;
    sc_signal< sc_logic > stream_new_V_0_vld_in;
    sc_signal< sc_logic > stream_new_V_0_vld_out;
    sc_signal< sc_logic > stream_new_V_0_ack_in;
    sc_signal< sc_logic > stream_new_V_0_ack_out;
    sc_signal< sc_lv<8> > stream_new_V_0_payload_A;
    sc_signal< sc_lv<8> > stream_new_V_0_payload_B;
    sc_signal< sc_logic > stream_new_V_0_sel_rd;
    sc_signal< sc_logic > stream_new_V_0_sel_wr;
    sc_signal< sc_logic > stream_new_V_0_sel;
    sc_signal< sc_logic > stream_new_V_0_load_A;
    sc_signal< sc_logic > stream_new_V_0_load_B;
    sc_signal< sc_lv<2> > stream_new_V_0_state;
    sc_signal< sc_logic > stream_new_V_0_state_cmp_full;
    sc_signal< sc_lv<8> > stream_ref_V_0_data_out;
    sc_signal< sc_logic > stream_ref_V_0_vld_in;
    sc_signal< sc_logic > stream_ref_V_0_vld_out;
    sc_signal< sc_logic > stream_ref_V_0_ack_in;
    sc_signal< sc_logic > stream_ref_V_0_ack_out;
    sc_signal< sc_lv<8> > stream_ref_V_0_payload_A;
    sc_signal< sc_lv<8> > stream_ref_V_0_payload_B;
    sc_signal< sc_logic > stream_ref_V_0_sel_rd;
    sc_signal< sc_logic > stream_ref_V_0_sel_wr;
    sc_signal< sc_logic > stream_ref_V_0_sel;
    sc_signal< sc_logic > stream_ref_V_0_load_A;
    sc_signal< sc_logic > stream_ref_V_0_load_B;
    sc_signal< sc_lv<2> > stream_ref_V_0_state;
    sc_signal< sc_logic > stream_ref_V_0_state_cmp_full;
    sc_signal< sc_lv<8> > stream_out_V_1_data_in;
    sc_signal< sc_lv<8> > stream_out_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_1_ack_out;
    sc_signal< sc_lv<8> > stream_out_V_1_payload_A;
    sc_signal< sc_lv<8> > stream_out_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_1_sel;
    sc_signal< sc_logic > stream_out_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_1_state;
    sc_signal< sc_logic > stream_out_V_1_state_cmp_full;
    sc_signal< sc_logic > stream_new_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln22_fu_151_p2;
    sc_signal< sc_logic > stream_ref_V_TDATA_blk_n;
    sc_signal< sc_logic > stream_out_V_TDATA_blk_n;
    sc_signal< sc_lv<1> > enable_read_read_fu_76_p2;
    sc_signal< sc_lv<1> > icmp_ln887_fu_201_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > enable_read_reg_234;
    sc_signal< sc_lv<1> > icmp_ln887_reg_238;
    sc_signal< sc_lv<9> > j_fu_145_p2;
    sc_signal< sc_lv<9> > j_reg_216;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<10> > i_fu_157_p2;
    sc_signal< sc_lv<10> > i_reg_224;
    sc_signal< bool > ap_block_state3;
    sc_signal< bool > ap_predicate_op36_write_state3;
    sc_signal< bool > ap_predicate_op47_write_state3;
    sc_signal< bool > ap_predicate_op48_write_state3;
    sc_signal< bool > ap_block_state3_io;
    sc_signal< sc_lv<1> > xor_ln22_fu_207_p2;
    sc_signal< bool > ap_predicate_op52_write_state4;
    sc_signal< bool > ap_predicate_op54_write_state4;
    sc_signal< bool > ap_block_state4_io;
    sc_signal< sc_lv<9> > j_0_reg_104;
    sc_signal< sc_lv<10> > i_0_reg_115;
    sc_signal< sc_lv<1> > icmp_ln21_fu_139_p2;
    sc_signal< sc_lv<1> > phi_ln47_reg_126;
    sc_signal< sc_logic > pixel_done_preg;
    sc_signal< sc_lv<9> > lhs_V_fu_163_p1;
    sc_signal< sc_lv<9> > rhs_V_fu_167_p1;
    sc_signal< sc_lv<9> > ret_V_fu_171_p2;
    sc_signal< sc_lv<1> > abscond_fu_183_p2;
    sc_signal< sc_lv<9> > neg_fu_177_p2;
    sc_signal< sc_lv<9> > i_op_assign_fu_189_p3;
    sc_signal< sc_lv<9> > zext_ln887_fu_197_p1;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<9> ap_const_lv9_1E0;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<10> ap_const_lv10_280;
    static const sc_lv<10> ap_const_lv10_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_abscond_fu_183_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_state2();
    void thread_ap_block_state3();
    void thread_ap_block_state3_io();
    void thread_ap_block_state4_io();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_predicate_op36_write_state3();
    void thread_ap_predicate_op47_write_state3();
    void thread_ap_predicate_op48_write_state3();
    void thread_ap_predicate_op52_write_state4();
    void thread_ap_predicate_op54_write_state4();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_enable_read_read_fu_76_p2();
    void thread_i_fu_157_p2();
    void thread_i_op_assign_fu_189_p3();
    void thread_icmp_ln21_fu_139_p2();
    void thread_icmp_ln22_fu_151_p2();
    void thread_icmp_ln887_fu_201_p2();
    void thread_j_fu_145_p2();
    void thread_lhs_V_fu_163_p1();
    void thread_neg_fu_177_p2();
    void thread_pixel_done();
    void thread_ret_V_fu_171_p2();
    void thread_rhs_V_fu_167_p1();
    void thread_stream_new_V_0_ack_in();
    void thread_stream_new_V_0_ack_out();
    void thread_stream_new_V_0_data_out();
    void thread_stream_new_V_0_load_A();
    void thread_stream_new_V_0_load_B();
    void thread_stream_new_V_0_sel();
    void thread_stream_new_V_0_state_cmp_full();
    void thread_stream_new_V_0_vld_in();
    void thread_stream_new_V_0_vld_out();
    void thread_stream_new_V_TDATA_blk_n();
    void thread_stream_new_V_TREADY();
    void thread_stream_out_V_1_ack_in();
    void thread_stream_out_V_1_ack_out();
    void thread_stream_out_V_1_data_in();
    void thread_stream_out_V_1_data_out();
    void thread_stream_out_V_1_load_A();
    void thread_stream_out_V_1_load_B();
    void thread_stream_out_V_1_sel();
    void thread_stream_out_V_1_state_cmp_full();
    void thread_stream_out_V_1_vld_in();
    void thread_stream_out_V_1_vld_out();
    void thread_stream_out_V_TDATA();
    void thread_stream_out_V_TDATA_blk_n();
    void thread_stream_out_V_TVALID();
    void thread_stream_ref_V_0_ack_in();
    void thread_stream_ref_V_0_ack_out();
    void thread_stream_ref_V_0_data_out();
    void thread_stream_ref_V_0_load_A();
    void thread_stream_ref_V_0_load_B();
    void thread_stream_ref_V_0_sel();
    void thread_stream_ref_V_0_state_cmp_full();
    void thread_stream_ref_V_0_vld_in();
    void thread_stream_ref_V_0_vld_out();
    void thread_stream_ref_V_TDATA_blk_n();
    void thread_stream_ref_V_TREADY();
    void thread_xor_ln22_fu_207_p2();
    void thread_zext_ln887_fu_197_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
